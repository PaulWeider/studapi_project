{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/energ/Downloads/Telegram Desktop/students_app_profile (3)/students_app_profile/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports, require(\"react\")) : \"function\" == typeof define && define.amd ? define([\"exports\", \"react\"], t) : t((e = e || self).ReactTable = {}, e.React);\n}(this, function (e, t) {\n  \"use strict\";\n\n  function n(e, t, n, o, r, i, u) {\n    try {\n      var l = e[i](u),\n        s = l.value;\n    } catch (e) {\n      return void n(e);\n    }\n    l.done ? t(s) : Promise.resolve(s).then(o, r);\n  }\n  function o(e) {\n    return function () {\n      var t = this,\n        o = arguments;\n      return new Promise(function (r, i) {\n        var u = e.apply(t, o);\n        function l(e) {\n          n(u, r, i, l, s, \"next\", e);\n        }\n        function s(e) {\n          n(u, r, i, l, s, \"throw\", e);\n        }\n        l(void 0);\n      });\n    };\n  }\n  function r() {\n    return (r = Object.assign || function (e) {\n      for (var t = 1; t < arguments.length; t++) {\n        var n = arguments[t];\n        for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);\n      }\n      return e;\n    }).apply(this, arguments);\n  }\n  function i(e, t) {\n    if (null == e) return {};\n    var n,\n      o,\n      r = {},\n      i = Object.keys(e);\n    for (o = 0; o < i.length; o++) n = i[o], t.indexOf(n) >= 0 || (r[n] = e[n]);\n    return r;\n  }\n  function u(e) {\n    var t = function (e, t) {\n      if (\"object\" != typeof e || null === e) return e;\n      var n = e[Symbol.toPrimitive];\n      if (void 0 !== n) {\n        var o = n.call(e, t || \"default\");\n        if (\"object\" != typeof o) return o;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n      }\n      return (\"string\" === t ? String : Number)(e);\n    }(e, \"string\");\n    return \"symbol\" == typeof t ? t : String(t);\n  }\n  t = t && Object.prototype.hasOwnProperty.call(t, \"default\") ? t.default : t;\n  var l = {\n      init: \"init\"\n    },\n    s = function s(e) {\n      var t = e.value;\n      return void 0 === t ? \"\" : t;\n    },\n    a = function a() {\n      return t.createElement(t.Fragment, null, \" \");\n    },\n    c = {\n      Cell: s,\n      width: 150,\n      minWidth: 0,\n      maxWidth: Number.MAX_SAFE_INTEGER\n    };\n  function d() {\n    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];\n    return t.reduce(function (e, t) {\n      var n = t.style,\n        o = t.className;\n      return e = r({}, e, {}, i(t, [\"style\", \"className\"])), n && (e.style = e.style ? r({}, e.style || {}, {}, n || {}) : n), o && (e.className = e.className ? e.className + \" \" + o : o), \"\" === e.className && delete e.className, e;\n    }, {});\n  }\n  var f = function f(e, t) {\n      return void 0 === t && (t = {}), function (n) {\n        return void 0 === n && (n = {}), [].concat(e, [n]).reduce(function (e, o) {\n          return function e(t, n, o) {\n            return \"function\" == typeof n ? e({}, n(t, o)) : Array.isArray(n) ? d.apply(void 0, [t].concat(n)) : d(t, n);\n          }(e, o, r({}, t, {\n            userProps: n\n          }));\n        }, {});\n      };\n    },\n    p = function p(e, t, n, o) {\n      return void 0 === n && (n = {}), e.reduce(function (e, t) {\n        return t(e, n);\n      }, t);\n    },\n    g = function g(e, t, n) {\n      return void 0 === n && (n = {}), e.forEach(function (e) {\n        e(t, n);\n      });\n    };\n  function v(e, t, n, o) {\n    e.findIndex(function (e) {\n      return e.pluginName === n;\n    });\n    t.forEach(function (t) {\n      e.findIndex(function (e) {\n        return e.pluginName === t;\n      });\n    });\n  }\n  function m(e, t) {\n    return \"function\" == typeof e ? e(t) : e;\n  }\n  function h(e) {\n    var n = t.useRef();\n    return n.current = e, t.useCallback(function () {\n      return n.current;\n    }, []);\n  }\n  var y = \"undefined\" != typeof document ? t.useLayoutEffect : t.useEffect;\n  function w(e, n) {\n    var o = t.useRef(!1);\n    y(function () {\n      o.current && e(), o.current = !0;\n    }, n);\n  }\n  function R(e, t, n) {\n    return void 0 === n && (n = {}), function (o, i) {\n      void 0 === i && (i = {});\n      var u = \"string\" == typeof o ? t[o] : o;\n      if (void 0 === u) throw console.info(t), new Error(\"Renderer Error ☝️\");\n      return b(u, r({}, e, {\n        column: t\n      }, n, {}, i));\n    };\n  }\n  function b(e, n) {\n    return function (e) {\n      return \"function\" == typeof e && (t = Object.getPrototypeOf(e)).prototype && t.prototype.isReactComponent;\n      var t;\n    }(o = e) || \"function\" == typeof o || function (e) {\n      return \"object\" == typeof e && \"symbol\" == typeof e.$$typeof && [\"react.memo\", \"react.forward_ref\"].includes(e.$$typeof.description);\n    }(o) ? t.createElement(e, n) : e;\n    var o;\n  }\n  function S(e, t, n) {\n    return void 0 === n && (n = 0), e.map(function (e) {\n      return x(e = r({}, e, {\n        parent: t,\n        depth: n\n      })), e.columns && (e.columns = S(e.columns, e, n + 1)), e;\n    });\n  }\n  function C(e) {\n    return G(e, \"columns\");\n  }\n  function x(e) {\n    var t = e.id,\n      n = e.accessor,\n      o = e.Header;\n    if (\"string\" == typeof n) {\n      t = t || n;\n      var r = n.split(\".\");\n      n = function n(e) {\n        return function (e, t, n) {\n          if (!t) return e;\n          var o,\n            r = \"function\" == typeof t ? t : JSON.stringify(t),\n            i = E.get(r) || function () {\n              var e = function (e) {\n                return function e(t, n) {\n                  void 0 === n && (n = []);\n                  if (Array.isArray(t)) for (var o = 0; o < t.length; o += 1) e(t[o], n);else n.push(t);\n                  return n;\n                }(e).map(function (e) {\n                  return String(e).replace(\".\", \"_\");\n                }).join(\".\").replace(T, \".\").replace(O, \"\").split(\".\");\n              }(t);\n              return E.set(r, e), e;\n            }();\n          try {\n            o = i.reduce(function (e, t) {\n              return e[t];\n            }, e);\n          } catch (e) {}\n          return void 0 !== o ? o : n;\n        }(e, r);\n      };\n    }\n    if (!t && \"string\" == typeof o && o && (t = o), !t && e.columns) throw console.error(e), new Error('A column ID (or unique \"Header\" value) is required!');\n    if (!t) throw console.error(e), new Error(\"A column ID (or string accessor) is required!\");\n    return Object.assign(e, {\n      id: t,\n      accessor: n\n    }), e;\n  }\n  function P(e, t) {\n    if (!t) throw new Error();\n    return Object.assign(e, r({\n      Header: a,\n      Footer: a\n    }, c, {}, t, {}, e)), Object.assign(e, {\n      originalWidth: e.width\n    }), e;\n  }\n  function B(e, t, n) {\n    void 0 === n && (n = function n() {\n      return {};\n    });\n    for (var o = [], i = e, u = 0, l = function l() {\n        return u++;\n      }, s = function s() {\n        var e = {\n            headers: []\n          },\n          u = [],\n          s = i.some(function (e) {\n            return e.parent;\n          });\n        i.forEach(function (o) {\n          var i,\n            a = [].concat(u).reverse()[0];\n          if (s) {\n            if (o.parent) i = r({}, o.parent, {\n              originalId: o.parent.id,\n              id: o.parent.id + \"_\" + l(),\n              headers: [o]\n            }, n(o));else i = P(r({\n              originalId: o.id + \"_placeholder\",\n              id: o.id + \"_placeholder_\" + l(),\n              placeholderOf: o,\n              headers: [o]\n            }, n(o)), t);\n            a && a.originalId === i.originalId ? a.headers.push(o) : u.push(i);\n          }\n          e.headers.push(o);\n        }), o.push(e), i = u;\n      }; i.length;) s();\n    return o.reverse();\n  }\n  var E = new Map();\n  function I() {\n    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];\n    for (var o = 0; o < t.length; o += 1) if (void 0 !== t[o]) return t[o];\n  }\n  function F(e) {\n    if (\"function\" == typeof e) return e;\n  }\n  function G(e, t) {\n    var n = [];\n    return function e(o) {\n      o.forEach(function (o) {\n        o[t] ? e(o[t]) : n.push(o);\n      });\n    }(e), n;\n  }\n  function A(e, t) {\n    var n = t.manualExpandedKey,\n      o = t.expanded,\n      r = t.expandSubRows,\n      i = void 0 === r || r,\n      u = [];\n    return e.forEach(function (e) {\n      return function e(t, r) {\n        void 0 === r && (r = !0), t.isExpanded = t.original && t.original[n] || o[t.id], t.canExpand = t.subRows && !!t.subRows.length, r && u.push(t), t.subRows && t.subRows.length && t.isExpanded && t.subRows.forEach(function (t) {\n          return e(t, i);\n        });\n      }(e);\n    }), u;\n  }\n  function k(e, t, n) {\n    return F(e) || t[e] || n[e] || n.text;\n  }\n  function H(e, t, n) {\n    return e ? e(t, n) : void 0 === t;\n  }\n  function W() {\n    throw new Error(\"React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.\");\n  }\n  var z = null;\n  var T = /\\[/g,\n    O = /\\]/g;\n  var M = function M(e) {\n      return r({\n        role: \"table\"\n      }, e);\n    },\n    j = function j(e) {\n      return r({\n        role: \"rowgroup\"\n      }, e);\n    },\n    L = function L(e, t) {\n      var n = t.column;\n      return r({\n        key: \"header_\" + n.id,\n        colSpan: n.totalVisibleHeaderCount,\n        role: \"columnheader\"\n      }, e);\n    },\n    N = function N(e, t) {\n      var n = t.column;\n      return r({\n        key: \"footer_\" + n.id,\n        colSpan: n.totalVisibleHeaderCount\n      }, e);\n    },\n    D = function D(e, t) {\n      return r({\n        key: \"headerGroup_\" + t.index,\n        role: \"row\"\n      }, e);\n    },\n    V = function V(e, t) {\n      return r({\n        key: \"footerGroup_\" + t.index\n      }, e);\n    },\n    _ = function _(e, t) {\n      return r({\n        key: \"row_\" + t.row.id,\n        role: \"row\"\n      }, e);\n    },\n    X = function X(e, t) {\n      var n = t.cell;\n      return r({\n        key: \"cell_\" + n.row.id + \"_\" + n.column.id,\n        role: \"cell\"\n      }, e);\n    };\n  function q() {\n    return {\n      useOptions: [],\n      stateReducers: [],\n      useControlledState: [],\n      columns: [],\n      columnsDeps: [],\n      allColumns: [],\n      allColumnsDeps: [],\n      accessValue: [],\n      materializedColumns: [],\n      materializedColumnsDeps: [],\n      useInstanceAfterData: [],\n      visibleColumns: [],\n      visibleColumnsDeps: [],\n      headerGroups: [],\n      headerGroupsDeps: [],\n      useInstanceBeforeDimensions: [],\n      useInstance: [],\n      prepareRow: [],\n      getTableProps: [M],\n      getTableBodyProps: [j],\n      getHeaderGroupProps: [D],\n      getFooterGroupProps: [V],\n      getHeaderProps: [L],\n      getFooterProps: [N],\n      getRowProps: [_],\n      getCellProps: [X],\n      useFinalInstance: []\n    };\n  }\n  l.resetHiddenColumns = \"resetHiddenColumns\", l.toggleHideColumn = \"toggleHideColumn\", l.setHiddenColumns = \"setHiddenColumns\", l.toggleHideAllColumns = \"toggleHideAllColumns\";\n  var K = function K(e) {\n    e.getToggleHiddenProps = [U], e.getToggleHideAllColumnsProps = [$], e.stateReducers.push(J), e.useInstanceBeforeDimensions.push(Y), e.headerGroupsDeps.push(function (e, t) {\n      var n = t.instance;\n      return [].concat(e, [n.state.hiddenColumns]);\n    }), e.useInstance.push(Q);\n  };\n  K.pluginName = \"useColumnVisibility\";\n  var U = function U(e, t) {\n      var n = t.column;\n      return [e, {\n        onChange: function onChange(e) {\n          n.toggleHidden(!e.target.checked);\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        checked: n.isVisible,\n        title: \"Toggle Column Visible\"\n      }];\n    },\n    $ = function $(e, t) {\n      var n = t.instance;\n      return [e, {\n        onChange: function onChange(e) {\n          n.toggleHideAllColumns(!e.target.checked);\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        checked: !n.allColumnsHidden && !n.state.hiddenColumns.length,\n        title: \"Toggle All Columns Hidden\",\n        indeterminate: !n.allColumnsHidden && n.state.hiddenColumns.length\n      }];\n    };\n  function J(e, t, n, o) {\n    if (t.type === l.init) return r({\n      hiddenColumns: []\n    }, e);\n    if (t.type === l.resetHiddenColumns) return r({}, e, {\n      hiddenColumns: o.initialState.hiddenColumns || []\n    });\n    if (t.type === l.toggleHideColumn) {\n      var i = (void 0 !== t.value ? t.value : !e.hiddenColumns.includes(t.columnId)) ? [].concat(e.hiddenColumns, [t.columnId]) : e.hiddenColumns.filter(function (e) {\n        return e !== t.columnId;\n      });\n      return r({}, e, {\n        hiddenColumns: i\n      });\n    }\n    return t.type === l.setHiddenColumns ? r({}, e, {\n      hiddenColumns: m(t.value, e.hiddenColumns)\n    }) : t.type === l.toggleHideAllColumns ? r({}, e, {\n      hiddenColumns: (void 0 !== t.value ? t.value : !e.hiddenColumns.length) ? o.allColumns.map(function (e) {\n        return e.id;\n      }) : []\n    }) : void 0;\n  }\n  function Y(e) {\n    var n = e.headers,\n      o = e.state.hiddenColumns;\n    t.useRef(!1).current;\n    var r = 0;\n    n.forEach(function (e) {\n      return r += function e(t, n) {\n        t.isVisible = n && !o.includes(t.id);\n        var r = 0;\n        return t.headers && t.headers.length ? t.headers.forEach(function (n) {\n          return r += e(n, t.isVisible);\n        }) : r = t.isVisible ? 1 : 0, t.totalVisibleHeaderCount = r, r;\n      }(e, !0);\n    });\n  }\n  function Q(e) {\n    var n = e.columns,\n      o = e.flatHeaders,\n      r = e.dispatch,\n      i = e.allColumns,\n      u = e.getHooks,\n      s = e.state.hiddenColumns,\n      a = e.autoResetHiddenColumns,\n      c = void 0 === a || a,\n      d = h(e),\n      p = i.length === s.length,\n      g = t.useCallback(function (e, t) {\n        return r({\n          type: l.toggleHideColumn,\n          columnId: e,\n          value: t\n        });\n      }, [r]),\n      v = t.useCallback(function (e) {\n        return r({\n          type: l.setHiddenColumns,\n          value: e\n        });\n      }, [r]),\n      m = t.useCallback(function (e) {\n        return r({\n          type: l.toggleHideAllColumns,\n          value: e\n        });\n      }, [r]),\n      y = f(u().getToggleHideAllColumnsProps, {\n        instance: d()\n      });\n    o.forEach(function (e) {\n      e.toggleHidden = function (t) {\n        r({\n          type: l.toggleHideColumn,\n          columnId: e.id,\n          value: t\n        });\n      }, e.getToggleHiddenProps = f(u().getToggleHiddenProps, {\n        instance: d(),\n        column: e\n      });\n    });\n    var R = h(c);\n    w(function () {\n      R() && r({\n        type: l.resetHiddenColumns\n      });\n    }, [r, n]), Object.assign(e, {\n      allColumnsHidden: p,\n      toggleHideColumn: g,\n      setHiddenColumns: v,\n      toggleHideAllColumns: m,\n      getToggleHideAllColumnsProps: y\n    });\n  }\n  var Z = {},\n    ee = {},\n    te = function te(e, t, n) {\n      return e;\n    },\n    ne = function ne(e, t) {\n      return e.subRows || [];\n    },\n    oe = function oe(e, t, n) {\n      return \"\" + (n ? [n.id, t].join(\".\") : t);\n    },\n    re = function re(e) {\n      return e;\n    };\n  function ie(e) {\n    var t = e.initialState,\n      n = void 0 === t ? Z : t,\n      o = e.defaultColumn,\n      u = void 0 === o ? ee : o,\n      l = e.getSubRows,\n      s = void 0 === l ? ne : l,\n      a = e.getRowId,\n      c = void 0 === a ? oe : a,\n      d = e.stateReducer,\n      f = void 0 === d ? te : d,\n      p = e.useControlledState,\n      g = void 0 === p ? re : p;\n    return r({}, i(e, [\"initialState\", \"defaultColumn\", \"getSubRows\", \"getRowId\", \"stateReducer\", \"useControlledState\"]), {\n      initialState: n,\n      defaultColumn: u,\n      getSubRows: s,\n      getRowId: c,\n      stateReducer: f,\n      useControlledState: g\n    });\n  }\n  function ue(e, t) {\n    void 0 === t && (t = 0);\n    var n = 0,\n      o = 0,\n      r = 0,\n      i = 0;\n    return e.forEach(function (e) {\n      var u = e.headers;\n      if (e.totalLeft = t, u && u.length) {\n        var l = ue(u, t),\n          s = l[0],\n          a = l[1],\n          c = l[2],\n          d = l[3];\n        e.totalMinWidth = s, e.totalWidth = a, e.totalMaxWidth = c, e.totalFlexWidth = d;\n      } else e.totalMinWidth = e.minWidth, e.totalWidth = Math.min(Math.max(e.minWidth, e.width), e.maxWidth), e.totalMaxWidth = e.maxWidth, e.totalFlexWidth = e.canResize ? e.totalWidth : 0;\n      e.isVisible && (t += e.totalWidth, n += e.totalMinWidth, o += e.totalWidth, r += e.totalMaxWidth, i += e.totalFlexWidth);\n    }), [n, o, r, i];\n  }\n  function le(e) {\n    var t = e.data,\n      n = e.rows,\n      o = e.flatRows,\n      r = e.rowsById,\n      i = e.column,\n      u = e.getRowId,\n      l = e.getSubRows,\n      s = e.accessValueHooks,\n      a = e.getInstance;\n    t.forEach(function (e, c) {\n      return function e(n, c, d, f, g) {\n        void 0 === d && (d = 0);\n        var v = n,\n          m = u(n, c, f),\n          h = r[m];\n        if (h) h.subRows && h.originalSubRows.forEach(function (t, n) {\n          return e(t, n, d + 1, h);\n        });else if ((h = {\n          id: m,\n          original: v,\n          index: c,\n          depth: d,\n          cells: [{}]\n        }).cells.map = W, h.cells.filter = W, h.cells.forEach = W, h.cells[0].getCellProps = W, h.values = {}, g.push(h), o.push(h), r[m] = h, h.originalSubRows = l(n, c), h.originalSubRows) {\n          var y = [];\n          h.originalSubRows.forEach(function (t, n) {\n            return e(t, n, d + 1, h, y);\n          }), h.subRows = y;\n        }\n        i.accessor && (h.values[i.id] = i.accessor(n, c, h, g, t)), h.values[i.id] = p(s, h.values[i.id], {\n          row: h,\n          column: i,\n          instance: a()\n        });\n      }(e, c, 0, void 0, n);\n    });\n  }\n  l.resetExpanded = \"resetExpanded\", l.toggleRowExpanded = \"toggleRowExpanded\", l.toggleAllRowsExpanded = \"toggleAllRowsExpanded\";\n  var se = function se(e) {\n    e.getToggleAllRowsExpandedProps = [ae], e.getToggleRowExpandedProps = [ce], e.stateReducers.push(de), e.useInstance.push(fe), e.prepareRow.push(pe);\n  };\n  se.pluginName = \"useExpanded\";\n  var ae = function ae(e, t) {\n      var n = t.instance;\n      return [e, {\n        onClick: function onClick(e) {\n          n.toggleAllRowsExpanded();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        title: \"Toggle All Rows Expanded\"\n      }];\n    },\n    ce = function ce(e, t) {\n      var n = t.row;\n      return [e, {\n        onClick: function onClick() {\n          n.toggleRowExpanded();\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        title: \"Toggle Row Expanded\"\n      }];\n    };\n  function de(e, t, n, o) {\n    if (t.type === l.init) return r({\n      expanded: {}\n    }, e);\n    if (t.type === l.resetExpanded) return r({}, e, {\n      expanded: o.initialState.expanded || {}\n    });\n    if (t.type === l.toggleAllRowsExpanded) {\n      var s = t.value,\n        a = o.rowsById,\n        c = Object.keys(a).length === Object.keys(e.expanded).length;\n      if (void 0 !== s ? s : !c) {\n        var d = {};\n        return Object.keys(a).forEach(function (e) {\n          d[e] = !0;\n        }), r({}, e, {\n          expanded: d\n        });\n      }\n      return r({}, e, {\n        expanded: {}\n      });\n    }\n    if (t.type === l.toggleRowExpanded) {\n      var f,\n        p = t.id,\n        g = t.value,\n        v = e.expanded[p],\n        m = void 0 !== g ? g : !v;\n      if (!v && m) return r({}, e, {\n        expanded: r({}, e.expanded, (f = {}, f[p] = !0, f))\n      });\n      if (v && !m) {\n        var h = e.expanded;\n        h[p];\n        return r({}, e, {\n          expanded: i(h, [p].map(u))\n        });\n      }\n      return e;\n    }\n  }\n  function fe(e) {\n    var n = e.data,\n      o = e.rows,\n      r = e.rowsById,\n      i = e.manualExpandedKey,\n      u = void 0 === i ? \"expanded\" : i,\n      s = e.paginateExpandedRows,\n      a = void 0 === s || s,\n      c = e.expandSubRows,\n      d = void 0 === c || c,\n      p = e.autoResetExpanded,\n      g = void 0 === p || p,\n      m = e.getHooks,\n      y = e.plugins,\n      R = e.state.expanded,\n      b = e.dispatch;\n    v(y, [\"useSortBy\", \"useGroupBy\", \"usePivotColumns\", \"useGlobalFilter\"], \"useExpanded\");\n    var S = h(g),\n      C = Boolean(Object.keys(r).length && Object.keys(R).length);\n    C && Object.keys(r).some(function (e) {\n      return !R[e];\n    }) && (C = !1), w(function () {\n      S() && b({\n        type: l.resetExpanded\n      });\n    }, [b, n]);\n    var x = t.useCallback(function (e, t) {\n        b({\n          type: l.toggleRowExpanded,\n          id: e,\n          value: t\n        });\n      }, [b]),\n      P = t.useCallback(function (e) {\n        return b({\n          type: l.toggleAllRowsExpanded,\n          value: e\n        });\n      }, [b]),\n      B = t.useMemo(function () {\n        return a ? A(o, {\n          manualExpandedKey: u,\n          expanded: R,\n          expandSubRows: d\n        }) : o;\n      }, [a, o, u, R, d]),\n      E = t.useMemo(function () {\n        return function (e) {\n          var t = 0;\n          return Object.keys(e).forEach(function (e) {\n            var n = e.split(\".\");\n            t = Math.max(t, n.length);\n          }), t;\n        }(R);\n      }, [R]),\n      I = h(e),\n      F = f(m().getToggleAllRowsExpandedProps, {\n        instance: I()\n      });\n    Object.assign(e, {\n      preExpandedRows: o,\n      expandedRows: B,\n      rows: B,\n      expandedDepth: E,\n      isAllRowsExpanded: C,\n      toggleRowExpanded: x,\n      toggleAllRowsExpanded: P,\n      getToggleAllRowsExpandedProps: F\n    });\n  }\n  function pe(e, t) {\n    var n = t.instance.getHooks,\n      o = t.instance;\n    e.toggleRowExpanded = function (t) {\n      return o.toggleRowExpanded(e.id, t);\n    }, e.getToggleRowExpandedProps = f(n().getToggleRowExpandedProps, {\n      instance: o,\n      row: e\n    });\n  }\n  var ge = function ge(e, t, n) {\n    return e = e.filter(function (e) {\n      return t.some(function (t) {\n        var o = e.values[t];\n        return String(o).toLowerCase().includes(String(n).toLowerCase());\n      });\n    });\n  };\n  ge.autoRemove = function (e) {\n    return !e;\n  };\n  var ve = function ve(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        var o = e.values[t];\n        return void 0 === o || String(o).toLowerCase() === String(n).toLowerCase();\n      });\n    });\n  };\n  ve.autoRemove = function (e) {\n    return !e;\n  };\n  var me = function me(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        var o = e.values[t];\n        return void 0 === o || String(o) === String(n);\n      });\n    });\n  };\n  me.autoRemove = function (e) {\n    return !e;\n  };\n  var he = function he(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        return e.values[t].includes(n);\n      });\n    });\n  };\n  he.autoRemove = function (e) {\n    return !e || !e.length;\n  };\n  var ye = function ye(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        var o = e.values[t];\n        return o && o.length && n.every(function (e) {\n          return o.includes(e);\n        });\n      });\n    });\n  };\n  ye.autoRemove = function (e) {\n    return !e || !e.length;\n  };\n  var we = function we(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        var o = e.values[t];\n        return o && o.length && n.some(function (e) {\n          return o.includes(e);\n        });\n      });\n    });\n  };\n  we.autoRemove = function (e) {\n    return !e || !e.length;\n  };\n  var Re = function Re(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        var o = e.values[t];\n        return n.includes(o);\n      });\n    });\n  };\n  Re.autoRemove = function (e) {\n    return !e || !e.length;\n  };\n  var be = function be(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        return e.values[t] === n;\n      });\n    });\n  };\n  be.autoRemove = function (e) {\n    return void 0 === e;\n  };\n  var Se = function Se(e, t, n) {\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        return e.values[t] == n;\n      });\n    });\n  };\n  Se.autoRemove = function (e) {\n    return null == e;\n  };\n  var Ce = function Ce(e, t, n) {\n    var o = n || [],\n      r = o[0],\n      i = o[1];\n    if ((r = \"number\" == typeof r ? r : -1 / 0) > (i = \"number\" == typeof i ? i : 1 / 0)) {\n      var u = r;\n      r = i, i = u;\n    }\n    return e.filter(function (e) {\n      return t.some(function (t) {\n        var n = e.values[t];\n        return n >= r && n <= i;\n      });\n    });\n  };\n  Ce.autoRemove = function (e) {\n    return !e || \"number\" != typeof e[0] && \"number\" != typeof e[1];\n  };\n  var xe = Object.freeze({\n    __proto__: null,\n    text: ge,\n    exactText: ve,\n    exactTextCase: me,\n    includes: he,\n    includesAll: ye,\n    includesSome: we,\n    includesValue: Re,\n    exact: be,\n    equals: Se,\n    between: Ce\n  });\n  l.resetFilters = \"resetFilters\", l.setFilter = \"setFilter\", l.setAllFilters = \"setAllFilters\";\n  var Pe = function Pe(e) {\n    e.stateReducers.push(Be), e.useInstance.push(Ee);\n  };\n  function Be(e, t, n, o) {\n    if (t.type === l.init) return r({\n      filters: []\n    }, e);\n    if (t.type === l.resetFilters) return r({}, e, {\n      filters: o.initialState.filters || []\n    });\n    if (t.type === l.setFilter) {\n      var i = t.columnId,\n        u = t.filterValue,\n        s = o.allColumns,\n        a = o.filterTypes,\n        c = s.find(function (e) {\n          return e.id === i;\n        });\n      if (!c) throw new Error(\"React-Table: Could not find a column with id: \" + i);\n      var d = k(c.filter, a || {}, xe),\n        f = e.filters.find(function (e) {\n          return e.id === i;\n        }),\n        p = m(u, f && f.value);\n      return H(d.autoRemove, p, c) ? r({}, e, {\n        filters: e.filters.filter(function (e) {\n          return e.id !== i;\n        })\n      }) : r({}, e, f ? {\n        filters: e.filters.map(function (e) {\n          return e.id === i ? {\n            id: i,\n            value: p\n          } : e;\n        })\n      } : {\n        filters: [].concat(e.filters, [{\n          id: i,\n          value: p\n        }])\n      });\n    }\n    if (t.type === l.setAllFilters) {\n      var g = t.filters,\n        v = o.allColumns,\n        h = o.filterTypes;\n      return r({}, e, {\n        filters: m(g, e.filters).filter(function (e) {\n          var t = v.find(function (t) {\n            return t.id === e.id;\n          });\n          return !H(k(t.filter, h || {}, xe).autoRemove, e.value, t);\n        })\n      });\n    }\n  }\n  function Ee(e) {\n    var n = e.data,\n      o = e.rows,\n      r = e.flatRows,\n      i = e.rowsById,\n      u = e.allColumns,\n      s = e.filterTypes,\n      a = e.manualFilters,\n      c = e.defaultCanFilter,\n      d = void 0 !== c && c,\n      f = e.disableFilters,\n      p = e.state.filters,\n      g = e.dispatch,\n      v = e.autoResetFilters,\n      m = void 0 === v || v,\n      y = t.useCallback(function (e, t) {\n        g({\n          type: l.setFilter,\n          columnId: e,\n          filterValue: t\n        });\n      }, [g]),\n      R = t.useCallback(function (e) {\n        g({\n          type: l.setAllFilters,\n          filters: e\n        });\n      }, [g]);\n    u.forEach(function (e) {\n      var t = e.id,\n        n = e.accessor,\n        o = e.defaultCanFilter,\n        r = e.disableFilters;\n      e.canFilter = n ? I(!0 !== r && void 0, !0 !== f && void 0, !0) : I(o, d, !1), e.setFilter = function (t) {\n        return y(e.id, t);\n      };\n      var i = p.find(function (e) {\n        return e.id === t;\n      });\n      e.filterValue = i && i.value;\n    });\n    var b = t.useMemo(function () {\n        if (a || !p.length) return [o, r, i];\n        var e = [],\n          t = {};\n        return [function n(o, r) {\n          void 0 === r && (r = 0);\n          var i = o;\n          return (i = p.reduce(function (e, t) {\n            var n = t.id,\n              o = t.value,\n              i = u.find(function (e) {\n                return e.id === n;\n              });\n            if (!i) return e;\n            0 === r && (i.preFilteredRows = e);\n            var l = k(i.filter, s || {}, xe);\n            return l ? (i.filteredRows = l(e, [n], o), i.filteredRows) : (console.warn(\"Could not find a valid 'column.filter' for column with the ID: \" + i.id + \".\"), e);\n          }, o)).forEach(function (o) {\n            e.push(o), t[o.id] = o, o.subRows && (o.subRows = o.subRows && o.subRows.length > 0 ? n(o.subRows, r + 1) : o.subRows);\n          }), i;\n        }(o), e, t];\n      }, [a, p, o, r, i, u, s]),\n      S = b[0],\n      C = b[1],\n      x = b[2];\n    t.useMemo(function () {\n      u.filter(function (e) {\n        return !p.find(function (t) {\n          return t.id === e.id;\n        });\n      }).forEach(function (e) {\n        e.preFilteredRows = S, e.filteredRows = S;\n      });\n    }, [S, p, u]);\n    var P = h(m);\n    w(function () {\n      P() && g({\n        type: l.resetFilters\n      });\n    }, [g, a ? null : n]), Object.assign(e, {\n      preFilteredRows: o,\n      preFilteredFlatRows: r,\n      preFilteredRowsById: i,\n      filteredRows: S,\n      filteredFlatRows: C,\n      filteredRowsById: x,\n      rows: S,\n      flatRows: C,\n      rowsById: x,\n      setFilter: y,\n      setAllFilters: R\n    });\n  }\n  Pe.pluginName = \"useFilters\", l.resetGlobalFilter = \"resetGlobalFilter\", l.setGlobalFilter = \"setGlobalFilter\";\n  var Ie = function Ie(e) {\n    e.stateReducers.push(Fe), e.useInstance.push(Ge);\n  };\n  function Fe(e, t, n, o) {\n    if (t.type === l.resetGlobalFilter) return r({}, e, {\n      globalFilter: o.initialState.globalFilter || void 0\n    });\n    if (t.type === l.setGlobalFilter) {\n      var u = t.filterValue,\n        s = o.userFilterTypes,\n        a = k(o.globalFilter, s || {}, xe),\n        c = m(u, e.globalFilter);\n      if (H(a.autoRemove, c)) {\n        e.globalFilter;\n        return i(e, [\"globalFilter\"]);\n      }\n      return r({}, e, {\n        globalFilter: c\n      });\n    }\n  }\n  function Ge(e) {\n    var n = e.data,\n      o = e.rows,\n      r = e.flatRows,\n      i = e.rowsById,\n      u = e.allColumns,\n      s = e.filterTypes,\n      a = e.globalFilter,\n      c = e.manualGlobalFilter,\n      d = e.state.globalFilter,\n      f = e.dispatch,\n      p = e.autoResetGlobalFilter,\n      g = void 0 === p || p,\n      v = e.disableGlobalFilter,\n      m = t.useCallback(function (e) {\n        f({\n          type: l.setGlobalFilter,\n          filterValue: e\n        });\n      }, [f]),\n      y = t.useMemo(function () {\n        if (c || void 0 === d) return [o, r, i];\n        var e = [],\n          t = {},\n          n = k(a, s || {}, xe);\n        if (!n) return console.warn(\"Could not find a valid 'globalFilter' option.\"), o;\n        u.forEach(function (e) {\n          var t = e.disableGlobalFilter;\n          e.canFilter = I(!0 !== t && void 0, !0 !== v && void 0, !0);\n        });\n        var l = u.filter(function (e) {\n          return !0 === e.canFilter;\n        });\n        return [function o(r) {\n          return (r = n(r, l.map(function (e) {\n            return e.id;\n          }), d)).forEach(function (n) {\n            e.push(n), t[n.id] = n, n.subRows = n.subRows && n.subRows.length ? o(n.subRows) : n.subRows;\n          }), r;\n        }(o), e, t];\n      }, [c, d, a, s, u, o, r, i, v]),\n      R = y[0],\n      b = y[1],\n      S = y[2],\n      C = h(g);\n    w(function () {\n      C() && f({\n        type: l.resetGlobalFilter\n      });\n    }, [f, c ? null : n]), Object.assign(e, {\n      preGlobalFilteredRows: o,\n      preGlobalFilteredFlatRows: r,\n      preGlobalFilteredRowsById: i,\n      globalFilteredRows: R,\n      globalFilteredFlatRows: b,\n      globalFilteredRowsById: S,\n      rows: R,\n      flatRows: b,\n      rowsById: S,\n      setGlobalFilter: m,\n      disableGlobalFilter: v\n    });\n  }\n  function Ae(e, t) {\n    return t.reduce(function (e, t) {\n      return e + (\"number\" == typeof t ? t : 0);\n    }, 0);\n  }\n  Ie.pluginName = \"useGlobalFilter\";\n  var ke = Object.freeze({\n      __proto__: null,\n      sum: Ae,\n      min: function min(e) {\n        var t = e[0] || 0;\n        return e.forEach(function (e) {\n          \"number\" == typeof e && (t = Math.min(t, e));\n        }), t;\n      },\n      max: function max(e) {\n        var t = e[0] || 0;\n        return e.forEach(function (e) {\n          \"number\" == typeof e && (t = Math.max(t, e));\n        }), t;\n      },\n      minMax: function minMax(e) {\n        var t = e[0] || 0,\n          n = e[0] || 0;\n        return e.forEach(function (e) {\n          \"number\" == typeof e && (t = Math.min(t, e), n = Math.max(n, e));\n        }), t + \"..\" + n;\n      },\n      average: function average(e) {\n        return Ae(0, e) / e.length;\n      },\n      median: function median(e) {\n        if (!e.length) return null;\n        var t = Math.floor(e.length / 2),\n          n = [].concat(e).sort(function (e, t) {\n            return e - t;\n          });\n        return e.length % 2 != 0 ? n[t] : (n[t - 1] + n[t]) / 2;\n      },\n      unique: function unique(e) {\n        return Array.from(new Set(e).values());\n      },\n      uniqueCount: function uniqueCount(e) {\n        return new Set(e).size;\n      },\n      count: function count(e) {\n        return e.length;\n      }\n    }),\n    He = [],\n    We = {};\n  l.resetGroupBy = \"resetGroupBy\", l.setGroupBy = \"setGroupBy\", l.toggleGroupBy = \"toggleGroupBy\";\n  var ze = function ze(e) {\n    e.getGroupByToggleProps = [Te], e.stateReducers.push(Oe), e.visibleColumnsDeps.push(function (e, t) {\n      var n = t.instance;\n      return [].concat(e, [n.state.groupBy]);\n    }), e.visibleColumns.push(Me), e.useInstance.push(Le), e.prepareRow.push(Ne);\n  };\n  ze.pluginName = \"useGroupBy\";\n  var Te = function Te(e, t) {\n    var n = t.header;\n    return [e, {\n      onClick: n.canGroupBy ? function (e) {\n        e.persist(), n.toggleGroupBy();\n      } : void 0,\n      style: {\n        cursor: n.canGroupBy ? \"pointer\" : void 0\n      },\n      title: \"Toggle GroupBy\"\n    }];\n  };\n  function Oe(e, t, n, o) {\n    if (t.type === l.init) return r({\n      groupBy: []\n    }, e);\n    if (t.type === l.resetGroupBy) return r({}, e, {\n      groupBy: o.initialState.groupBy || []\n    });\n    if (t.type === l.setGroupBy) return r({}, e, {\n      groupBy: t.value\n    });\n    if (t.type === l.toggleGroupBy) {\n      var i = t.columnId,\n        u = t.value,\n        s = void 0 !== u ? u : !e.groupBy.includes(i);\n      return r({}, e, s ? {\n        groupBy: [].concat(e.groupBy, [i])\n      } : {\n        groupBy: e.groupBy.filter(function (e) {\n          return e !== i;\n        })\n      });\n    }\n  }\n  function Me(e, t) {\n    var n = t.instance.state.groupBy,\n      o = n.map(function (t) {\n        return e.find(function (e) {\n          return e.id === t;\n        });\n      }).filter(Boolean),\n      r = e.filter(function (e) {\n        return !n.includes(e.id);\n      });\n    return (e = [].concat(o, r)).forEach(function (e) {\n      e.isGrouped = n.includes(e.id), e.groupedIndex = n.indexOf(e.id);\n    }), e;\n  }\n  var je = {};\n  function Le(e) {\n    var n = e.data,\n      o = e.rows,\n      i = e.flatRows,\n      u = e.rowsById,\n      s = e.allColumns,\n      a = e.flatHeaders,\n      c = e.groupByFn,\n      d = void 0 === c ? De : c,\n      p = e.manualGroupBy,\n      g = e.aggregations,\n      m = void 0 === g ? je : g,\n      y = e.plugins,\n      R = e.state.groupBy,\n      b = e.dispatch,\n      S = e.autoResetGroupBy,\n      C = void 0 === S || S,\n      x = e.disableGroupBy,\n      P = e.defaultCanGroupBy,\n      B = e.getHooks;\n    v(y, [\"useColumnOrder\", \"useFilters\"], \"useGroupBy\");\n    var E = h(e);\n    s.forEach(function (t) {\n      var n = t.accessor,\n        o = t.defaultGroupBy,\n        r = t.disableGroupBy;\n      t.canGroupBy = n ? I(t.canGroupBy, !0 !== r && void 0, !0 !== x && void 0, !0) : I(t.canGroupBy, o, P, !1), t.canGroupBy && (t.toggleGroupBy = function () {\n        return e.toggleGroupBy(t.id);\n      }), t.Aggregated = t.Aggregated || t.Cell;\n    });\n    var F = t.useCallback(function (e, t) {\n        b({\n          type: l.toggleGroupBy,\n          columnId: e,\n          value: t\n        });\n      }, [b]),\n      A = t.useCallback(function (e) {\n        b({\n          type: l.setGroupBy,\n          value: e\n        });\n      }, [b]);\n    a.forEach(function (e) {\n      e.getGroupByToggleProps = f(B().getGroupByToggleProps, {\n        instance: E(),\n        header: e\n      });\n    });\n    var k = t.useMemo(function () {\n        if (p || !R.length) return [o, i, u, He, We, i, u];\n        var e = R.filter(function (e) {\n            return s.find(function (t) {\n              return t.id === e;\n            });\n          }),\n          t = [],\n          n = {},\n          l = [],\n          a = {},\n          c = [],\n          f = {},\n          g = function o(i, u, p) {\n            if (void 0 === u && (u = 0), u === e.length) return i.map(function (e) {\n              return r({}, e, {\n                depth: u\n              });\n            });\n            var g = e[u],\n              v = d(i, g);\n            return Object.entries(v).map(function (r, i) {\n              var d = r[0],\n                v = r[1],\n                h = g + \":\" + d,\n                y = o(v, u + 1, h = p ? p + \">\" + h : h),\n                w = u ? G(v, \"leafRows\") : v,\n                R = function (t, n, o) {\n                  var r = {};\n                  return s.forEach(function (i) {\n                    if (e.includes(i.id)) r[i.id] = n[0] ? n[0].values[i.id] : null;else {\n                      var u = \"function\" == typeof i.aggregate ? i.aggregate : m[i.aggregate] || ke[i.aggregate];\n                      if (u) {\n                        var l = n.map(function (e) {\n                            return e.values[i.id];\n                          }),\n                          s = t.map(function (e) {\n                            var t = e.values[i.id];\n                            if (!o && i.aggregateValue) {\n                              var n = \"function\" == typeof i.aggregateValue ? i.aggregateValue : m[i.aggregateValue] || ke[i.aggregateValue];\n                              if (!n) throw console.info({\n                                column: i\n                              }), new Error(\"React Table: Invalid column.aggregateValue option for column listed above\");\n                              t = n(t, e, i);\n                            }\n                            return t;\n                          });\n                        r[i.id] = u(s, l);\n                      } else {\n                        if (i.aggregate) throw console.info({\n                          column: i\n                        }), new Error(\"React Table: Invalid column.aggregate option for column listed above\");\n                        r[i.id] = null;\n                      }\n                    }\n                  }), r;\n                }(w, v, u),\n                b = {\n                  id: h,\n                  isGrouped: !0,\n                  groupByID: g,\n                  groupByVal: d,\n                  values: R,\n                  subRows: y,\n                  leafRows: w,\n                  depth: u,\n                  index: i\n                };\n              return y.forEach(function (e) {\n                t.push(e), n[e.id] = e, e.isGrouped ? (l.push(e), a[e.id] = e) : (c.push(e), f[e.id] = e);\n              }), b;\n            });\n          }(o);\n        return g.forEach(function (e) {\n          t.push(e), n[e.id] = e, e.isGrouped ? (l.push(e), a[e.id] = e) : (c.push(e), f[e.id] = e);\n        }), [g, t, n, l, a, c, f];\n      }, [p, R, o, i, u, s, m, d]),\n      H = k[0],\n      W = k[1],\n      z = k[2],\n      T = k[3],\n      O = k[4],\n      M = k[5],\n      j = k[6],\n      L = h(C);\n    w(function () {\n      L() && b({\n        type: l.resetGroupBy\n      });\n    }, [b, p ? null : n]), Object.assign(e, {\n      preGroupedRows: o,\n      preGroupedFlatRow: i,\n      preGroupedRowsById: u,\n      groupedRows: H,\n      groupedFlatRows: W,\n      groupedRowsById: z,\n      onlyGroupedFlatRows: T,\n      onlyGroupedRowsById: O,\n      nonGroupedFlatRows: M,\n      nonGroupedRowsById: j,\n      rows: H,\n      flatRows: W,\n      rowsById: z,\n      toggleGroupBy: F,\n      setGroupBy: A\n    });\n  }\n  function Ne(e) {\n    e.allCells.forEach(function (t) {\n      var n;\n      t.isGrouped = t.column.isGrouped && t.column.id === e.groupByID, t.isPlaceholder = !t.isGrouped && t.column.isGrouped, t.isAggregated = !t.isGrouped && !t.isPlaceholder && (null == (n = e.subRows) ? void 0 : n.length);\n    });\n  }\n  function De(e, t) {\n    return e.reduce(function (e, n, o) {\n      var r = \"\" + n.values[t];\n      return e[r] = Array.isArray(e[r]) ? e[r] : [], e[r].push(n), e;\n    }, {});\n  }\n  var Ve = /([0-9]+)/gm;\n  function _e(e, t) {\n    return e === t ? 0 : e > t ? 1 : -1;\n  }\n  function Xe(e, t, n) {\n    return [e.values[n], t.values[n]];\n  }\n  function qe(e) {\n    return \"number\" == typeof e ? isNaN(e) || e === 1 / 0 || e === -1 / 0 ? \"\" : String(e) : \"string\" == typeof e ? e : \"\";\n  }\n  var Ke = Object.freeze({\n    __proto__: null,\n    alphanumeric: function alphanumeric(e, t, n) {\n      var o = Xe(e, t, n),\n        r = o[0],\n        i = o[1];\n      for (r = qe(r), i = qe(i), r = r.split(Ve).filter(Boolean), i = i.split(Ve).filter(Boolean); r.length && i.length;) {\n        var u = r.shift(),\n          l = i.shift(),\n          s = parseInt(u, 10),\n          a = parseInt(l, 10),\n          c = [s, a].sort();\n        if (isNaN(c[0])) {\n          if (u > l) return 1;\n          if (l > u) return -1;\n        } else {\n          if (isNaN(c[1])) return isNaN(s) ? -1 : 1;\n          if (s > a) return 1;\n          if (a > s) return -1;\n        }\n      }\n      return r.length - i.length;\n    },\n    datetime: function datetime(e, t, n) {\n      var o = Xe(e, t, n),\n        r = o[0],\n        i = o[1];\n      return _e(r = r.getTime(), i = i.getTime());\n    },\n    basic: function basic(e, t, n) {\n      var o = Xe(e, t, n);\n      return _e(o[0], o[1]);\n    },\n    string: function string(e, t, n) {\n      var o = Xe(e, t, n),\n        r = o[0],\n        i = o[1];\n      for (r = r.split(\"\").filter(Boolean), i = i.split(\"\").filter(Boolean); r.length && i.length;) {\n        var u = r.shift(),\n          l = i.shift(),\n          s = u.toLowerCase(),\n          a = l.toLowerCase();\n        if (s > a) return 1;\n        if (a > s) return -1;\n        if (u > l) return 1;\n        if (l > u) return -1;\n      }\n      return r.length - i.length;\n    },\n    number: function number(e, t, n) {\n      var o = Xe(e, t, n),\n        r = o[0],\n        i = o[1],\n        u = /[^0-9.]/gi;\n      return _e(r = Number(String(r).replace(u, \"\")), i = Number(String(i).replace(u, \"\")));\n    }\n  });\n  l.resetSortBy = \"resetSortBy\", l.setSortBy = \"setSortBy\", l.toggleSortBy = \"toggleSortBy\", l.clearSortBy = \"clearSortBy\", c.sortType = \"alphanumeric\", c.sortDescFirst = !1;\n  var Ue = function Ue(e) {\n    e.getSortByToggleProps = [$e], e.stateReducers.push(Je), e.useInstance.push(Ye);\n  };\n  Ue.pluginName = \"useSortBy\";\n  var $e = function $e(e, t) {\n    var n = t.instance,\n      o = t.column,\n      r = n.isMultiSortEvent,\n      i = void 0 === r ? function (e) {\n        return e.shiftKey;\n      } : r;\n    return [e, {\n      onClick: o.canSort ? function (e) {\n        e.persist(), o.toggleSortBy(void 0, !n.disableMultiSort && i(e));\n      } : void 0,\n      style: {\n        cursor: o.canSort ? \"pointer\" : void 0\n      },\n      title: o.canSort ? \"Toggle SortBy\" : void 0\n    }];\n  };\n  function Je(e, t, n, o) {\n    if (t.type === l.init) return r({\n      sortBy: []\n    }, e);\n    if (t.type === l.resetSortBy) return r({}, e, {\n      sortBy: o.initialState.sortBy || []\n    });\n    if (t.type === l.clearSortBy) return r({}, e, {\n      sortBy: e.sortBy.filter(function (e) {\n        return e.id !== t.columnId;\n      })\n    });\n    if (t.type === l.setSortBy) return r({}, e, {\n      sortBy: t.sortBy\n    });\n    if (t.type === l.toggleSortBy) {\n      var i,\n        u = t.columnId,\n        s = t.desc,\n        a = t.multi,\n        c = o.allColumns,\n        d = o.disableMultiSort,\n        f = o.disableSortRemove,\n        p = o.disableMultiRemove,\n        g = o.maxMultiSortColCount,\n        v = void 0 === g ? Number.MAX_SAFE_INTEGER : g,\n        m = e.sortBy,\n        h = c.find(function (e) {\n          return e.id === u;\n        }).sortDescFirst,\n        y = m.find(function (e) {\n          return e.id === u;\n        }),\n        w = m.findIndex(function (e) {\n          return e.id === u;\n        }),\n        R = null != s,\n        b = [];\n      return \"toggle\" !== (i = !d && a ? y ? \"toggle\" : \"add\" : w !== m.length - 1 || 1 !== m.length ? \"replace\" : y ? \"toggle\" : \"replace\") || f || R || a && p || !(y && y.desc && !h || !y.desc && h) || (i = \"remove\"), \"replace\" === i ? b = [{\n        id: u,\n        desc: R ? s : h\n      }] : \"add\" === i ? (b = [].concat(m, [{\n        id: u,\n        desc: R ? s : h\n      }])).splice(0, b.length - v) : \"toggle\" === i ? b = m.map(function (e) {\n        return e.id === u ? r({}, e, {\n          desc: R ? s : !y.desc\n        }) : e;\n      }) : \"remove\" === i && (b = m.filter(function (e) {\n        return e.id !== u;\n      })), r({}, e, {\n        sortBy: b\n      });\n    }\n  }\n  function Ye(e) {\n    var n = e.data,\n      o = e.rows,\n      r = e.flatRows,\n      i = e.allColumns,\n      u = e.orderByFn,\n      s = void 0 === u ? Qe : u,\n      a = e.sortTypes,\n      c = e.manualSortBy,\n      d = e.defaultCanSort,\n      p = e.disableSortBy,\n      g = e.flatHeaders,\n      m = e.state.sortBy,\n      y = e.dispatch,\n      R = e.plugins,\n      b = e.getHooks,\n      S = e.autoResetSortBy,\n      C = void 0 === S || S;\n    v(R, [\"useFilters\", \"useGlobalFilter\", \"useGroupBy\", \"usePivotColumns\"], \"useSortBy\");\n    var x = t.useCallback(function (e) {\n        y({\n          type: l.setSortBy,\n          sortBy: e\n        });\n      }, [y]),\n      P = t.useCallback(function (e, t, n) {\n        y({\n          type: l.toggleSortBy,\n          columnId: e,\n          desc: t,\n          multi: n\n        });\n      }, [y]),\n      B = h(e);\n    g.forEach(function (e) {\n      var t = e.accessor,\n        n = e.canSort,\n        o = e.disableSortBy,\n        r = e.id,\n        i = t ? I(!0 !== o && void 0, !0 !== p && void 0, !0) : I(d, n, !1);\n      e.canSort = i, e.canSort && (e.toggleSortBy = function (t, n) {\n        return P(e.id, t, n);\n      }, e.clearSortBy = function () {\n        y({\n          type: l.clearSortBy,\n          columnId: e.id\n        });\n      }), e.getSortByToggleProps = f(b().getSortByToggleProps, {\n        instance: B(),\n        column: e\n      });\n      var u = m.find(function (e) {\n        return e.id === r;\n      });\n      e.isSorted = !!u, e.sortedIndex = m.findIndex(function (e) {\n        return e.id === r;\n      }), e.isSortedDesc = e.isSorted ? u.desc : void 0;\n    });\n    var E = t.useMemo(function () {\n        if (c || !m.length) return [o, r];\n        var e = [],\n          t = m.filter(function (e) {\n            return i.find(function (t) {\n              return t.id === e.id;\n            });\n          });\n        return [function n(o) {\n          var r = s(o, t.map(function (e) {\n            var t = i.find(function (t) {\n              return t.id === e.id;\n            });\n            if (!t) throw new Error(\"React-Table: Could not find a column with id: \" + e.id + \" while sorting\");\n            var n = t.sortType,\n              o = F(n) || (a || {})[n] || Ke[n];\n            if (!o) throw new Error(\"React-Table: Could not find a valid sortType of '\" + n + \"' for column '\" + e.id + \"'.\");\n            return function (t, n) {\n              return o(t, n, e.id, e.desc);\n            };\n          }), t.map(function (e) {\n            var t = i.find(function (t) {\n              return t.id === e.id;\n            });\n            return t && t.sortInverted ? e.desc : !e.desc;\n          }));\n          return r.forEach(function (t) {\n            e.push(t), t.subRows && 0 !== t.subRows.length && (t.subRows = n(t.subRows));\n          }), r;\n        }(o), e];\n      }, [c, m, o, r, i, s, a]),\n      G = E[0],\n      A = E[1],\n      k = h(C);\n    w(function () {\n      k() && y({\n        type: l.resetSortBy\n      });\n    }, [c ? null : n]), Object.assign(e, {\n      preSortedRows: o,\n      preSortedFlatRows: r,\n      sortedRows: G,\n      sortedFlatRows: A,\n      rows: G,\n      flatRows: A,\n      setSortBy: x,\n      toggleSortBy: P\n    });\n  }\n  function Qe(e, t, n) {\n    return [].concat(e).sort(function (e, o) {\n      for (var r = 0; r < t.length; r += 1) {\n        var i = t[r],\n          u = !1 === n[r] || \"desc\" === n[r],\n          l = i(e, o);\n        if (0 !== l) return u ? -l : l;\n      }\n      return n[0] ? e.index - o.index : o.index - e.index;\n    });\n  }\n  l.resetPage = \"resetPage\", l.gotoPage = \"gotoPage\", l.setPageSize = \"setPageSize\";\n  var Ze = function Ze(e) {\n    e.stateReducers.push(et), e.useInstance.push(tt);\n  };\n  function et(e, t, n, o) {\n    if (t.type === l.init) return r({\n      pageSize: 10,\n      pageIndex: 0\n    }, e);\n    if (t.type === l.resetPage) return r({}, e, {\n      pageIndex: o.initialState.pageIndex || 0\n    });\n    if (t.type === l.gotoPage) {\n      var i = o.pageCount,\n        u = o.page,\n        s = m(t.pageIndex, e.pageIndex),\n        a = !1;\n      return s > e.pageIndex ? a = -1 === i ? u.length >= e.pageSize : s < i : s < e.pageIndex && (a = s > -1), a ? r({}, e, {\n        pageIndex: s\n      }) : e;\n    }\n    if (t.type === l.setPageSize) {\n      var c = t.pageSize,\n        d = e.pageSize * e.pageIndex;\n      return r({}, e, {\n        pageIndex: Math.floor(d / c),\n        pageSize: c\n      });\n    }\n  }\n  function tt(e) {\n    var n = e.rows,\n      o = e.autoResetPage,\n      r = void 0 === o || o,\n      i = e.manualExpandedKey,\n      u = void 0 === i ? \"expanded\" : i,\n      s = e.plugins,\n      a = e.pageCount,\n      c = e.paginateExpandedRows,\n      d = void 0 === c || c,\n      f = e.expandSubRows,\n      p = void 0 === f || f,\n      g = e.state,\n      m = g.pageSize,\n      y = g.pageIndex,\n      R = g.expanded,\n      b = g.globalFilter,\n      S = g.filters,\n      C = g.groupBy,\n      x = g.sortBy,\n      P = e.dispatch,\n      B = e.data,\n      E = e.manualPagination;\n    v(s, [\"useGlobalFilter\", \"useFilters\", \"useGroupBy\", \"useSortBy\", \"useExpanded\"], \"usePagination\");\n    var I = h(r);\n    w(function () {\n      I() && P({\n        type: l.resetPage\n      });\n    }, [P, E ? null : B, b, S, C, x]);\n    var F = E ? a : Math.ceil(n.length / m),\n      G = t.useMemo(function () {\n        return F > 0 ? [].concat(new Array(F)).fill(null).map(function (e, t) {\n          return t;\n        }) : [];\n      }, [F]),\n      k = t.useMemo(function () {\n        var e;\n        if (E) e = n;else {\n          var t = m * y,\n            o = t + m;\n          e = n.slice(t, o);\n        }\n        return d ? e : A(e, {\n          manualExpandedKey: u,\n          expanded: R,\n          expandSubRows: p\n        });\n      }, [p, R, u, E, y, m, d, n]),\n      H = y > 0,\n      W = -1 === F ? k.length >= m : y < F - 1,\n      z = t.useCallback(function (e) {\n        P({\n          type: l.gotoPage,\n          pageIndex: e\n        });\n      }, [P]),\n      T = t.useCallback(function () {\n        return z(function (e) {\n          return e - 1;\n        });\n      }, [z]),\n      O = t.useCallback(function () {\n        return z(function (e) {\n          return e + 1;\n        });\n      }, [z]),\n      M = t.useCallback(function (e) {\n        P({\n          type: l.setPageSize,\n          pageSize: e\n        });\n      }, [P]);\n    Object.assign(e, {\n      pageOptions: G,\n      pageCount: F,\n      page: k,\n      canPreviousPage: H,\n      canNextPage: W,\n      gotoPage: z,\n      previousPage: T,\n      nextPage: O,\n      setPageSize: M\n    });\n  }\n  Ze.pluginName = \"usePagination\", l.resetPivot = \"resetPivot\", l.togglePivot = \"togglePivot\";\n  var nt = function nt(e) {\n    e.getPivotToggleProps = [rt], e.stateReducers.push(it), e.useInstanceAfterData.push(ut), e.allColumns.push(lt), e.accessValue.push(st), e.materializedColumns.push(at), e.materializedColumnsDeps.push(ct), e.visibleColumns.push(dt), e.visibleColumnsDeps.push(ft), e.useInstance.push(pt), e.prepareRow.push(gt);\n  };\n  nt.pluginName = \"usePivotColumns\";\n  var ot = [],\n    rt = function rt(e, t) {\n      var n = t.header;\n      return [e, {\n        onClick: n.canPivot ? function (e) {\n          e.persist(), n.togglePivot();\n        } : void 0,\n        style: {\n          cursor: n.canPivot ? \"pointer\" : void 0\n        },\n        title: \"Toggle Pivot\"\n      }];\n    };\n  function it(e, t, n, o) {\n    if (t.type === l.init) return r({\n      pivotColumns: ot\n    }, e);\n    if (t.type === l.resetPivot) return r({}, e, {\n      pivotColumns: o.initialState.pivotColumns || ot\n    });\n    if (t.type === l.togglePivot) {\n      var i = t.columnId,\n        u = t.value,\n        s = void 0 !== u ? u : !e.pivotColumns.includes(i);\n      return r({}, e, s ? {\n        pivotColumns: [].concat(e.pivotColumns, [i])\n      } : {\n        pivotColumns: e.pivotColumns.filter(function (e) {\n          return e !== i;\n        })\n      });\n    }\n  }\n  function ut(e) {\n    e.allColumns.forEach(function (t) {\n      t.isPivotSource = e.state.pivotColumns.includes(t.id);\n    });\n  }\n  function lt(e, t) {\n    var n = t.instance;\n    return e.forEach(function (e) {\n      e.isPivotSource = n.state.pivotColumns.includes(e.id), e.uniqueValues = new Set();\n    }), e;\n  }\n  function st(e, t) {\n    var n = t.column;\n    return n.uniqueValues && void 0 !== e && n.uniqueValues.add(e), e;\n  }\n  function at(e, t) {\n    var n = t.instance,\n      o = n.allColumns,\n      i = n.state;\n    if (!i.pivotColumns.length || !i.groupBy || !i.groupBy.length) return e;\n    var u = i.pivotColumns.map(function (e) {\n        return o.find(function (t) {\n          return t.id === e;\n        });\n      }).filter(Boolean),\n      l = o.filter(function (e) {\n        return !e.isPivotSource && !i.groupBy.includes(e.id) && !i.pivotColumns.includes(e.id);\n      }),\n      s = C(function e(t, n, o) {\n        void 0 === t && (t = 0), void 0 === o && (o = []);\n        var i = u[t];\n        return i ? Array.from(i.uniqueValues).sort().map(function (u) {\n          var l = r({}, i, {\n            Header: i.PivotHeader || \"string\" == typeof i.header ? i.Header + \": \" + u : u,\n            isPivotGroup: !0,\n            parent: n,\n            depth: t,\n            id: n ? n.id + \".\" + i.id + \".\" + u : i.id + \".\" + u,\n            pivotValue: u\n          });\n          return l.columns = e(t + 1, l, [].concat(o, [function (e) {\n            return e.values[i.id] === u;\n          }])), l;\n        }) : l.map(function (e) {\n          return r({}, e, {\n            canPivot: !1,\n            isPivoted: !0,\n            parent: n,\n            depth: t,\n            id: \"\" + (n ? n.id + \".\" + e.id : e.id),\n            accessor: function accessor(t, n, r) {\n              if (o.every(function (e) {\n                return e(r);\n              })) return r.values[e.id];\n            }\n          });\n        });\n      }());\n    return [].concat(e, s);\n  }\n  function ct(e, t) {\n    var n = t.instance.state,\n      o = n.pivotColumns,\n      r = n.groupBy;\n    return [].concat(e, [o, r]);\n  }\n  function dt(e, t) {\n    var n = t.instance.state;\n    return e = e.filter(function (e) {\n      return !e.isPivotSource;\n    }), n.pivotColumns.length && n.groupBy && n.groupBy.length && (e = e.filter(function (e) {\n      return e.isGrouped || e.isPivoted;\n    })), e;\n  }\n  function ft(e, t) {\n    var n = t.instance;\n    return [].concat(e, [n.state.pivotColumns, n.state.groupBy]);\n  }\n  function pt(e) {\n    var t = e.columns,\n      n = e.allColumns,\n      o = e.flatHeaders,\n      r = e.getHooks,\n      i = e.plugins,\n      u = e.dispatch,\n      s = e.autoResetPivot,\n      a = void 0 === s || s,\n      c = e.manaulPivot,\n      d = e.disablePivot,\n      p = e.defaultCanPivot;\n    v(i, [\"useGroupBy\"], \"usePivotColumns\");\n    var g = h(e);\n    n.forEach(function (t) {\n      var n = t.accessor,\n        o = t.defaultPivot,\n        r = t.disablePivot;\n      t.canPivot = n ? I(t.canPivot, !0 !== r && void 0, !0 !== d && void 0, !0) : I(t.canPivot, o, p, !1), t.canPivot && (t.togglePivot = function () {\n        return e.togglePivot(t.id);\n      }), t.Aggregated = t.Aggregated || t.Cell;\n    });\n    o.forEach(function (e) {\n      e.getPivotToggleProps = f(r().getPivotToggleProps, {\n        instance: g(),\n        header: e\n      });\n    });\n    var m = h(a);\n    w(function () {\n      m() && u({\n        type: l.resetPivot\n      });\n    }, [u, c ? null : t]), Object.assign(e, {\n      togglePivot: function togglePivot(e, t) {\n        u({\n          type: l.togglePivot,\n          columnId: e,\n          value: t\n        });\n      }\n    });\n  }\n  function gt(e) {\n    e.allCells.forEach(function (e) {\n      e.isPivoted = e.column.isPivoted;\n    });\n  }\n  l.resetSelectedRows = \"resetSelectedRows\", l.toggleAllRowsSelected = \"toggleAllRowsSelected\", l.toggleRowSelected = \"toggleRowSelected\", l.toggleAllPageRowsSelected = \"toggleAllPageRowsSelected\";\n  var vt = function vt(e) {\n    e.getToggleRowSelectedProps = [mt], e.getToggleAllRowsSelectedProps = [ht], e.getToggleAllPageRowsSelectedProps = [yt], e.stateReducers.push(wt), e.useInstance.push(Rt), e.prepareRow.push(bt);\n  };\n  vt.pluginName = \"useRowSelect\";\n  var mt = function mt(e, t) {\n      var n = t.instance,\n        o = t.row,\n        r = n.manualRowSelectedKey,\n        i = void 0 === r ? \"isSelected\" : r;\n      return [e, {\n        onChange: function onChange(e) {\n          o.toggleRowSelected(e.target.checked);\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        checked: !(!o.original || !o.original[i]) || o.isSelected,\n        title: \"Toggle Row Selected\",\n        indeterminate: o.isSomeSelected\n      }];\n    },\n    ht = function ht(e, t) {\n      var n = t.instance;\n      return [e, {\n        onChange: function onChange(e) {\n          n.toggleAllRowsSelected(e.target.checked);\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        checked: n.isAllRowsSelected,\n        title: \"Toggle All Rows Selected\",\n        indeterminate: Boolean(!n.isAllRowsSelected && Object.keys(n.state.selectedRowIds).length)\n      }];\n    },\n    yt = function yt(e, t) {\n      var n = t.instance;\n      return [e, {\n        onChange: function onChange(e) {\n          n.toggleAllPageRowsSelected(e.target.checked);\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        checked: n.isAllPageRowsSelected,\n        title: \"Toggle All Current Page Rows Selected\",\n        indeterminate: Boolean(!n.isAllPageRowsSelected && n.page.some(function (e) {\n          var t = e.id;\n          return n.state.selectedRowIds[t];\n        }))\n      }];\n    };\n  function wt(e, t, n, o) {\n    if (t.type === l.init) return r({\n      selectedRowIds: {}\n    }, e);\n    if (t.type === l.resetSelectedRows) return r({}, e, {\n      selectedRowIds: o.initialState.selectedRowIds || {}\n    });\n    if (t.type === l.toggleAllRowsSelected) {\n      var i = t.value,\n        u = o.isAllRowsSelected,\n        s = o.rowsById,\n        a = o.nonGroupedRowsById,\n        c = void 0 === a ? s : a,\n        d = void 0 !== i ? i : !u,\n        f = Object.assign({}, e.selectedRowIds);\n      return d ? Object.keys(c).forEach(function (e) {\n        f[e] = !0;\n      }) : Object.keys(c).forEach(function (e) {\n        delete f[e];\n      }), r({}, e, {\n        selectedRowIds: f\n      });\n    }\n    if (t.type === l.toggleRowSelected) {\n      var p = t.id,\n        g = t.value,\n        v = o.rowsById,\n        m = o.selectSubRows,\n        h = void 0 === m || m,\n        y = o.getSubRows,\n        w = e.selectedRowIds[p],\n        R = void 0 !== g ? g : !w;\n      if (w === R) return e;\n      var b = r({}, e.selectedRowIds);\n      return function e(t) {\n        var n = v[t];\n        if (n && (n.isGrouped || (R ? b[t] = !0 : delete b[t]), h && y(n))) return y(n).forEach(function (t) {\n          return e(t.id);\n        });\n      }(p), r({}, e, {\n        selectedRowIds: b\n      });\n    }\n    if (t.type === l.toggleAllPageRowsSelected) {\n      var S = t.value,\n        C = o.page,\n        x = o.rowsById,\n        P = o.selectSubRows,\n        B = void 0 === P || P,\n        E = o.isAllPageRowsSelected,\n        I = o.getSubRows,\n        F = void 0 !== S ? S : !E,\n        G = r({}, e.selectedRowIds);\n      return C.forEach(function (e) {\n        return function e(t) {\n          var n = x[t];\n          if (n.isGrouped || (F ? G[t] = !0 : delete G[t]), B && I(n)) return I(n).forEach(function (t) {\n            return e(t.id);\n          });\n        }(e.id);\n      }), r({}, e, {\n        selectedRowIds: G\n      });\n    }\n    return e;\n  }\n  function Rt(e) {\n    var n = e.data,\n      o = e.rows,\n      r = e.getHooks,\n      i = e.plugins,\n      u = e.rowsById,\n      s = e.nonGroupedRowsById,\n      a = void 0 === s ? u : s,\n      c = e.autoResetSelectedRows,\n      d = void 0 === c || c,\n      p = e.state.selectedRowIds,\n      g = e.selectSubRows,\n      m = void 0 === g || g,\n      y = e.dispatch,\n      R = e.page,\n      b = e.getSubRows;\n    v(i, [\"useFilters\", \"useGroupBy\", \"useSortBy\", \"useExpanded\", \"usePagination\"], \"useRowSelect\");\n    var S = t.useMemo(function () {\n        var e = [];\n        return o.forEach(function (t) {\n          var n = m ? function e(t, n, o) {\n            if (n[t.id]) return !0;\n            var r = o(t);\n            if (r && r.length) {\n              var i = !0,\n                u = !1;\n              return r.forEach(function (t) {\n                u && !i || (e(t, n, o) ? u = !0 : i = !1);\n              }), !!i || !!u && null;\n            }\n            return !1;\n          }(t, p, b) : !!p[t.id];\n          t.isSelected = !!n, t.isSomeSelected = null === n, n && e.push(t);\n        }), e;\n      }, [o, m, p, b]),\n      C = Boolean(Object.keys(a).length && Object.keys(p).length),\n      x = C;\n    C && Object.keys(a).some(function (e) {\n      return !p[e];\n    }) && (C = !1), C || R && R.length && R.some(function (e) {\n      var t = e.id;\n      return !p[t];\n    }) && (x = !1);\n    var P = h(d);\n    w(function () {\n      P() && y({\n        type: l.resetSelectedRows\n      });\n    }, [y, n]);\n    var B = t.useCallback(function (e) {\n        return y({\n          type: l.toggleAllRowsSelected,\n          value: e\n        });\n      }, [y]),\n      E = t.useCallback(function (e) {\n        return y({\n          type: l.toggleAllPageRowsSelected,\n          value: e\n        });\n      }, [y]),\n      I = t.useCallback(function (e, t) {\n        return y({\n          type: l.toggleRowSelected,\n          id: e,\n          value: t\n        });\n      }, [y]),\n      F = h(e),\n      G = f(r().getToggleAllRowsSelectedProps, {\n        instance: F()\n      }),\n      A = f(r().getToggleAllPageRowsSelectedProps, {\n        instance: F()\n      });\n    Object.assign(e, {\n      selectedFlatRows: S,\n      isAllRowsSelected: C,\n      isAllPageRowsSelected: x,\n      toggleRowSelected: I,\n      toggleAllRowsSelected: B,\n      getToggleAllRowsSelectedProps: G,\n      getToggleAllPageRowsSelectedProps: A,\n      toggleAllPageRowsSelected: E\n    });\n  }\n  function bt(e, t) {\n    var n = t.instance;\n    e.toggleRowSelected = function (t) {\n      return n.toggleRowSelected(e.id, t);\n    }, e.getToggleRowSelectedProps = f(n.getHooks().getToggleRowSelectedProps, {\n      instance: n,\n      row: e\n    });\n  }\n  var St = function St(e) {\n      return {};\n    },\n    Ct = function Ct(e) {\n      return {};\n    };\n  l.setRowState = \"setRowState\", l.setCellState = \"setCellState\", l.resetRowState = \"resetRowState\";\n  var xt = function xt(e) {\n    e.stateReducers.push(Pt), e.useInstance.push(Bt), e.prepareRow.push(Et);\n  };\n  function Pt(e, t, n, o) {\n    var i = o.initialRowStateAccessor,\n      u = void 0 === i ? St : i,\n      s = o.initialCellStateAccessor,\n      a = void 0 === s ? Ct : s,\n      c = o.rowsById;\n    if (t.type === l.init) return r({\n      rowState: {}\n    }, e);\n    if (t.type === l.resetRowState) return r({}, e, {\n      rowState: o.initialState.rowState || {}\n    });\n    if (t.type === l.setRowState) {\n      var d,\n        f = t.rowId,\n        p = t.value,\n        g = void 0 !== e.rowState[f] ? e.rowState[f] : u(c[f]);\n      return r({}, e, {\n        rowState: r({}, e.rowState, (d = {}, d[f] = m(p, g), d))\n      });\n    }\n    if (t.type === l.setCellState) {\n      var v,\n        h,\n        y,\n        w,\n        R,\n        b = t.rowId,\n        S = t.columnId,\n        C = t.value,\n        x = void 0 !== e.rowState[b] ? e.rowState[b] : u(c[b]),\n        P = void 0 !== (null == x ? void 0 : null == (v = x.cellState) ? void 0 : v[S]) ? x.cellState[S] : a(null == (h = c[b]) ? void 0 : null == (y = h.cells) ? void 0 : y.find(function (e) {\n          return e.column.id === S;\n        }));\n      return r({}, e, {\n        rowState: r({}, e.rowState, (R = {}, R[b] = r({}, x, {\n          cellState: r({}, x.cellState || {}, (w = {}, w[S] = m(C, P), w))\n        }), R))\n      });\n    }\n  }\n  function Bt(e) {\n    var n = e.autoResetRowState,\n      o = void 0 === n || n,\n      r = e.data,\n      i = e.dispatch,\n      u = t.useCallback(function (e, t) {\n        return i({\n          type: l.setRowState,\n          rowId: e,\n          value: t\n        });\n      }, [i]),\n      s = t.useCallback(function (e, t, n) {\n        return i({\n          type: l.setCellState,\n          rowId: e,\n          columnId: t,\n          value: n\n        });\n      }, [i]),\n      a = h(o);\n    w(function () {\n      a() && i({\n        type: l.resetRowState\n      });\n    }, [r]), Object.assign(e, {\n      setRowState: u,\n      setCellState: s\n    });\n  }\n  function Et(e, t) {\n    var n = t.instance,\n      o = n.initialRowStateAccessor,\n      r = void 0 === o ? St : o,\n      i = n.initialCellStateAccessor,\n      u = void 0 === i ? Ct : i,\n      l = n.state.rowState;\n    e && (e.state = void 0 !== l[e.id] ? l[e.id] : r(e), e.setState = function (t) {\n      return n.setRowState(e.id, t);\n    }, e.cells.forEach(function (t) {\n      e.state.cellState || (e.state.cellState = {}), t.state = void 0 !== e.state.cellState[t.column.id] ? e.state.cellState[t.column.id] : u(t), t.setState = function (o) {\n        return n.setCellState(e.id, t.column.id, o);\n      };\n    }));\n  }\n  xt.pluginName = \"useRowState\", l.resetColumnOrder = \"resetColumnOrder\", l.setColumnOrder = \"setColumnOrder\";\n  var It = function It(e) {\n    e.stateReducers.push(Ft), e.visibleColumnsDeps.push(function (e, t) {\n      var n = t.instance;\n      return [].concat(e, [n.state.columnOrder]);\n    }), e.visibleColumns.push(Gt), e.useInstance.push(At);\n  };\n  function Ft(e, t, n, o) {\n    return t.type === l.init ? r({\n      columnOrder: []\n    }, e) : t.type === l.resetColumnOrder ? r({}, e, {\n      columnOrder: o.initialState.columnOrder || []\n    }) : t.type === l.setColumnOrder ? r({}, e, {\n      columnOrder: m(t.columnOrder, e.columnOrder)\n    }) : void 0;\n  }\n  function Gt(e, t) {\n    var n = t.instance.state.columnOrder;\n    if (!n || !n.length) return e;\n    for (var o = [].concat(n), r = [].concat(e), i = [], u = function u() {\n        var e = o.shift(),\n          t = r.findIndex(function (t) {\n            return t.id === e;\n          });\n        t > -1 && i.push(r.splice(t, 1)[0]);\n      }; r.length && o.length;) u();\n    return [].concat(i, r);\n  }\n  function At(e) {\n    var n = e.dispatch;\n    e.setColumnOrder = t.useCallback(function (e) {\n      return n({\n        type: l.setColumnOrder,\n        columnOrder: e\n      });\n    }, [n]);\n  }\n  It.pluginName = \"useColumnOrder\", c.canResize = !0, l.columnStartResizing = \"columnStartResizing\", l.columnResizing = \"columnResizing\", l.columnDoneResizing = \"columnDoneResizing\", l.resetResize = \"resetResize\";\n  var kt = function kt(e) {\n      e.getResizerProps = [Ht], e.getHeaderProps.push({\n        style: {\n          position: \"relative\"\n        }\n      }), e.stateReducers.push(Wt), e.useInstance.push(Tt), e.useInstanceBeforeDimensions.push(zt);\n    },\n    Ht = function Ht(e, t) {\n      var n = t.instance,\n        o = t.header,\n        r = n.dispatch,\n        i = function i(e, t) {\n          var n = !1;\n          if (\"touchstart\" === e.type) {\n            if (e.touches && e.touches.length > 1) return;\n            n = !0;\n          }\n          var o,\n            i,\n            u = function (e) {\n              var t = [];\n              return function e(n) {\n                n.columns && n.columns.length && n.columns.map(e);\n                t.push(n);\n              }(e), t;\n            }(t).map(function (e) {\n              return [e.id, e.totalWidth];\n            }),\n            s = n ? Math.round(e.touches[0].clientX) : e.clientX,\n            a = function a() {\n              window.cancelAnimationFrame(o), o = null, r({\n                type: l.columnDoneResizing\n              });\n            },\n            c = function c() {\n              window.cancelAnimationFrame(o), o = null, r({\n                type: l.columnResizing,\n                clientX: i\n              });\n            },\n            d = function d(e) {\n              i = e, o || (o = window.requestAnimationFrame(c));\n            },\n            f = {\n              mouse: {\n                moveEvent: \"mousemove\",\n                moveHandler: function moveHandler(e) {\n                  return d(e.clientX);\n                },\n                upEvent: \"mouseup\",\n                upHandler: function upHandler(e) {\n                  document.removeEventListener(\"mousemove\", f.mouse.moveHandler), document.removeEventListener(\"mouseup\", f.mouse.upHandler), a();\n                }\n              },\n              touch: {\n                moveEvent: \"touchmove\",\n                moveHandler: function moveHandler(e) {\n                  return e.cancelable && (e.preventDefault(), e.stopPropagation()), d(e.touches[0].clientX), !1;\n                },\n                upEvent: \"touchend\",\n                upHandler: function upHandler(e) {\n                  document.removeEventListener(f.touch.moveEvent, f.touch.moveHandler), document.removeEventListener(f.touch.upEvent, f.touch.moveHandler), a();\n                }\n              }\n            },\n            p = n ? f.touch : f.mouse,\n            g = !!function () {\n              if (\"boolean\" == typeof z) return z;\n              var e = !1;\n              try {\n                var t = {\n                  get passive() {\n                    return e = !0, !1;\n                  }\n                };\n                window.addEventListener(\"test\", null, t), window.removeEventListener(\"test\", null, t);\n              } catch (t) {\n                e = !1;\n              }\n              return z = e;\n            }() && {\n              passive: !1\n            };\n          document.addEventListener(p.moveEvent, p.moveHandler, g), document.addEventListener(p.upEvent, p.upHandler, g), r({\n            type: l.columnStartResizing,\n            columnId: t.id,\n            columnWidth: t.totalWidth,\n            headerIdWidths: u,\n            clientX: s\n          });\n        };\n      return [e, {\n        onMouseDown: function onMouseDown(e) {\n          return e.persist() || i(e, o);\n        },\n        onTouchStart: function onTouchStart(e) {\n          return e.persist() || i(e, o);\n        },\n        style: {\n          cursor: \"col-resize\"\n        },\n        draggable: !1,\n        role: \"separator\"\n      }];\n    };\n  function Wt(e, t) {\n    if (t.type === l.init) return r({\n      columnResizing: {\n        columnWidths: {}\n      }\n    }, e);\n    if (t.type === l.resetResize) return r({}, e, {\n      columnResizing: {\n        columnWidths: {}\n      }\n    });\n    if (t.type === l.columnStartResizing) {\n      var n = t.clientX,\n        o = t.columnId,\n        i = t.columnWidth,\n        u = t.headerIdWidths;\n      return r({}, e, {\n        columnResizing: r({}, e.columnResizing, {\n          startX: n,\n          headerIdWidths: u,\n          columnWidth: i,\n          isResizingColumn: o\n        })\n      });\n    }\n    if (t.type === l.columnResizing) {\n      var s = t.clientX,\n        a = e.columnResizing,\n        c = a.startX,\n        d = a.columnWidth,\n        f = a.headerIdWidths,\n        p = (s - c) / d,\n        g = {};\n      return (void 0 === f ? [] : f).forEach(function (e) {\n        var t = e[0],\n          n = e[1];\n        g[t] = Math.max(n + n * p, 0);\n      }), r({}, e, {\n        columnResizing: r({}, e.columnResizing, {\n          columnWidths: r({}, e.columnResizing.columnWidths, {}, g)\n        })\n      });\n    }\n    return t.type === l.columnDoneResizing ? r({}, e, {\n      columnResizing: r({}, e.columnResizing, {\n        startX: null,\n        isResizingColumn: null\n      })\n    }) : void 0;\n  }\n  kt.pluginName = \"useResizeColumns\";\n  var zt = function zt(e) {\n    var t = e.flatHeaders,\n      n = e.disableResizing,\n      o = e.getHooks,\n      r = e.state.columnResizing,\n      i = h(e);\n    t.forEach(function (e) {\n      var t = I(!0 !== e.disableResizing && void 0, !0 !== n && void 0, !0);\n      e.canResize = t, e.width = r.columnWidths[e.id] || e.originalWidth || e.width, e.isResizing = r.isResizingColumn === e.id, t && (e.getResizerProps = f(o().getResizerProps, {\n        instance: i(),\n        header: e\n      }));\n    });\n  };\n  function Tt(e) {\n    var n = e.plugins,\n      o = e.dispatch,\n      r = e.autoResetResize,\n      i = void 0 === r || r,\n      u = e.columns;\n    v(n, [\"useAbsoluteLayout\"], \"useResizeColumns\");\n    var s = h(i);\n    w(function () {\n      s() && o({\n        type: l.resetResize\n      });\n    }, [u]);\n    var a = t.useCallback(function () {\n      return o({\n        type: l.resetResize\n      });\n    }, [o]);\n    Object.assign(e, {\n      resetResizing: a\n    });\n  }\n  var Ot = {\n      position: \"absolute\",\n      top: 0\n    },\n    Mt = function Mt(e) {\n      e.getTableBodyProps.push(jt), e.getRowProps.push(jt), e.getHeaderGroupProps.push(jt), e.getFooterGroupProps.push(jt), e.getHeaderProps.push(function (e, t) {\n        var n = t.column;\n        return [e, {\n          style: r({}, Ot, {\n            left: n.totalLeft + \"px\",\n            width: n.totalWidth + \"px\"\n          })\n        }];\n      }), e.getCellProps.push(function (e, t) {\n        var n = t.cell;\n        return [e, {\n          style: r({}, Ot, {\n            left: n.column.totalLeft + \"px\",\n            width: n.column.totalWidth + \"px\"\n          })\n        }];\n      }), e.getFooterProps.push(function (e, t) {\n        var n = t.column;\n        return [e, {\n          style: r({}, Ot, {\n            left: n.totalLeft + \"px\",\n            width: n.totalWidth + \"px\"\n          })\n        }];\n      });\n    };\n  Mt.pluginName = \"useAbsoluteLayout\";\n  var jt = function jt(e, t) {\n      return [e, {\n        style: {\n          position: \"relative\",\n          width: t.instance.totalColumnsWidth + \"px\"\n        }\n      }];\n    },\n    Lt = {\n      display: \"inline-block\",\n      boxSizing: \"border-box\"\n    },\n    Nt = function Nt(e, t) {\n      return [e, {\n        style: {\n          display: \"flex\",\n          width: t.instance.totalColumnsWidth + \"px\"\n        }\n      }];\n    },\n    Dt = function Dt(e) {\n      e.getRowProps.push(Nt), e.getHeaderGroupProps.push(Nt), e.getFooterGroupProps.push(Nt), e.getHeaderProps.push(function (e, t) {\n        var n = t.column;\n        return [e, {\n          style: r({}, Lt, {\n            width: n.totalWidth + \"px\"\n          })\n        }];\n      }), e.getCellProps.push(function (e, t) {\n        var n = t.cell;\n        return [e, {\n          style: r({}, Lt, {\n            width: n.column.totalWidth + \"px\"\n          })\n        }];\n      }), e.getFooterProps.push(function (e, t) {\n        var n = t.column;\n        return [e, {\n          style: r({}, Lt, {\n            width: n.totalWidth + \"px\"\n          })\n        }];\n      });\n    };\n  function Vt(e) {\n    e.getTableProps.push(_t), e.getRowProps.push(Xt), e.getHeaderGroupProps.push(Xt), e.getFooterGroupProps.push(Xt), e.getHeaderProps.push(qt), e.getCellProps.push(Kt), e.getFooterProps.push(Ut);\n  }\n  Dt.pluginName = \"useBlockLayout\", Vt.pluginName = \"useFlexLayout\";\n  var _t = function _t(e, t) {\n      return [e, {\n        style: {\n          minWidth: t.instance.totalColumnsMinWidth + \"px\"\n        }\n      }];\n    },\n    Xt = function Xt(e, t) {\n      return [e, {\n        style: {\n          display: \"flex\",\n          flex: \"1 0 auto\",\n          minWidth: t.instance.totalColumnsMinWidth + \"px\"\n        }\n      }];\n    },\n    qt = function qt(e, t) {\n      var n = t.column;\n      return [e, {\n        style: {\n          boxSizing: \"border-box\",\n          flex: n.totalFlexWidth ? n.totalFlexWidth + \" 0 auto\" : void 0,\n          minWidth: n.totalMinWidth + \"px\",\n          width: n.totalWidth + \"px\"\n        }\n      }];\n    },\n    Kt = function Kt(e, t) {\n      var n = t.cell;\n      return [e, {\n        style: {\n          boxSizing: \"border-box\",\n          flex: n.column.totalFlexWidth + \" 0 auto\",\n          minWidth: n.column.totalMinWidth + \"px\",\n          width: n.column.totalWidth + \"px\"\n        }\n      }];\n    },\n    Ut = function Ut(e, t) {\n      var n = t.column;\n      return [e, {\n        style: {\n          boxSizing: \"border-box\",\n          flex: n.totalFlexWidth ? n.totalFlexWidth + \" 0 auto\" : void 0,\n          minWidth: n.totalMinWidth + \"px\",\n          width: n.totalWidth + \"px\"\n        }\n      }];\n    };\n  function $t(e) {\n    e.stateReducers.push(Zt), e.getTableProps.push(Jt), e.getHeaderProps.push(Yt), e.getRowProps.push(Qt);\n  }\n  l.columnStartResizing = \"columnStartResizing\", l.columnResizing = \"columnResizing\", l.columnDoneResizing = \"columnDoneResizing\", l.resetResize = \"resetResize\", $t.pluginName = \"useGridLayout\";\n  var Jt = function Jt(e, t) {\n      var n = t.instance;\n      return [e, {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: n.visibleColumns.map(function (e) {\n            var t;\n            return n.state.gridLayout.columnWidths[e.id] ? n.state.gridLayout.columnWidths[e.id] + \"px\" : (null == (t = n.state.columnResizing) ? void 0 : t.isResizingColumn) ? n.state.gridLayout.startWidths[e.id] + \"px\" : \"number\" == typeof e.width ? e.width + \"px\" : e.width;\n          }).join(\" \")\n        }\n      }];\n    },\n    Yt = function Yt(e, t) {\n      var n = t.column;\n      return [e, {\n        id: \"header-cell-\" + n.id,\n        style: {\n          position: \"sticky\",\n          gridColumn: \"span \" + n.totalVisibleHeaderCount\n        }\n      }];\n    },\n    Qt = function Qt(e, t) {\n      var n = t.row;\n      return n.isExpanded ? [e, {\n        style: {\n          gridColumn: \"1 / \" + (n.cells.length + 1)\n        }\n      }] : [e, {}];\n    };\n  function Zt(e, t, n, o) {\n    if (t.type === l.init) return r({\n      gridLayout: {\n        columnWidths: {}\n      }\n    }, e);\n    if (t.type === l.resetResize) return r({}, e, {\n      gridLayout: {\n        columnWidths: {}\n      }\n    });\n    if (t.type === l.columnStartResizing) {\n      var i = t.columnId,\n        u = t.headerIdWidths,\n        s = en(i);\n      if (void 0 !== s) {\n        var a = o.visibleColumns.reduce(function (e, t) {\n            var n;\n            return r({}, e, ((n = {})[t.id] = en(t.id), n));\n          }, {}),\n          c = o.visibleColumns.reduce(function (e, t) {\n            var n;\n            return r({}, e, ((n = {})[t.id] = t.minWidth, n));\n          }, {}),\n          d = o.visibleColumns.reduce(function (e, t) {\n            var n;\n            return r({}, e, ((n = {})[t.id] = t.maxWidth, n));\n          }, {}),\n          f = u.map(function (e) {\n            var t = e[0];\n            return [t, en(t)];\n          });\n        return r({}, e, {\n          gridLayout: r({}, e.gridLayout, {\n            startWidths: a,\n            minWidths: c,\n            maxWidths: d,\n            headerIdGridWidths: f,\n            columnWidth: s\n          })\n        });\n      }\n      return e;\n    }\n    if (t.type === l.columnResizing) {\n      var p = t.clientX,\n        g = e.columnResizing.startX,\n        v = e.gridLayout,\n        m = v.columnWidth,\n        h = v.minWidths,\n        y = v.maxWidths,\n        w = v.headerIdGridWidths,\n        R = (p - g) / m,\n        b = {};\n      return (void 0 === w ? [] : w).forEach(function (e) {\n        var t = e[0],\n          n = e[1];\n        b[t] = Math.min(Math.max(h[t], n + n * R), y[t]);\n      }), r({}, e, {\n        gridLayout: r({}, e.gridLayout, {\n          columnWidths: r({}, e.gridLayout.columnWidths, {}, b)\n        })\n      });\n    }\n    return t.type === l.columnDoneResizing ? r({}, e, {\n      gridLayout: r({}, e.gridLayout, {\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {}\n      })\n    }) : void 0;\n  }\n  function en(e) {\n    var t,\n      n = null == (t = document.getElementById(\"header-cell-\" + e)) ? void 0 : t.offsetWidth;\n    if (void 0 !== n) return n;\n  }\n  e._UNSTABLE_usePivotColumns = nt, e.actions = l, e.defaultColumn = c, e.defaultGroupByFn = De, e.defaultOrderByFn = Qe, e.defaultRenderer = s, e.emptyRenderer = a, e.ensurePluginOrder = v, e.flexRender = b, e.functionalUpdate = m, e.loopHooks = g, e.makePropGetter = f, e.makeRenderer = R, e.reduceHooks = p, e.safeUseLayoutEffect = y, e.useAbsoluteLayout = Mt, e.useAsyncDebounce = function (e, n) {\n    void 0 === n && (n = 0);\n    var r = t.useRef({}),\n      i = h(e),\n      u = h(n);\n    return t.useCallback(function () {\n      var e = o(_regeneratorRuntime().mark(function e() {\n        var t,\n          n,\n          l,\n          s = arguments;\n        return _regeneratorRuntime().wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              for (t = s.length, n = new Array(t), l = 0; l < t; l++) n[l] = s[l];\n              return r.current.promise || (r.current.promise = new Promise(function (e, t) {\n                r.current.resolve = e, r.current.reject = t;\n              })), r.current.timeout && clearTimeout(r.current.timeout), r.current.timeout = setTimeout(o(_regeneratorRuntime().mark(function e() {\n                return _regeneratorRuntime().wrap(function (e) {\n                  for (;;) switch (e.prev = e.next) {\n                    case 0:\n                      return delete r.current.timeout, e.prev = 1, e.t0 = r.current, e.next = 5, i().apply(void 0, n);\n                    case 5:\n                      e.t1 = e.sent, e.t0.resolve.call(e.t0, e.t1), e.next = 12;\n                      break;\n                    case 9:\n                      e.prev = 9, e.t2 = e.catch(1), r.current.reject(e.t2);\n                    case 12:\n                      return e.prev = 12, delete r.current.promise, e.finish(12);\n                    case 15:\n                    case \"end\":\n                      return e.stop();\n                  }\n                }, e, null, [[1, 9, 12, 15]]);\n              })), u()), e.abrupt(\"return\", r.current.promise);\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e);\n      }));\n      return function () {\n        return e.apply(this, arguments);\n      };\n    }(), [i, u]);\n  }, e.useBlockLayout = Dt, e.useColumnOrder = It, e.useExpanded = se, e.useFilters = Pe, e.useFlexLayout = Vt, e.useGetLatest = h, e.useGlobalFilter = Ie, e.useGridLayout = $t, e.useGroupBy = ze, e.useMountedLayoutEffect = w, e.usePagination = Ze, e.useResizeColumns = kt, e.useRowSelect = vt, e.useRowState = xt, e.useSortBy = Ue, e.useTable = function (e) {\n    for (var n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) o[i - 1] = arguments[i];\n    e = ie(e), o = [K].concat(o);\n    var u = t.useRef({}),\n      s = h(u.current);\n    Object.assign(s(), r({}, e, {\n      plugins: o,\n      hooks: q()\n    })), o.filter(Boolean).forEach(function (e) {\n      e(s().hooks);\n    });\n    var a = h(s().hooks);\n    s().getHooks = a, delete s().hooks, Object.assign(s(), p(a().useOptions, ie(e)));\n    var c = s(),\n      d = c.data,\n      v = c.columns,\n      m = c.initialState,\n      y = c.defaultColumn,\n      w = c.getSubRows,\n      b = c.getRowId,\n      E = c.stateReducer,\n      I = c.useControlledState,\n      F = h(E),\n      G = t.useCallback(function (e, t) {\n        if (!t.type) throw console.info({\n          action: t\n        }), new Error(\"Unknown Action 👆\");\n        return [].concat(a().stateReducers, Array.isArray(F()) ? F() : [F()]).reduce(function (n, o) {\n          return o(n, t, e, s()) || n;\n        }, e);\n      }, [a, F, s]),\n      A = t.useReducer(G, void 0, function () {\n        return G(m, {\n          type: l.init\n        });\n      }),\n      k = A[0],\n      H = A[1],\n      W = p([].concat(a().useControlledState, [I]), k, {\n        instance: s()\n      });\n    Object.assign(s(), {\n      state: W,\n      dispatch: H\n    });\n    var z = t.useMemo(function () {\n      return S(p(a().columns, v, {\n        instance: s()\n      }));\n    }, [a, s, v].concat(p(a().columnsDeps, [], {\n      instance: s()\n    })));\n    s().columns = z;\n    var T = t.useMemo(function () {\n      return p(a().allColumns, C(z), {\n        instance: s()\n      }).map(x);\n    }, [z, a, s].concat(p(a().allColumnsDeps, [], {\n      instance: s()\n    })));\n    s().allColumns = T;\n    var O = t.useMemo(function () {\n        for (var e = [], t = [], n = {}, o = [].concat(T); o.length;) {\n          var r = o.shift();\n          le({\n            data: d,\n            rows: e,\n            flatRows: t,\n            rowsById: n,\n            column: r,\n            getRowId: b,\n            getSubRows: w,\n            accessValueHooks: a().accessValue,\n            getInstance: s\n          });\n        }\n        return [e, t, n];\n      }, [T, d, b, w, a, s]),\n      M = O[0],\n      j = O[1],\n      L = O[2];\n    Object.assign(s(), {\n      rows: M,\n      initialRows: [].concat(M),\n      flatRows: j,\n      rowsById: L\n    }), g(a().useInstanceAfterData, s());\n    var N = t.useMemo(function () {\n      return p(a().visibleColumns, T, {\n        instance: s()\n      }).map(function (e) {\n        return P(e, y);\n      });\n    }, [a, T, s, y].concat(p(a().visibleColumnsDeps, [], {\n      instance: s()\n    })));\n    T = t.useMemo(function () {\n      var e = [].concat(N);\n      return T.forEach(function (t) {\n        e.find(function (e) {\n          return e.id === t.id;\n        }) || e.push(t);\n      }), e;\n    }, [T, N]), s().allColumns = T;\n    var D = t.useMemo(function () {\n      return p(a().headerGroups, B(N, y), s());\n    }, [a, N, y, s].concat(p(a().headerGroupsDeps, [], {\n      instance: s()\n    })));\n    s().headerGroups = D;\n    var V = t.useMemo(function () {\n      return D.length ? D[0].headers : [];\n    }, [D]);\n    s().headers = V, s().flatHeaders = D.reduce(function (e, t) {\n      return [].concat(e, t.headers);\n    }, []), g(a().useInstanceBeforeDimensions, s());\n    var _ = N.filter(function (e) {\n      return e.isVisible;\n    }).map(function (e) {\n      return e.id;\n    }).sort().join(\"_\");\n    N = t.useMemo(function () {\n      return N.filter(function (e) {\n        return e.isVisible;\n      });\n    }, [N, _]), s().visibleColumns = N;\n    var X = ue(V),\n      U = X[0],\n      $ = X[1],\n      J = X[2];\n    return s().totalColumnsMinWidth = U, s().totalColumnsWidth = $, s().totalColumnsMaxWidth = J, g(a().useInstance, s()), [].concat(s().flatHeaders, s().allColumns).forEach(function (e) {\n      e.render = R(s(), e), e.getHeaderProps = f(a().getHeaderProps, {\n        instance: s(),\n        column: e\n      }), e.getFooterProps = f(a().getFooterProps, {\n        instance: s(),\n        column: e\n      });\n    }), s().headerGroups = t.useMemo(function () {\n      return D.filter(function (e, t) {\n        return e.headers = e.headers.filter(function (e) {\n          return e.headers ? function e(t) {\n            return t.filter(function (t) {\n              return t.headers ? e(t.headers) : t.isVisible;\n            }).length;\n          }(e.headers) : e.isVisible;\n        }), !!e.headers.length && (e.getHeaderGroupProps = f(a().getHeaderGroupProps, {\n          instance: s(),\n          headerGroup: e,\n          index: t\n        }), e.getFooterGroupProps = f(a().getFooterGroupProps, {\n          instance: s(),\n          headerGroup: e,\n          index: t\n        }), !0);\n      });\n    }, [D, s, a]), s().footerGroups = [].concat(s().headerGroups).reverse(), s().prepareRow = t.useCallback(function (e) {\n      e.getRowProps = f(a().getRowProps, {\n        instance: s(),\n        row: e\n      }), e.allCells = T.map(function (t) {\n        var n = e.values[t.id],\n          o = {\n            column: t,\n            row: e,\n            value: n\n          };\n        return o.getCellProps = f(a().getCellProps, {\n          instance: s(),\n          cell: o\n        }), o.render = R(s(), t, {\n          row: e,\n          cell: o,\n          value: n\n        }), o;\n      }), e.cells = N.map(function (t) {\n        return e.allCells.find(function (e) {\n          return e.column.id === t.id;\n        });\n      }), g(a().prepareRow, e, {\n        instance: s()\n      });\n    }, [a, s, T, N]), s().getTableProps = f(a().getTableProps, {\n      instance: s()\n    }), s().getTableBodyProps = f(a().getTableBodyProps, {\n      instance: s()\n    }), g(a().useFinalInstance, s()), s();\n  }, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA,IAEaA,IAAU;MACrBC,MAAM;IAAA;IAGKC,IAAkB,SAAlBA,EAAkBC;MAAA,UAAGC;MAAAA,sBAAQ;IAAA;IAC7BC,IAAgB,SAAhBA,IAAgB;MAAA,OAAMC;IAAAA;IAEtBC,IAAgB;MAC3BC,MAAMN;MACNO,OAAO;MACPC,UAAU;MACVC,UAAUC,OAAOC;IAAAA;EAGnB,SAASC;IAAAA,+BAAcC;IAAAA,OACdA,EAASC,OAAO,UAACC,GAAOC;MAAAA,IACrBC,IAA8BD,EAA9BC;QAAOC,IAAuBF,EAAvBE;MAAAA,OAEfH,UACKA,SAHiCC,6BAOlCC,MACFF,EAAME,QAAQF,EAAME,cACVF,EAAME,SAAS,QAASA,KAAS,MACvCA,IAGFC,MACFH,EAAMG,YAAYH,EAAMG,YACpBH,EAAMG,YAAY,MAAMA,IACxBA,IAGkB,OAApBH,EAAMG,oBACDH,EAAMG,WAGRH;IAAAA,GACN;EAAA;EAAA,IAkBQI,IAAiB,SAAjBA,EAAkBC,GAAOC;MAAAA,4BAAO,KACpC,UAACC;QAAAA,4BAAY,KAClB,UAAIF,IAAOE,IAAWR,OACpB,UAACS,GAAMP;UAAAA,OAlBb,SAASQ,EAAiBC,GAAWH,GAAWD;YAAAA,OAErB,qBAAdC,IACFE,EAAiB,IAAIF,EAAUG,GAAWJ,MAI/CK,MAAMC,QAAQL,KACTV,iBAAWa,UAAcH,MAI3BV,EAAWa,GAAWH;UAAAA,CAOvBE,CAAiBD,GAAMP,SAClBK;YACHC;UAAAA;QAAAA,GAEJ;MAAA;IAAA;IAIOM,IAAc,SAAdA,EAAeR,GAAOS,GAASR,GAAWS;MAAAA,kBAAXT,UAAO,KACjDD,EAAMN,OAAO,UAACS,GAAMP;QAAAA,OACAA,EAAKO,GAAMF;MAAAA,GAU5BQ;IAAAA;IAEQE,IAAY,SAAZA,EAAaX,GAAOY,GAASX;MAAAA,4BAAO,KAC/CD,EAAMa,QAAQ;QACMC,EAAKF,GAASX;MAAAA;IAAAA;EAW7B,SAASc,EAAkBC,GAASC,GAASC,GAAYC;IAM1CH,EAAQI,UAC1B;MAAAC,OAAUA,EAAOH,eAAeA;IAAAA;IAalCD,EAAQJ,QAAQ;MACMG,EAAQI,UAC1B;QAAAC,OAAUA,EAAOH,eAAeI;MAAAA;IAAAA;EAAAA;EAY/B,SAASC,EAAiBC,GAASC;IAAAA,OACd,qBAAZD,IAAyBA,EAAQC,KAAOD;EAAAA;EAGjD,SAASE,EAAaC;IAAAA,IACrBC,IAAM5C,EAAM6C;IAAAA,OAClBD,EAAIE,UAAUH,GAEP3C,EAAM+C,YAAY;MAAA,OAAMH,EAAIE;IAAAA,GAAS;EAAA;EAAA,IAIjCE,IACS,sBAAbC,WAA2BjD,EAAMkD,kBAAkBlD,EAAMmD;EAE3D,SAASC,EAAuBC,GAAIC;IAAAA,IACnCC,IAAavD,EAAM6C,QAAO;IAEhCG,EAAoB;MACdO,EAAWT,WACbO,KAEFE,EAAWT,WAAU;IAAA,GAEpBQ;EAAAA;EAuCE,SAASE,EAAaC,GAAUC,GAAQzC;IAAAA,4BAAO,KAC7C,UAAC0C,GAAMzC;MAAAA,qBAAY;MAAA,IAClB0C,IAAuB,mBAATD,IAAoBD,EAAOC,KAAQA;MAAAA,SAEnC,MAATC,SACTC,QAAQC,KAAKJ,IACP,IAAIK,MA1MA;MAAA,OA6MLC,EAAWJ,SAAWH;QAAUC;MAAAA,GAAWzC,OAASC;IAAAA;EAAAA;EAIxD,SAAS8C,EAAWJ,GAAMjD;IAAAA,OAYjC,UAA0BsD;MAAAA,OAED,qBAAdA,MAECC,IAAQC,OAAOC,eAAeH,IACvBI,aAAaH,EAAMG,UAAUC;MAF3C,IACOJ;IAAAA,CAVRK,CAFsBN,IAHAL,MAMD,qBAAdK,KAeX,UAA2BA;MAAAA,OAEF,mBAAdA,KACuB,mBAAvBA,EAAUO,YACjB,CAAC,cAAc,qBAAqBC,SAASR,EAAUO,SAASE;IAAAA,CAlBhEC,CAAkBV,KAPYjE,gBAAC4D,GAASjD,KAAYiD;IAGxD,IAA0BK;EAAAA;EC1MnB,SAASW,EAAoBC,GAASC,GAAQC;IAAAA,4BAAQ,IACpDF,EAAQG,IAAI;MAAAtB,OAOjBuB,EANAvB,UACKA;QACHoB;QACAC;MAAAA,KAKErB,EAAOmB,YACTnB,EAAOmB,UAAUD,EAAoBlB,EAAOmB,SAASnB,GAAQqB,IAAQ,KAEhErB;IAAAA;EAAAA;EAIJ,SAASwB,EAAeL;IAAAA,OACtBM,EAAUN,GAAS;EAAA;EAGrB,SAASI,EAAqBvB;IAAAA,IAE7B0B,IAAyB1B,EAAzB0B;MAAIC,IAAqB3B,EAArB2B;MAAUC,IAAW5B,EAAX4B;IAAAA,IAEI,mBAAbD,GAAuB;MAChCD,IAAKA,KAAMC;MAAAA,IACLE,IAAeF,EAASG,MAAM;MACpCH,IAAW;QAAAI,OA+HR,UAAe9C,GAAK+C,GAAMC;UAAAA,KAC1BD,UACI/C;UAAAA,IAYLiD;YAVEC,IAA2B,qBAATH,IAAsBA,IAAOI,KAAKC,UAAUL;YAE9DM,IACJC,EAAaC,IAAIL,MAChB;cAAA,IACOG,IAiJZ,UAAuBrD;gBAAAA,OAevB,SAASwD,EAAYC,GAAKC;kBAAAA,qBAAS;kBAAA,IAC5B/E,MAAMC,QAAQ6E,SAGZ,IAAIE,IAAI,GAAGA,IAAIF,EAAIG,QAAQD,KAAK,GACnCH,EAAYC,EAAIE,IAAID,QAHtBA,EAAOG,KAAKJ;kBAAAA,OAMPC;gBAAAA,CArBLF,CAAYxD,GAETqC,IAAI;kBAAAyB,OAAKC,OAAOD,GAAGE,QAAQ,KAAK;gBAAA,GAEhCC,KAAK,KAELD,QAAQE,GAAe,KACvBF,QAAQG,GAAgB,IAExBtB,MAAM;cAAA,CA5JSuB,CAAcrB;cAAAA,OAC9BO,EAAae,IAAInB,GAAUG,IACpBA;YAAAA,CAHR;UAAA;YASDJ,IAAMI,EAAQtF,OAAO,UAACuG,GAAQC;cAAAA,OAAaD,EAAOC;YAAAA,GAAWvE;UAAAA,CAC7D,QAAO9C;UAAAA,YAGa,MAAR+F,IAAsBA,IAAMD;QAAAA,CApJtBwB,CAAM1B,GAAKF;MAAAA;IAAAA;IAAAA,KAG1BH,KAAwB,mBAAXE,KAAuBA,MACvCF,IAAKE,KAGFF,KAAM1B,EAAOmB,eAChBhB,QAAQuD,MAAM1D,IACR,IAAIK,MAAM;IAAA,KAGbqB,SACHvB,QAAQuD,MAAM1D,IACR,IAAIK,MAAM;IAAA,OAGlBI,OAAOkD,OAAO3D,GAAQ;MACpB0B;MACAC;IAAAA,IAGK3B;EAAAA;EAGF,SAAS4D,EAAe5D,GAAQ6D;IAAAA,KAChCA,SACG,IAAIxD;IAAAA,OAEZI,OAAOkD,OAAO3D;MAEZ4B,QAAQvF;MACRyH,QAAQzH;IAAAA,GACLE,OACAsH,OACA7D,KAGLS,OAAOkD,OAAO3D,GAAQ;MACpB+D,eAAe/D,EAAOvD;IAAAA,IAGjBuD;EAAAA;EAIF,SAASgE,EACdC,GACA1H,GACA2H;IAAAA,qBAA6B;MAAA,OAAO;IAAA;IAAA,SAE9BC,IAAe,IAEjBC,IAAcH,GAEdI,IAAM,GACJC,IAAS,SAATA,IAAS;QAAA,OAAMD;MAAAA;QAAAA,IAIbE,IAAc;YAClBC,SAAS;UAAA;UAILC,IAAgB;UAEhBC,IAAaN,EAAYO,KAAK;YAAA5B,OAAKA,EAAE3B;UAAAA;QAG3CgD,EAAYjG,QAAQ;UAAA6B,IAId4E;YAFAC,IAAqB,UAAIJ,GAAeK,UAAU;UAAA,IAIlDJ,GAAY;YAAA,IAEV1E,EAAOoB,QACTwD,UACK5E,EAAOoB;cACV2D,YAAY/E,EAAOoB,OAAOM;cAC1BA,IAAO1B,EAAOoB,OAAOM,WAAM4C;cAC3BE,SAAS,CAACxE;YAAAA,GACPkE,EAA2BlE,SAKhC4E,IAAYhB;cAERmB,YAHkB/E,EAAO0B;cAIzBA,IAAO1B,EAAO0B,uBAAkB4C;cAChCU,eAAehF;cACfwE,SAAS,CAACxE;YAAAA,GACPkE,EAA2BlE,KAEhCzD;YAOFsI,KACAA,EAAmBE,eAAeH,EAAUG,aAE5CF,EAAmBL,QAAQ1B,KAAK9C,KAEhCyE,EAAc3B,KAAK8B;UAAAA;UAIvBL,EAAYC,QAAQ1B,KAAK9C;QAAAA,IAG3BmE,EAAarB,KAAKyB,IAGlBH,IAAcK;MAAAA,GA7DTL,EAAYvB;IAAAA,OAgEZsB,EAAaW;EAAAA;EAGtB,IAAMvC,IAAe,IAAI0C;EA0BlB,SAASC;IAAAA,+BAAmBC;IAAAA,KAC5B,IAAIvC,IAAI,GAAGA,IAAIuC,EAAKtC,QAAQD,KAAK,YACb,MAAZuC,EAAKvC,WACPuC,EAAKvC;EAAAA;EA8BX,SAASwC,EAAWC;IAAAA,IACR,qBAANA,UACFA;EAAAA;EAIJ,SAAS5D,EAAUiB,GAAK4C;IAAAA,IACvBC,IAAO;IAAA,OAEG,SAAVC,EAAU9C;MACdA,EAAIvE,QAAQ;QACL4E,EAAEuC,KAGLE,EAAQzC,EAAEuC,MAFVC,EAAKzC,KAAKC;MAAAA;IAAAA,CAOhByC,CAAQ9C,IAED6C;EAAAA;EAGF,SAASE,EACdC;IAAAA,IACEC;MAAmBC;MAAAA,MAAUC;MAAAA;MAEzBC,IAAe;IAAA,OAiBrBJ,EAAKvH,QAAQ;MAAA4D,OAfK,SAAZgE,EAAahE,GAAKiE;QAAAA,sBAAoB,IAC1CjE,EAAIkE,aACDlE,EAAImE,YAAYnE,EAAImE,SAASP,MAAuBC,EAAS7D,EAAIL,KAEpEK,EAAIoE,YAAYpE,EAAIqE,aAAarE,EAAIqE,QAAQvD,QAEzCmD,KACFF,EAAahD,KAAKf,IAGhBA,EAAIqE,WAAWrE,EAAIqE,QAAQvD,UAAUd,EAAIkE,cAC3ClE,EAAIqE,QAAQjI,QAAQ;UAAA4D,OAAOgE,EAAUhE,GAAK8D;QAAAA;MAAAA,CAI1BE,CAAUhE;IAAAA,IAEvB+D;EAAAA;EAGF,SAASO,EAAgBC,GAAQC,GAAiBC;IAAAA,OAErDpB,EAAWkB,MACXC,EAAgBD,MAChBE,EAAYF,MACZE,EAAYC;EAAAA;EAIT,SAASC,EAAuBC,GAAYvK,GAAO4D;IAAAA,OACjD2G,IAAaA,EAAWvK,GAAO4D,UAA2B,MAAV5D;EAAAA;EAGlD,SAASwK;IAAAA,MACR,IAAIvG,MACR;EAAA;EAIJ,IAAIwG,IAAmB;EAyBvB,IAAM1D,IAAgB;IAChBC,IAAiB;EChUvB,IAAM0D,IAAuB,SAAvBA,EAAuB7J;MAAAA;QAC3B8J,MAAM;MAAA,GACH9J;IAAAA;IAGC+J,IAA2B,SAA3BA,EAA2B/J;MAAAA;QAC/B8J,MAAM;MAAA,GACH9J;IAAAA;IAGCgK,IAAwB,SAAxBA,EAAyBhK;MAAAA,IAAS+C;MAAAA;QACtCsF,iBAAetF,EAAO0B;QACtBwF,SAASlH,EAAOmH;QAChBJ,MAAM;MAAA,GACH9J;IAAAA;IAGCmK,IAAwB,SAAxBA,EAAyBnK;MAAAA,IAAS+C;MAAAA;QACtCsF,iBAAetF,EAAO0B;QACtBwF,SAASlH,EAAOmH;MAAAA,GACblK;IAAAA;IAGCoK,IAA6B,SAA7BA,EAA8BpK;MAAAA;QAClCqI,wBAD2CgC;QAE3CP,MAAM;MAAA,GACH9J;IAAAA;IAGCsK,IAA6B,SAA7BA,EAA8BtK;MAAAA;QAClCqI,wBAD2CgC;MAAAA,GAExCrK;IAAAA;IAGCuK,IAAqB,SAArBA,EAAsBvK;MAAAA;QAC1BqI,gBADmCvD,IACnBL;QAChBqF,MAAM;MAAA,GACH9J;IAAAA;IAGCwK,IAAsB,SAAtBA,EAAuBxK;MAAAA,IAASyK;MAAAA;QACpCpC,eAAaoC,EAAK3F,IAAIL,WAAMgG,EAAK1H,OAAO0B;QACxCqF,MAAM;MAAA,GACH9J;IAAAA;EAGU,SAAS0K;IAAAA,OACf;MACLC,YAAY;MACZC,eAAe;MACfC,oBAAoB;MACpB3G,SAAS;MACT4G,aAAa;MACb9D,YAAY;MACZ+D,gBAAgB;MAChBC,aAAa;MACbC,qBAAqB;MACrBC,yBAAyB;MACzBC,sBAAsB;MACtBC,gBAAgB;MAChBC,oBAAoB;MACpBnE,cAAc;MACdoE,kBAAkB;MAClBC,6BAA6B;MAC7BC,aAAa;MACbC,YAAY;MACZC,eAAe,CAAC7B;MAChB8B,mBAAmB,CAAC5B;MACpB6B,qBAAqB,CAACxB;MACtByB,qBAAqB,CAACvB;MACtBwB,gBAAgB,CAAC9B;MACjB+B,gBAAgB,CAAC5B;MACjB6B,aAAa,CAACzB;MACd0B,cAAc,CAACzB;MACf0B,kBAAkB;IAAA;EAAA;EChEtBnN,EAAQoN,qBAAqB,sBAC7BpN,EAAQqN,mBAAmB,oBAC3BrN,EAAQsN,mBAAmB,oBAC3BtN,EAAQuN,uBAAuB;EAExB,IAAMC,IAAsB,SAAtBA,EAAsBlM;IACjCA,EAAMmM,uBAAuB,CAACC,IAC9BpM,EAAMqM,+BAA+B,CAACC,IAEtCtM,EAAMuK,cAAc/E,KAAK+G,IACzBvM,EAAMkL,4BAA4B1F,KAAK0F,IACvClL,EAAMiL,iBAAiBzF,KAAK,UAAClD;MAAAA,IAAQG;MAAAA,iBAChCH,IACHG,EAAS+J,MAAMC;IAAAA,IAEjBzM,EAAMmL,YAAY3F,KAAK2F;EAAAA;EAGzBe,EAAoBhL,aAAa;EAEjC,IAAMkL,IAA8B,SAA9BA,EAA+BzM;MAAAA,IAAS+C;MAAAA,OAAa,CACzD/C,GACA;QACE+M,UAAU;UACRhK,EAAOiK,cAAc9N,EAAE+N,OAAOC;QAAAA;QAEhChN,OAAO;UACLoG,QAAQ;QAAA;QAEV4G,SAASnK,EAAOoK;QAChBC,OAAO;MAAA;IAAA;IAILT,IAAsC,SAAtCA,EAAuC3M;MAAAA,IAAS8C;MAAAA,OAAe,CACnE9C,GACA;QACE+M,UAAU;UACRjK,EAASwJ,sBAAsBpN,EAAE+N,OAAOC;QAAAA;QAE1ChN,OAAO;UACLoG,QAAQ;QAAA;QAEV4G,UAAUpK,EAASuK,qBAAqBvK,EAAS+J,MAAMC,cAAclH;QACrEwH,OAAO;QACPE,gBACGxK,EAASuK,oBAAoBvK,EAAS+J,MAAMC,cAAclH;MAAAA;IAAAA;EAIjE,SAASgH,EAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExB8N,eAAe;IAAA,GACZD;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQoN,iCAErBU;MACHC,eAAehK,EAAS2K,aAAaX,iBAAiB;IAAA;IAAA,IAItDS,EAAOvK,SAASjE,EAAQqN,kBAAkB;MAAA,IAMtCU,UAJoB,MAAjBS,EAAOpO,QACVoO,EAAOpO,SACN0N,EAAMC,cAAchJ,SAASyJ,EAAOG,uBAGnCb,EAAMC,gBAAeS,EAAOG,aAChCb,EAAMC,cAAczD,OAAO;QAAAvD,OAAKA,MAAMyH,EAAOG;MAAAA;MAAAA,aAG5Cb;QACHC;MAAAA;IAAAA;IAAAA,OAIAS,EAAOvK,SAASjE,EAAQsN,yBAErBQ;MACHC,eAAelL,EAAiB2L,EAAOpO,OAAO0N,EAAMC;IAAAA,KAIpDS,EAAOvK,SAASjE,EAAQuN,6BAOrBO;MACHC,qBANwB,MAAjBS,EAAOpO,QACVoO,EAAOpO,SACN0N,EAAMC,cAAclH,UAIE9C,EAASkE,WAAW3C,IAAI;QAAAyB,OAAKA,EAAErB;MAAAA,KAAM;IAAA;EAAA;EAKtE,SAAS8G,EAA4BzI;IAAAA,IAEjCyE,IAEEzE,EAFFyE;MACSuF,IACPhK,EADF+J,MAASC;IAGUzN,EAAM6C,QAAO,GAEhBC;IAAAA,IAsBd+H,IAA0B;IAE9B3C,EAAQrG,QACN;MAAAyM,OAAczD,KAtBK,SAAf0D,EAAgB7K,GAAQ8K;QAC5B9K,EAAOoK,YAAYU,MAAkBf,EAAchJ,SAASf,EAAO0B;QAAAA,IAE/DyF,IAA0B;QAAA,OAE1BnH,EAAOwE,WAAWxE,EAAOwE,QAAQ3B,SACnC7C,EAAOwE,QAAQrG,QACb;UAAA4M,OACG5D,KAA2B0D,EAAaE,GAAW/K,EAAOoK;QAAAA,KAG/DjD,IAA0BnH,EAAOoK,YAAY,IAAI,GAGnDpK,EAAOmH,0BAA0BA,GAE1BA;MAAAA,CAMkC0D,CAAaD,IAAW;IAAA;EAAA;EAIrE,SAASnC,EAAY1I;IAAAA,IAEjBoB,IAOEpB,EAPFoB;MACA6J,IAMEjL,EANFiL;MACAC,IAKElL,EALFkL;MACAhH,IAIElE,EAJFkE;MACAiH,IAGEnL,EAHFmL;MACSnB,IAEPhK,EAFF+J,MAASC;MAAAA,IAEPhK,EADFoL;MAAAA;MAGIC,IAAcpM,EAAae;MAE3BuK,IAAmBrG,EAAWpB,WAAWkH,EAAclH;MAEvDwG,IAAmB/M,EAAM+C,YAC7B,UAACsL,GAAUvO;QAAAA,OACT6O,EAAS;UAAEhL,MAAMjE,EAAQqN;UAAkBsB;UAAUvO;QAAAA;MAAAA,GACvD,CAAC6O;MAGG3B,IAAmBhN,EAAM+C,YAC7B;QAAAjD,OAAS6O,EAAS;UAAEhL,MAAMjE,EAAQsN;UAAkBlN;QAAAA;MAAAA,GACpD,CAAC6O;MAGG1B,IAAuBjN,EAAM+C,YACjC;QAAAjD,OAAS6O,EAAS;UAAEhL,MAAMjE,EAAQuN;UAAsBnN;QAAAA;MAAAA,GACxD,CAAC6O;MAGGtB,IAA+BtM,EACnC6N,IAAWvB,8BACX;QAAE5J,UAAUqL;MAAAA;IAGdJ,EAAY7M,QAAQ;MAClB6B,EAAOiK,eAAe;QACpBgB,EAAS;UACPhL,MAAMjE,EAAQqN;UACdsB,UAAU3K,EAAO0B;UACjBtF;QAAAA;MAAAA,GAIJ4D,EAAOyJ,uBAAuBpM,EAC5B6N,IAAWzB,sBACX;QACE1J,UAAUqL;QACVpL;MAAAA;IAAAA;IAAAA,IAKAqL,IAA4BrM,EAAamM;IAE/CzL,EAAuB;MACjB2L,OACFJ,EAAS;QAAEhL,MAAMjE,EAAQoN;MAAAA;IAAAA,GAE1B,CAAC6B,GAAU9J,KAEdV,OAAOkD,OAAO5D,GAAU;MACtBuK;MACAjB;MACAC;MACAC;MACAI;IAAAA;EAAAA;EC7LJ,IAAM2B,IAAsB;IACtBC,KAAwB;IACxBC,KAAiB,SAAjBA,GAAkB1B,GAAOU,GAAQiB;MAAAA,OAAc3B;IAAAA;IAC/C4B,KAAoB,SAApBA,GAAqB3J,GAAKuF;MAAAA,OAAUvF,EAAIqE,WAAW;IAAA;IACnDuF,KAAkB,SAAlBA,GAAmB5J,GAAKuF,GAAOlG;MAAAA,aAChCA,IAAS,CAACA,EAAOM,IAAI4F,GAAOpE,KAAK,OAAOoE;IAAAA;IACvCsE,KAA4B,SAA5BA,GAA4B7I;MAAAA,OAAKA;IAAAA;EAEvC,SAAS8I,GAAc5O;IAAAA,QASjBA,EAPFyN;MAAAA,mBAAeY;MAAAA,IAObrO,EANFV;MAAAA,mBAAgBgP;MAAAA,IAMdtO,EALF6O;MAAAA,mBAAaJ;MAAAA,IAKXzO,EAJF8O;MAAAA,mBAAWJ;MAAAA,IAIT1O,EAHF+O;MAAAA,mBAAeR;MAAAA,IAGbvO,EAFF6K;MAAAA,mBAAqB8D;IAAAA,eAEnB3O;MAIFyN;MACAnO;MACAuP;MACAC;MACAC;MACAlE;IAAAA;EAAAA;EAmZJ,SAASmE,GAAsBzH,GAAS0H;IAAAA,qBAAO;IAAA,IACzCC,IAAmB;MACnBC,IAAgB;MAChBC,IAAmB;MACnBC,IAAoB;IAAA,OAExB9H,EAAQrG,QAAQ;MAAAoO,IACCC,IAAeD,EAAxB/H;MAAAA,IAEN+H,EAAOE,YAAYP,GAEfM,KAAcA,EAAW3J,QAAQ;QAAA,QAM/BoJ,GAAsBO,GAAYN;UAJpCQ;UACAC;UACAC;UACAC;QAEFN,EAAOG,gBAAgBA,GACvBH,EAAOI,aAAaA,GACpBJ,EAAOK,gBAAgBA,GACvBL,EAAOM,iBAAiBA;MAAAA,OAExBN,EAAOG,gBAAgBH,EAAO7P,UAC9B6P,EAAOI,aAAaG,KAAKC,IACvBD,KAAKE,IAAIT,EAAO7P,UAAU6P,EAAO9P,QACjC8P,EAAO5P,WAET4P,EAAOK,gBAAgBL,EAAO5P,UAC9B4P,EAAOM,iBAAiBN,EAAOU,YAAYV,EAAOI,aAAa;MAE7DJ,EAAOnC,cACT8B,KAAQK,EAAOI,YACfR,KAAoBI,EAAOG,eAC3BN,KAAiBG,EAAOI,YACxBN,KAAoBE,EAAOK,eAC3BN,KAAqBC,EAAOM;IAAAA,IAIzB,CAACV,GAAkBC,GAAeC,GAAkBC;EAAAA;EAG7D,SAASY;IAAAA,IACPC;MACAzH;MACA0H;MACAC;MACArN;MACA+L;MACAD;MACAwB;MACAlC;IAmFA+B,EAAKhP,QAAQ,UAACoP,GAAaC;MAAAA,OA9ET,SAAZC,EAAaF,GAAaC,GAAUnM,GAAWD,GAAQsM;QAAAA,WAAnBrM,UAAQ;QAAA,IAE1C6E,IAAWqH;UAEX7L,IAAKqK,EAASwB,GAAaC,GAAUpM;UAEvCW,IAAMsL,EAAS3L;QAAAA,IAGdK,GAsCMA,EAAIqE,WAIbrE,EAAI4L,gBAAgBxP,QAAQ,UAAC4E,GAAGH;UAAAA,OAAM6K,EAAU1K,GAAGH,GAAGvB,IAAQ,GAAGU;QAAAA,aAzCjEA,IAAM;UACJL;UACAwE;UACAoB,OAAOkG;UACPnM;UACAuM,OAAO,CAAC;QAAA,GAKNA,MAAMtM,MAAMsF,GAChB7E,EAAI6L,MAAMtH,SAASM,GACnB7E,EAAI6L,MAAMzP,UAAUyI,GACpB7E,EAAI6L,MAAM,GAAG1E,eAAetC,GAG5B7E,EAAI8L,SAAS,IAGbH,EAAW5K,KAAKf,IAEhBqL,EAAStK,KAAKf,IAEdsL,EAAS3L,KAAMK,GAGfA,EAAI4L,kBAAkB7B,EAAWyB,GAAaC,IAG1CzL,EAAI4L,iBAAiB;UAAA,IACjBvH,IAAU;UAChBrE,EAAI4L,gBAAgBxP,QAAQ,UAAC4E,GAAGH;YAAAA,OAC9B6K,EAAU1K,GAAGH,GAAGvB,IAAQ,GAAGU,GAAKqE;UAAAA,IAGlCrE,EAAIqE,UAAUA;QAAAA;QAUdpG,EAAO2B,aACTI,EAAI8L,OAAO7N,EAAO0B,MAAM1B,EAAO2B,SAC7B4L,GACAC,GACAzL,GACA2L,GACAP,KAKJpL,EAAI8L,OAAO7N,EAAO0B,MAAM5D,EACtBwP,GACAvL,EAAI8L,OAAO7N,EAAO0B,KAClB;UACEK;UACA/B;UACAD,UAAUqL;QAAAA;MAAAA,CAOdqC,CAAUF,GAAaC,GAAU,QAAGM,GAAWpI;IAAAA;EAAAA;EClkBnD1J,EAAQ+R,gBAAgB,iBACxB/R,EAAQgS,oBAAoB,qBAC5BhS,EAAQiS,wBAAwB;EAAA,IAEnBC,KAAc,SAAdA,GAAc5Q;IACzBA,EAAM6Q,gCAAgC,CAACC,KACvC9Q,EAAM+Q,4BAA4B,CAACC,KACnChR,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F,KACvBnL,EAAMoL,WAAW5F,KAAK4F;EAAAA;EAGxBwF,GAAY1P,aAAa;EAEzB,IAAM4P,KAAuC,SAAvCA,GAAwCnR;MAAAA,IAAS8C;MAAAA,OAAe,CACpE9C,GACA;QACEsR,SAAS;UACPxO,EAASkO;QAAAA;QAEX9Q,OAAO;UACLoG,QAAQ;QAAA;QAEV8G,OAAO;MAAA;IAAA;IAILiE,KAAmC,SAAnCA,GAAoCrR;MAAAA,IAAS8E;MAAAA,OAAU,CAC3D9E,GACA;QACEsR,SAAS;UACPxM,EAAIiM;QAAAA;QAEN7Q,OAAO;UACLoG,QAAQ;QAAA;QAEV8G,OAAO;MAAA;IAAA;EAKX,SAASR,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExB2J,UAAU;IAAA,GACPkE;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQ+R,4BAErBjE;MACHlE,UAAU7F,EAAS2K,aAAa9E,YAAY;IAAA;IAAA,IAI5C4E,EAAOvK,SAASjE,EAAQiS,uBAAuB;MAAA,IACzC7R,IAAUoO,EAAVpO;QACAiR,IAAatN,EAAbsN;QAEFmB,IACJ/N,OAAOgO,KAAKpB,GAAUxK,WAAWpC,OAAOgO,KAAK3E,EAAMlE,UAAU/C;MAAAA,SAE5B,MAAVzG,IAAwBA,KAASoS,GAE3C;QAAA,IACP5I,IAAW;QAAA,OAEjBnF,OAAOgO,KAAKpB,GAAUlP,QAAQ;UAC5ByH,EAAS8I,MAAS;QAAA,UAIf5E;UACHlE;QAAAA;MAAAA;MAAAA,aAKCkE;QACHlE,UAAU;MAAA;IAAA;IAAA,IAIV4E,EAAOvK,SAASjE,EAAQgS,mBAAmB;MAAA;QACrCtM,IAA2B8I,EAA3B9I;QAAWiN,IAAgBnE,EAAvBpO;QACNwS,IAAS9E,EAAMlE,SAASlE;QAExBmN,SACmB,MAAhBF,IAA8BA,KAAeC;MAAAA,KAEjDA,KAAUC,gBAER/E;QACHlE,gBACKkE,EAAMlE,qBACRlE,MAAK;MAAA;MAGL,IAAIkN,MAAWC,GAAa;QAAA,QACJ/E,EAAMlE;QAAAA,EAA1BlE;QAAAA,aAEJoI;UACHlE,gBAHOlE;QAAAA;MAAAA;MAAAA,OAMFoI;IAAAA;EAAAA;EAKb,SAASrB,GAAY1I;IAAAA,IAEjBoN,IAWEpN,EAXFoN;MACAzH,IAUE3F,EAVF2F;MACA2H,IASEtN,EATFsN;MAAAA,IASEtN,EARF4F;MAAAA,mBAAoB;MAAAmJ,IAQlB/O,EAPFgP;MAAAA;MAAAA,IAOEhP,EANF8F;MAAAA;MAAAA,IAME9F,EALFiP;MAAAA;MACA9D,IAIEnL,EAJFmL;MACA5M,IAGEyB,EAHFzB;MACSsH,IAEP7F,EAFF+J,MAASlE;MACTqF,IACElL,EADFkL;IAGF5M,EACEC,GACA,CAAC,aAAa,cAAc,mBAAmB,oBAC/C;IAAA,IAGI2Q,IAAuBjQ,EAAagQ;MAEtCR,IAAoBU,QACtBzO,OAAOgO,KAAKpB,GAAUxK,UAAUpC,OAAOgO,KAAK7I,GAAU/C;IAGpD2L,KACE/N,OAAOgO,KAAKpB,GAAU1I,KAAK;MAAAjD,QAAOkE,EAASlE;IAAAA,OAC7C8M,KAAoB,IAKxB9O,EAAuB;MACjBuP,OACFhE,EAAS;QAAEhL,MAAMjE,EAAQ+R;MAAAA;IAAAA,GAE1B,CAAC9C,GAAUkC;IAAAA,IAERa,IAAoB1R,EAAM+C,YAC9B,UAACqC,GAAItF;QACH6O,EAAS;UAAEhL,MAAMjE,EAAQgS;UAAmBtM;UAAItF;QAAAA;MAAAA,GAElD,CAAC6O;MAGGgD,IAAwB3R,EAAM+C,YAClC;QAAAjD,OAAS6O,EAAS;UAAEhL,MAAMjE,EAAQiS;UAAuB7R;QAAAA;MAAAA,GACzD,CAAC6O;MAGGnF,IAAexJ,EAAM6S,QAAQ;QAAA,OAC7BJ,IACKtJ,EAAWC,GAAM;UAAEC;UAAmBC;UAAUC;QAAAA,KAGlDH;MAAAA,GACN,CAACqJ,GAAsBrJ,GAAMC,GAAmBC,GAAUC;MAEvDuJ,IAAgB9S,EAAM6S,QAAQ;QAAA,OAmCtC,UAA2BvJ;UAAAA,IACrByJ,IAAW;UAAA,OAEf5O,OAAOgO,KAAK7I,GAAUzH,QAAQ;YAAAuD,IACtB4N,IAAU5N,EAAGI,MAAM;YACzBuN,IAAWvC,KAAKE,IAAIqC,GAAUC,EAAQzM;UAAAA,IAGjCwM;QAAAA,CA3CmCE,CAAkB3J;MAAAA,GAAW,CACrEA;MAGIwF,IAAcpM,EAAae;MAE3BoO,IAAgC9Q,EACpC6N,IAAWiD,+BACX;QAAEpO,UAAUqL;MAAAA;IAGd3K,OAAOkD,OAAO5D,GAAU;MACtByP,iBAAiB9J;MACjBI;MACAJ,MAAMI;MACNsJ;MACAZ;MACAR;MACAC;MACAE;IAAAA;EAAAA;EAIJ,SAASzF,GAAW3G;IAAAA,IAAmBmJ,MAAZnL,SAAYmL;MAAYnL;IACjDgC,EAAIiM,oBAAoB;MAAA1K,OAAOvD,EAASiO,kBAAkBjM,EAAIL,IAAI4B;IAAAA,GAElEvB,EAAIsM,4BAA4BhR,EAC9B6N,IAAWmD,2BACX;MACEtO;MACAgC;IAAAA;EAAAA;EAAAA,ICtNO0E,KAAO,SAAPA,GAAQf,GAAM+J,GAAKC;IAAAA,OAC9BhK,IAAOA,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,OACrBsB,OAAO2M,GACXC,cACA7O,SAASiC,OAAO0M,GAAaE;MAAAA;IAAAA;EAAAA;EAMtCnJ,GAAKE,aAAa;IAAAzE,QAAQA;EAAAA;EAEnB,IAAM2N,KAAY,SAAZA,GAAanK,GAAM+J,GAAKC;IAAAA,OAC5BhK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,YACRoM,MAAb6B,KACH3M,OAAO2M,GAAUC,kBAAkB5M,OAAO0M,GAAaE;MAAAA;IAAAA;EAAAA;EAMjEC,GAAUlJ,aAAa;IAAAzE,QAAQA;EAAAA;EAExB,IAAM4N,KAAgB,SAAhBA,GAAiBpK,GAAM+J,GAAKC;IAAAA,OAChChK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,YACRoM,MAAb6B,KACH3M,OAAO2M,OAAc3M,OAAO0M;MAAAA;IAAAA;EAAAA;EAMtCI,GAAcnJ,aAAa;IAAAzE,QAAQA;EAAAA;EAE5B,IAAMnB,KAAW,SAAXA,GAAY2E,GAAM+J,GAAKC;IAAAA,OAC3BhK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,OACGK,EAAI8L,OAAOnM,GACZX,SAAS2O;MAAAA;IAAAA;EAAAA;EAK/B3O,GAAS4F,aAAa;IAAAzE,QAAQA,MAAQA,EAAIW;EAAAA;EAEnC,IAAMkN,KAAc,SAAdA,GAAerK,GAAM+J,GAAKC;IAAAA,OAC9BhK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,OAE1BiO,KACAA,EAAS9M,UACT6M,EAAYM,MAAM;UAAA9N,OAAOyN,EAAS5O,SAASmB;QAAAA;MAAAA;IAAAA;EAAAA;EAMnD6N,GAAYpJ,aAAa;IAAAzE,QAAQA,MAAQA,EAAIW;EAAAA;EAEtC,IAAMoN,KAAe,SAAfA,GAAgBvK,GAAM+J,GAAKC;IAAAA,OAC/BhK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,OAE1BiO,KACAA,EAAS9M,UACT6M,EAAY/K,KAAK;UAAAzC,OAAOyN,EAAS5O,SAASmB;QAAAA;MAAAA;IAAAA;EAAAA;EAMlD+N,GAAatJ,aAAa;IAAAzE,QAAQA,MAAQA,EAAIW;EAAAA;EAEvC,IAAMqN,KAAgB,SAAhBA,GAAiBxK,GAAM+J,GAAKC;IAAAA,OAChChK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,OACrBgO,EAAY3O,SAAS4O;MAAAA;IAAAA;EAAAA;EAKlCO,GAAcvJ,aAAa;IAAAzE,QAAQA,MAAQA,EAAIW;EAAAA;EAExC,IAAMsN,KAAQ,SAARA,GAASzK,GAAM+J,GAAKC;IAAAA,OACxBhK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,OACGK,EAAI8L,OAAOnM,OACRgO;MAAAA;IAAAA;EAAAA;EAK1BS,GAAMxJ,aAAa;IAAAzE,YAAsB,MAARA;EAAAA;EAE1B,IAAMkO,KAAS,SAATA,GAAU1K,GAAM+J,GAAKC;IAAAA,OACzBhK,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,OACGK,EAAI8L,OAAOnM,MAETgO;MAAAA;IAAAA;EAAAA;EAKzBU,GAAOzJ,aAAa;IAAAzE,OAAc,QAAPA;EAAAA;EAEpB,IAAMmO,KAAU,SAAVA,GAAW3K,GAAM+J,GAAKC;IAAAA,QAChBA,KAAe;MAA3B3C;MAAKC;IAAAA,KAEVD,IAAqB,mBAARA,IAAmBA,KAAOuD,UACvCtD,IAAqB,mBAARA,IAAmBA,IAAMsD,QAEvB;MAAA,IACPC,IAAOxD;MACbA,IAAMC,GACNA,IAAMuD;IAAAA;IAAAA,OAGD7K,EAAKY,OAAO;MAAAvE,OACV0N,EAAI9K,KAAK;QAAAjD,IACRiO,IAAW5N,EAAI8L,OAAOnM;QAAAA,OACrBiO,KAAY5C,KAAO4C,KAAY3C;MAAAA;IAAAA;EAAAA;EAK5CqD,GAAQ1J,aAAa;IAAAzE,QAClBA,KAA0B,mBAAXA,EAAI,MAAqC,mBAAXA,EAAI;EAAA;EAAA;IAAAsO;IAAA/J;IAAAoJ;IAAAC;IAAA/O;IAAAgP;IAAAE;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;ECtHpDrU,EAAQyU,eAAe,gBACvBzU,EAAQ0U,YAAY,aACpB1U,EAAQ2U,gBAAgB;EAAA,IAEXC,KAAa,SAAbA,GAAatT;IACxBA,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F;EAAAA;EAKzB,SAASoB,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExB4U,SAAS;IAAA,GACN/G;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQyU,2BAErB3G;MACH+G,SAAS9Q,EAAS2K,aAAamG,WAAW;IAAA;IAAA,IAI1CrG,EAAOvK,SAASjE,EAAQ0U,WAAW;MAAA,IAC7B/F,IAA0BH,EAA1BG;QAAU+E,IAAgBlF,EAAhBkF;QACVzL,IAA6ClE,EAA7CkE;QAAyBsC,IAAoBxG,EAAjCyG;QAEdxG,IAASiE,EAAW6M,KAAK;UAAA/N,OAAKA,EAAErB,OAAOiJ;QAAAA;MAAAA,KAExC3K,SACG,IAAIK,yDACyCsK;MAAAA,IAI/CoG,IAAe1K,EACnBrG,EAAOsG,QACPC,KAAmB,IACnBC;QAGIwK,IAAiBlH,EAAM+G,QAAQC,KAAK;UAAA/N,OAAKA,EAAErB,OAAOiJ;QAAAA;QAElDsG,IAAYpS,EAChB6Q,GACAsB,KAAkBA,EAAe5U;MAAAA,OAI/BsK,EAAuBqK,EAAapK,YAAYsK,GAAWjR,WAExD8J;QACH+G,SAAS/G,EAAM+G,QAAQvK,OAAO;UAAAvD,OAAKA,EAAErB,OAAOiJ;QAAAA;MAAAA,WAMzCb,GAFHkH;QAGAH,SAAS/G,EAAM+G,QAAQvP,IAAI;UAAAyB,OACrBA,EAAErB,OAAOiJ,IACJ;YAAEjJ,IAAIiJ;YAAUvO,OAAO6U;UAAAA,IAEzBlO;QAAAA;MAAAA;QAOX8N,mBAAa/G,EAAM+G,UAAS;UAAEnP,IAAIiJ;UAAUvO,OAAO6U;QAAAA;MAAAA;IAAAA;IAAAA,IAInDzG,EAAOvK,SAASjE,EAAQ2U,eAAe;MAAA,IACjCE,IAAYrG,EAAZqG;QACA5M,IAA6ClE,EAA7CkE;QAAyBsC,IAAoBxG,EAAjCyG;MAAAA,aAGfsD;QAEH+G,SAAShS,EAAiBgS,GAAS/G,EAAM+G,SAASvK,OAAO;UAAAA,IACjDtG,IAASiE,EAAW6M,KAAK;YAAA/N,OAAKA,EAAErB,OAAO4E,EAAO5E;UAAAA;UAAAA,QAQlDgF,EAPmBL,EACnBrG,EAAOsG,QACPC,KAAmB,IACnBC,IAIoCG,YAAYL,EAAOlK,OAAO4D;QAAAA;MAAAA;IAAAA;EAAAA;EAUxE,SAASyI,GAAY1I;IAAAA,IAEjBoN,IAYEpN,EAZFoN;MACAzH,IAWE3F,EAXF2F;MACA0H,IAUErN,EAVFqN;MACAC,IASEtN,EATFsN;MACApJ,IAQElE,EARFkE;MACasC,IAOXxG,EAPFyG;MACA0K,IAMEnR,EANFmR;MAAAA,IAMEnR,EALFoR;MAAAA;MACAC,IAIErR,EAJFqR;MACSP,IAGP9Q,EAHF+J,MAAS+G;MACT5F,IAEElL,EAFFkL;MAAAA,IAEElL,EADFsR;MAAAA;MAGIX,IAAYpU,EAAM+C,YACtB,UAACsL,GAAU+E;QACTzE,EAAS;UAAEhL,MAAMjE,EAAQ0U;UAAW/F;UAAU+E;QAAAA;MAAAA,GAEhD,CAACzE;MAGG0F,IAAgBrU,EAAM+C,YAC1B;QACE4L,EAAS;UACPhL,MAAMjE,EAAQ2U;UACdE;QAAAA;MAAAA,GAGJ,CAAC5F;IAGHhH,EAAW9F,QAAQ;MAAA6B,IAEf0B,IAIE1B,EAJF0B;QACAC,IAGE3B,EAHF2B;QACkB2P,IAEhBtR,EAFFmR;QACgBI,IACdvR,EADFoR;MAIFpR,EAAOwR,YAAY7P,IACfuD,GAC2B,MAAzBqM,UAAwCzD,IACrB,MAAnBsD,UAAkCtD,IAClC,KAEF5I,EAAgBoM,GAAwBH,IAAkB,IAG9DnR,EAAO0Q,YAAY;QAAAxO,OAAOwO,EAAU1Q,EAAO0B,IAAIQ;MAAAA;MAAAA,IAIzCuP,IAAQZ,EAAQC,KAAK;QAAA/N,OAAKA,EAAErB,OAAOA;MAAAA;MACzC1B,EAAO0P,cAAc+B,KAASA,EAAMrV;IAAAA;IAAAA,QAOlCE,EAAM6S,QAAQ;QAAA,IACZ+B,MAAkBL,EAAQhO,eACrB,CAAC6C,GAAM0H,GAAUC;QAAAA,IAGpBqE,IAAmB;UACnBC,IAAmB;QAAA,OAiElB,CA9DY,SAAbC,EAAclM,GAAMrE;UAAAA,qBAAQ;UAAA,IAC5BwQ,IAAenM;UAAAA,QAEnBmM,IAAehB,EAAQ7T,OACrB,UAAC8U;YAAAA,IAAqBnH,MAAJjJ;cAAqBgO,MAAPtT;cAExB4D,IAASiE,EAAW6M,KAAK;gBAAA/N,OAAKA,EAAErB,OAAOiJ;cAAAA;YAAAA,KAExC3K,UACI8R;YAGK,MAAVzQ,MACFrB,EAAO+R,kBAAkBD;YAAAA,IAGrBf,IAAe1K,EACnBrG,EAAOsG,QACPC,KAAmB,IACnBC;YAAAA,OAGGuK,KASL/Q,EAAO6R,eAAed,EACpBe,GACA,CAACnH,IACD+E,IAGK1P,EAAO6R,iBAdZ1R,QAAQ6R,yEAC4DhS,EAAO0B,WAEpEoQ;UAAAA,GAaXpM,IAOWvH,QAAQ;YACnBuT,EAAiB5O,KAAKf,IACtB4P,EAAiB5P,EAAIL,MAAMK,GACtBA,EAAIqE,YAITrE,EAAIqE,UACFrE,EAAIqE,WAAWrE,EAAIqE,QAAQvD,SAAS,IAChC+O,EAAW7P,EAAIqE,SAAS/E,IAAQ,KAChCU,EAAIqE;UAAAA,IAGLyL;QAAAA,CAGDD,CAAWlM,IAAOgM,GAAkBC;MAAAA,GAC3C,CACDT,GACAL,GACAnL,GACA0H,GACAC,GACApJ,GACAsC;MAlFAsL;MACAH;MACAC;IAmFFrV,EAAM6S,QAAQ;MAGelL,EAAWqC,OACpC;QAAAtG,QAAW6Q,EAAQC,KAAK;UAAA/N,OAAKA,EAAErB,OAAO1B,EAAO0B;QAAAA;MAAAA,GAK5BvD,QAAQ;QACzB6B,EAAO+R,kBAAkBF,GACzB7R,EAAO6R,eAAeA;MAAAA;IAAAA,GAEvB,CAACA,GAAchB,GAAS5M;IAAAA,IAErBgO,IAAsBjT,EAAaqS;IAEzC3R,EAAuB;MACjBuS,OACFhH,EAAS;QAAEhL,MAAMjE,EAAQyU;MAAAA;IAAAA,GAE1B,CAACxF,GAAUiG,IAAgB,OAAO/D,KAErC1M,OAAOkD,OAAO5D,GAAU;MACtBgS,iBAAiBrM;MACjBwM,qBAAqB9E;MACrB+E,qBAAqB9E;MACrBwE;MACAH;MACAC;MACAjM,MAAMmM;MACNzE,UAAUsE;MACVrE,UAAUsE;MACVjB;MACAC;IAAAA;EAAAA;EAjRJC,GAAWpS,aAAa,cCTxBxC,EAAQoW,oBAAoB,qBAC5BpW,EAAQqW,kBAAkB;EAAA,IAEbC,KAAkB,SAAlBA,GAAkBhV;IAC7BA,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F;EAAAA;EAKzB,SAASoB,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQoW,gCAErBtI;MACHyI,cAAcxS,EAAS2K,aAAa6H,qBAAgBzE;IAAAA;IAAAA,IAIpDtD,EAAOvK,SAASjE,EAAQqW,iBAAiB;MAAA,IACnC3C,IAAgBlF,EAAhBkF;QACAnJ,IAAoBxG,EAApBwG;QAEFwK,IAAe1K,EACnBtG,EAASwS,cACThM,KAAmB,IACnBC;QAGIyK,IAAYpS,EAAiB6Q,GAAa5F,EAAMyI;MAAAA,IAGlD7L,EAAuBqK,EAAapK,YAAYsK,IAAY;QACRnH,EAA9CyI;QAAAA,SAA8CzI;MAAAA;MAAAA,aAKnDA;QACHyI,cAActB;MAAAA;IAAAA;EAAAA;EAKpB,SAASxI,GAAY1I;IAAAA,IAEjBoN,IAYEpN,EAZFoN;MACAzH,IAWE3F,EAXF2F;MACA0H,IAUErN,EAVFqN;MACAC,IASEtN,EATFsN;MACApJ,IAQElE,EARFkE;MACasC,IAOXxG,EAPFyG;MACA+L,IAMExS,EANFwS;MACAC,IAKEzS,EALFyS;MACuBC,IAIrB1S,EAJF+J,MAASyI;MACTtH,IAGElL,EAHFkL;MAAAA,IAGElL,EAFF2S;MAAAA;MACAC,IACE5S,EADF4S;MAGIN,IAAkB/V,EAAM+C,YAC5B;QACE4L,EAAS;UAAEhL,MAAMjE,EAAQqW;UAAiB3C;QAAAA;MAAAA,GAE5C,CAACzE;MAAAA,IAYC3O,EAAM6S,QAAQ;QAAA,IACZqD,UAAmD,MAAtBC,UACxB,CAAC/M,GAAM0H,GAAUC;QAAAA,IAGpBqE,IAAmB;UACnBC,IAAmB;UAEnBZ,IAAe1K,EACnBkM,GACAhM,KAAmB,IACnBC;QAAAA,KAGGuK,UACH5Q,QAAQ6R,uDACDtM;QAGTzB,EAAW9F,QAAQ;UAAA6B,IACY4S,IAA8B5S,EAAnD2S;UAER3S,EAAOwR,YAAYtM,GACa,MAA9B0N,UAA6C9E,IACrB,MAAxB6E,UAAuC7E,IACvC;QAAA;QAAA,IAIE+E,IAAoB5O,EAAWqC,OAAO;UAAAwM,QAAqB,MAAhBA,EAAEtB;QAAAA;QAAAA,OAuB5C,CApBY,SAAbI,EAAaC;UAAAA,QACjBA,IAAed,EACbc,GACAgB,EAAkBvR,IAAI;YAAAyB,OAAKA,EAAErB;UAAAA,IAC7B+Q,IAGWtU,QAAQ;YACnBuT,EAAiB5O,KAAKf,IACtB4P,EAAiB5P,EAAIL,MAAMK,GAE3BA,EAAIqE,UACFrE,EAAIqE,WAAWrE,EAAIqE,QAAQvD,SACvB+O,EAAW7P,EAAIqE,WACfrE,EAAIqE;UAAAA,IAGLyL;QAAAA,CAGDD,CAAWlM,IAAOgM,GAAkBC;MAAAA,GAC3C,CACDa,GACAC,GACAF,GACAhM,GACAtC,GACAyB,GACA0H,GACAC,GACAsF;MAjEAI;MACAC;MACAC;MAkEIC,IAA2BlU,EAAa0T;IAE9ChT,EAAuB;MACjBwT,OACFjI,EAAS;QAAEhL,MAAMjE,EAAQoW;MAAAA;IAAAA,GAE1B,CAACnH,GAAUuH,IAAqB,OAAOrF,KAE1C1M,OAAOkD,OAAO5D,GAAU;MACtBoT,uBAAuBzN;MACvB0N,2BAA2BhG;MAC3BiG,2BAA2BhG;MAC3B0F;MACAC;MACAC;MACAvN,MAAMqN;MACN3F,UAAU4F;MACV3F,UAAU4F;MACVZ;MACAM;IAAAA;EAAAA;ECjLG,SAASW,GAAIzF,GAAQ0F;IAAAA,OAGnBA,EAAiBvW,OACtB,UAACsW,GAAKpW;MAAAA,OAASoW,KAAuB,mBAATpW,IAAoBA,IAAO;IAAA,GACxD;EAAA;EDqBJoV,GAAgB9T,aAAa;EAAA;MAAAgS;MAAA8C;MAAAvG,KCjBtB,aAAac;QAAAA,IACdd,IAAMc,EAAO,MAAM;QAAA,OAEvBA,EAAO1P,QAAQ;UACQ,mBAAV/B,MACT2Q,IAAMD,KAAKC,IAAIA,GAAK3Q;QAAAA,IAIjB2Q;MAAAA;MAAAA,KAGF,aAAac;QAAAA,IACdb,IAAMa,EAAO,MAAM;QAAA,OAEvBA,EAAO1P,QAAQ;UACQ,mBAAV/B,MACT4Q,IAAMF,KAAKE,IAAIA,GAAK5Q;QAAAA,IAIjB4Q;MAAAA;MAAAA,QAGF,gBAAgBa;QAAAA,IACjBd,IAAMc,EAAO,MAAM;UACnBb,IAAMa,EAAO,MAAM;QAAA,OAEvBA,EAAO1P,QAAQ;UACQ,mBAAV/B,MACT2Q,IAAMD,KAAKC,IAAIA,GAAK3Q,IACpB4Q,IAAMF,KAAKE,IAAIA,GAAK5Q;QAAAA,IAId2Q,WAAQC;MAAAA;MAAAA,SAGb,iBAAiBa;QAAAA,OACfyF,GAAI,GAAMzF,KAAUA,EAAOhL;MAAAA;MAAAA,QAG7B,gBAAgBgL;QAAAA,KAChBA,EAAOhL,eACH;QAAA,IAGH2Q,IAAM1G,KAAK2G,MAAM5F,EAAOhL,SAAS;UACjC6Q,IAAO,UAAI7F,GAAQ8F,KAAK,UAACtO,GAAGuO;YAAAA,OAAMvO,IAAIuO;UAAAA;QAAAA,OACrC/F,EAAOhL,SAAS,KAAM,IAAI6Q,EAAKF,MAAQE,EAAKF,IAAM,KAAKE,EAAKF,MAAQ;MAAA;MAAAK,QAGtE,gBAAgBhG;QAAAA,OACdjQ,MAAMkW,KAAK,IAAIC,IAAIlG,GAAQA;MAAAA;MAAAA,aAG7B,qBAAqBA;QAAAA,OACnB,IAAIkG,IAAIlG,GAAQmG;MAAAA;MAAAA,OAGlB,eAAenG;QAAAA,OACbA,EAAOhL;MAAAA;IAAAA;ICxDVoR,KAAa;IACbC,KAAc;EAGpBlY,EAAQmY,eAAe,gBACvBnY,EAAQoY,aAAa,cACrBpY,EAAQqY,gBAAgB;EAAA,IAEXC,KAAa,SAAbA,GAAahX;IACxBA,EAAMiX,wBAAwB,CAACC,KAC/BlX,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMgL,mBAAmBxF,KAAK,UAAClD;MAAAA,IAAQG;MAAAA,iBAClCH,IACHG,EAAS+J,MAAM2K;IAAAA,IAEjBnX,EAAM+K,eAAevF,KAAKuF,KAC1B/K,EAAMmL,YAAY3F,KAAK2F,KACvBnL,EAAMoL,WAAW5F,KAAK4F;EAAAA;EAGxB4L,GAAW9V,aAAa;EAExB,IAAMgW,KAA+B,SAA/BA,GAAgCvX;IAAAA,IAASsP;IAAAA,OAAa,CAC1DtP,GACA;MACEsR,SAAShC,EAAOmI,aACZ;QACEvY,EAAEwY,WACFpI,EAAO8H;MAAAA,SAETvG;MACJ3Q,OAAO;QACLoG,QAAQgJ,EAAOmI,aAAa,iBAAY5G;MAAAA;MAE1CzD,OAAO;IAAA;EAAA;EAKX,SAASR,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExBwY,SAAS;IAAA,GACN3K;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQmY,2BAErBrK;MACH2K,SAAS1U,EAAS2K,aAAa+J,WAAW;IAAA;IAAA,IAI1CjK,EAAOvK,SAASjE,EAAQoY,yBAGrBtK;MACH2K,SAHgBjK,EAAVpO;IAAAA;IAAAA,IAONoO,EAAOvK,SAASjE,EAAQqY,eAAe;MAAA,IACjC1J,IAAgCH,EAAhCG;QAAiByJ,IAAe5J,EAAtBpO;QAEZwY,SACkB,MAAfR,IACHA,KACCtK,EAAM2K,QAAQ1T,SAAS4J;MAAAA,aAIvBb,GAFH8K;QAGAH,mBAAa3K,EAAM2K,UAAS9J;MAAAA;QAM9B8J,SAAS3K,EAAM2K,QAAQnO,OAAO;UAAAvD,OAAKA,MAAM4H;QAAAA;MAAAA;IAAAA;EAAAA;EAK/C,SAAStC,GACPlH;IAAAA,IAGasT,MADX1U,SACE+J,MAAS2K;MAOPI,IAAiBJ,EACpBnT,IAAI;QAAAwT,OAAK3T,EAAQ2P,KAAK;UAAAiE,OAAOA,EAAIrT,OAAOoT;QAAAA;MAAAA,GACxCxO,OAAO4I;MAEJ8F,IAAoB7T,EAAQmF,OAAO;QAAAyO,QAAQN,EAAQ1T,SAASgU,EAAIrT;MAAAA;IAAAA,QAEtEP,cAAc0T,GAAmBG,IAEzB7W,QAAQ;MACd6B,EAAOiV,YAAYR,EAAQ1T,SAASf,EAAO0B,KAC3C1B,EAAOkV,eAAeT,EAAQU,QAAQnV,EAAO0B;IAAAA,IAGxCP;EAAAA;EAGT,IAAMiU,KAA0B;EAEhC,SAAS3M,GAAY1I;IAAAA,IAEjBoN,IAgBEpN,EAhBFoN;MACAzH,IAeE3F,EAfF2F;MACA0H,IAcErN,EAdFqN;MACAC,IAaEtN,EAbFsN;MACApJ,IAYElE,EAZFkE;MACA+G,IAWEjL,EAXFiL;MAAAA,IAWEjL,EAVFsV;MAAAA,mBAAYC;MACZC,IASExV,EATFwV;MAAAA,IASExV,EARFyV;MAAcC,mBAAmBL;MACjC9W,IAOEyB,EAPFzB;MACSmW,IAMP1U,EANF+J,MAAS2K;MACTxJ,IAKElL,EALFkL;MAAAA,IAKElL,EAJF2V;MAAAA;MACAC,IAGE5V,EAHF4V;MACAC,IAEE7V,EAFF6V;MACA1K,IACEnL,EADFmL;IAGF7M,EAAkBC,GAAS,CAAC,kBAAkB,eAAe;IAAA,IAEvD8M,IAAcpM,EAAae;IAEjCkE,EAAW9F,QAAQ;MAAA6B,IAEf2B,IAGE3B,EAHF2B;QACgBkU,IAEd7V,EAFF8V;QACgBC,IACd/V,EADF2V;MAGF3V,EAAO0U,aAAa/S,IAChBuD,EACElF,EAAO0U,aACkB,MAAzBqB,UAAwCjI,IACrB,MAAnB6H,UAAkC7H,IAClC,KAEF5I,EACElF,EAAO0U,YACPmB,GACAD,IACA,IAGF5V,EAAO0U,eACT1U,EAAOqU,gBAAgB;QAAA,OAAMtU,EAASsU,cAAcrU,EAAO0B;MAAAA,IAG7D1B,EAAOgW,aAAahW,EAAOgW,cAAchW,EAAOxD;IAAAA;IAAAA,IAG5C6X,IAAgB/X,EAAM+C,YAC1B,UAACsL,GAAUvO;QACT6O,EAAS;UAAEhL,MAAMjE,EAAQqY;UAAe1J;UAAUvO;QAAAA;MAAAA,GAEpD,CAAC6O;MAGGmJ,IAAa9X,EAAM+C,YACvB;QACE4L,EAAS;UAAEhL,MAAMjE,EAAQoY;UAAYhY;QAAAA;MAAAA,GAEvC,CAAC6O;IAGHD,EAAY7M,QAAQ;MAClBoO,EAAOgI,wBAAwBlX,EAC7B6N,IAAWqJ,uBACX;QAAExU,UAAUqL;QAAemB;MAAAA;IAAAA;IAAAA,QAY3BjQ,EAAM6S,QAAQ;QAAA,IACZoG,MAAkBd,EAAQ5R,eACrB,CACL6C,GACA0H,GACAC,GACA4G,IACAC,IACA9G,GACAC;QAAAA,IAKE4I,IAAkBxB,EAAQnO,OAAO;YAAAwO,OACrC7Q,EAAW6M,KAAK;cAAAiE,OAAOA,EAAIrT,OAAOoT;YAAAA;UAAAA;UAiEhCoB,IAAkB;UAChBC,IAAkB;UAClBC,IAAsB;UACtBC,IAAsB;UACtBC,IAAqB;UACrBC,IAAqB;UA6DrBC,IA1DqB,SAArBC,EAAsB/Q,GAAMrE,GAAWqV;YAAAA,eAAXrV,UAAQ,IAEpCA,MAAU4U,EAAgBpT,eACrB6C,EAAKpE,IAAI,UAACS;cAAAA,aAAcA;gBAAKV;cAAAA;YAAAA;YAAAA,IAGhCsJ,IAAWsL,EAAgB5U;cAG7BsV,IAAetB,EAAU3P,GAAMiF;YAAAA,OAGLlK,OAAOmW,QAAQD,GAAcrV,IACzD,aAA4BgG;cAAAA,IAA1BuP;gBAAYL;gBACR9U,IAAQiJ,UAAYkM;gBAIlBzQ,IAAUqQ,EAAmBD,GAAanV,IAAQ,GAHxDK,IAAKgV,IAAcA,UAAYhV,IAAOA;gBAMhCoV,IAAWzV,IACbI,EAAU+U,GAAa,cACvBA;gBAEE3I,IA7FkB,UAACiJ,GAAUN,GAAanV;kBAAAA,IAC9CwM,IAAS;kBAAA,OAEf5J,EAAW9F,QAAQ;oBAAA6B,IAEbiW,EAAgBlV,SAASf,EAAO0B,KAClCmM,EAAO7N,EAAO0B,MAAM8U,EAAY,KAC5BA,EAAY,GAAG3I,OAAO7N,EAAO0B,MAC7B;sBAAA,IAKFqV,IAC0B,qBAArB/W,EAAOgX,YACVhX,EAAOgX,YACPvB,EAAiBzV,EAAOgX,cACxBxB,GAAaxV,EAAOgX;sBAAAA,IAEtBD,GAAa;wBAAA,IAETE,IAAgBT,EAAYlV,IAAI;4BAAAS,OAAOA,EAAI8L,OAAO7N,EAAO0B;0BAAAA;0BAGzDwV,IAAaJ,EAASxV,IAAI;4BAAAS,IAC1BoV,IAAcpV,EAAI8L,OAAO7N,EAAO0B;4BAAAA,KAE/BL,KAASrB,EAAOoX,gBAAgB;8BAAA,IAC7BC,IAC6B,qBAA1BrX,EAAOoX,iBACVpX,EAAOoX,iBACP3B,EAAiBzV,EAAOoX,mBACxB5B,GAAaxV,EAAOoX;8BAAAA,KAErBC,SACHlX,QAAQC,KAAK;gCAAEJ;8BAAAA,IACT,IAAIK;8BAKZ8W,IAAcE,EAAiBF,GAAapV,GAAK/B;4BAAAA;4BAAAA,OAE5CmX;0BAAAA;wBAGTtJ,EAAO7N,EAAO0B,MAAMqV,EAAYG,GAAYD;sBAAAA,OACvC;wBAAA,IAAIjX,EAAOgX,iBAChB7W,QAAQC,KAAK;0BAAEJ;wBAAAA,IACT,IAAIK;wBAIVwN,EAAO7N,EAAO0B,MAAM;sBAAA;oBAAA;kBAAA,IAIjBmM;gBAAAA,CAoCYyJ,CAAsBR,GAAUN,GAAanV;gBAEtDU,IAAM;kBACVL;kBACAuT,YAAW;kBACXsC,WAAW5M;kBACXkM;kBACAhJ;kBACAzH;kBACA0Q;kBACAzV;kBACAiG;gBAAAA;cAAAA,OAGFlB,EAAQjI,QAAQ;gBACd+X,EAAgBpT,KAAK0U,IACrBrB,EAAgBqB,EAAO9V,MAAM8V,GACzBA,EAAOvC,aACTmB,EAAoBtT,KAAK0U,IACzBnB,EAAoBmB,EAAO9V,MAAM8V,MAEjClB,EAAmBxT,KAAK0U,IACxBjB,EAAmBiB,EAAO9V,MAAM8V;cAAAA,IAI7BzV;YAAAA;UAAAA,CAOO0U,CAAmB/Q;QAAAA,OAEvC8Q,EAAYrY,QAAQ;UAClB+X,EAAgBpT,KAAK0U,IACrBrB,EAAgBqB,EAAO9V,MAAM8V,GACzBA,EAAOvC,aACTmB,EAAoBtT,KAAK0U,IACzBnB,EAAoBmB,EAAO9V,MAAM8V,MAEjClB,EAAmBxT,KAAK0U,IACxBjB,EAAmBiB,EAAO9V,MAAM8V;QAAAA,IAK7B,CACLhB,GACAN,GACAC,GACAC,GACAC,GACAC,GACAC;MAAAA,GAED,CACDhB,GACAd,GACA/O,GACA0H,GACAC,GACApJ,GACAwR,GACAJ;MAzLAmB;MACAN;MACAC;MACAC;MACAC;MACAC;MACAC;MAsLIkB,IAAsBzY,EAAa0W;IAEzChW,EAAuB;MACjB+X,OACFxM,EAAS;QAAEhL,MAAMjE,EAAQmY;MAAAA;IAAAA,GAE1B,CAAClJ,GAAUsK,IAAgB,OAAOpI,KAErC1M,OAAOkD,OAAO5D,GAAU;MACtB2X,gBAAgBhS;MAChBiS,mBAAmBvK;MACnBwK,oBAAoBvK;MACpBmJ;MACAN;MACAC;MACAC;MACAC;MACAC;MACAC;MACA7Q,MAAM8Q;MACNpJ,UAAU8I;MACV7I,UAAU8I;MACV9B;MACAD;IAAAA;EAAAA;EAIJ,SAAS1L,GAAW3G;IAClBA,EAAI8V,SAAS1Z,QAAQ;MAAAuJ;MAEnBA,EAAKuN,YAAYvN,EAAK1H,OAAOiV,aAAavN,EAAK1H,OAAO0B,OAAOK,EAAIwV,WAEjE7P,EAAKoQ,iBAAiBpQ,EAAKuN,aAAavN,EAAK1H,OAAOiV,WAEpDvN,EAAKqQ,gBACFrQ,EAAKuN,cAAcvN,EAAKoQ,+BAAiB/V,EAAIqE,oBAAJ4R,EAAanV;IAAAA;EAAAA;EAItD,SAASyS,GAAiB5P,GAAMiF;IAAAA,OAC9BjF,EAAK1I,OAAO,UAACS,GAAMsE,GAAKa;MAAAA,IAGvBqV,SAAYlW,EAAI8L,OAAOlD;MAAAA,OAC7BlN,EAAKwa,KAAUra,MAAMC,QAAQJ,EAAKwa,MAAWxa,EAAKwa,KAAU,IAC5Dxa,EAAKwa,GAAQnV,KAAKf,IACXtE;IAAAA,GACN;EAAA;ECpbL,IAAMya,KAAsB;EAmH5B,SAASC,GAAa9S,GAAGuO;IAAAA,OAChBvO,MAAMuO,IAAI,IAAIvO,IAAIuO,IAAI,KAAK;EAAA;EAGpC,SAASwE,GAAuBC,GAAMC,GAAM3N;IAAAA,OACnC,CAAC0N,EAAKxK,OAAOlD,IAAW2N,EAAKzK,OAAOlD;EAAAA;EAG7C,SAAS4N,GAASlT;IAAAA,OACC,mBAANA,IACLmT,MAAMnT,MAAMA,MAAMiL,SAAYjL,OAAOiL,QAChC,KAEFtN,OAAOqC,KAEC,mBAANA,IACFA,IAEF;EAAA;EAAA;IAAAmL;IAAAiI,cAhImB,sBAACC,GAAMC,GAAMhO;MAAAA,QAC1ByN,GAAuBM,GAAMC,GAAMhO;QAA3CtF;QAAGuO;MAAAA,KAGRvO,IAAIkT,GAASlT,IACbuO,IAAI2E,GAAS3E,IAIbvO,IAAIA,EAAEvD,MAAMoW,IAAqB5R,OAAO4I,UACxC0E,IAAIA,EAAE9R,MAAMoW,IAAqB5R,OAAO4I,UAGjC7J,EAAExC,UAAU+Q,EAAE/Q,SAAQ;QAAA,IACvB+V,IAAKvT,EAAEwT;UACPC,IAAKlF,EAAEiF;UAELE,IAAKC,SAASJ,GAAI;UAClBK,IAAKD,SAASF,GAAI;UAElBI,IAAQ,CAACH,GAAIE,GAAItF;QAAAA,IAGnB6E,MAAMU,EAAM;UAAA,IACVN,IAAKE,UACA;UAAA,IAELA,IAAKF,WACC;QAAA;UAAA,IAMRJ,MAAMU,EAAM,YACPV,MAAMO,MAAO,IAAI;UAAA,IAItBA,IAAKE,UACA;UAAA,IAELA,IAAKF,WACC;QAAA;MAAA;MAAA,OAIL1T,EAAExC,SAAS+Q,EAAE/Q;IAAAA;IAAAA,UAEf,kBAAkB6V,GAAMC,GAAMhO;MAAAA,QACtByN,GAAuBM,GAAMC,GAAMhO;QAA3CtF;QAAGuO;MAAAA,OAKDuE,GAHP9S,IAAIA,EAAE8T,WACNvF,IAAIA,EAAEuF;IAAAA;IAAAA,OAKD,eAAeT,GAAMC,GAAMhO;MAAAA,QACnByN,GAAuBM,GAAMC,GAAMhO;MAAAA,OAEzCwN;IAAAA;IAAAA,QAGF,gBAAgBO,GAAMC,GAAMhO;MAAAA,QACpByN,GAAuBM,GAAMC,GAAMhO;QAA3CtF;QAAGuO;MAAAA,KAERvO,IAAIA,EAAEvD,MAAM,IAAIwE,OAAO4I,UACvB0E,IAAIA,EAAE9R,MAAM,IAAIwE,OAAO4I,UAEhB7J,EAAExC,UAAU+Q,EAAE/Q,SAAQ;QAAA,IACvB+V,IAAKvT,EAAEwT;UACPC,IAAKlF,EAAEiF;UAEPO,IAASR,EAAGhJ;UACZyJ,IAASP,EAAGlJ;QAAAA,IAGZwJ,IAASC,UACJ;QAAA,IAELA,IAASD,WACH;QAAA,IAGNR,IAAKE,UACA;QAAA,IAELA,IAAKF,WACC;MAAA;MAAA,OAKLvT,EAAExC,SAAS+Q,EAAE/Q;IAAAA;IAAAA,QAGf,gBAAgB6V,GAAMC,GAAMhO;MAAAA,QACpByN,GAAuBM,GAAMC,GAAMhO;QAA3CtF;QAAGuO;QAEF0F,IAAoB;MAAA,OAKnBnB,GAHP9S,IAAIzI,OAAOoG,OAAOqC,GAAGpC,QAAQqW,GAAmB,MAChD1F,IAAIhX,OAAOoG,OAAO4Q,GAAG3Q,QAAQqW,GAAmB;IAAA;EAAA;EC5FlDtd,EAAQud,cAAc,eACtBvd,EAAQwd,YAAY,aACpBxd,EAAQyd,eAAe,gBACvBzd,EAAQ0d,cAAc,eAEtBnd,EAAcod,WAAW,gBACzBpd,EAAcqd,iBAAgB;EAAA,IAEjBC,KAAY,SAAZA,GAAYvc;IACvBA,EAAMwc,uBAAuB,CAACC,KAC9Bzc,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F;EAAAA;EAGzBoR,GAAUrb,aAAa;EAEvB,IAAMub,KAA8B,SAA9BA,GAA+B9c;IAAAA,IAAS8C;MAAUC;MAAAA,IACPD,EAAvCia;MAAAA,mBAAmB;QAAA7d,OAAKA,EAAE8d;MAAAA;IAAAA,OAE3B,CACLhd,GACA;MACEsR,SAASvO,EAAOka,UACZ;QACE/d,EAAEwY,WACF3U,EAAOyZ,kBACL3L,IACC/N,EAASoa,oBAAoBH,EAAiB7d;MAAAA,SAGnD2R;MACJ3Q,OAAO;QACLoG,QAAQvD,EAAOka,UAAU,iBAAYpM;MAAAA;MAEvCzD,OAAOrK,EAAOka,UAAU,uBAAkBpM;IAAAA;EAAAA;EAMhD,SAASjE,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExBme,QAAQ;IAAA,GACLtQ;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQud,0BAErBzP;MACHsQ,QAAQra,EAAS2K,aAAa0P,UAAU;IAAA;IAAA,IAIxC5P,EAAOvK,SAASjE,EAAQ0d,0BAKrB5P;MACHsQ,QALiBtQ,EAAXsQ,OACiB9T,OAAO;QAAAvD,OAAKA,EAAErB,OAAO8I,EAAOG;MAAAA;IAAAA;IAAAA,IAQnDH,EAAOvK,SAASjE,EAAQwd,wBAGrB1P;MACHsQ,QAHiB5P,EAAX4P;IAAAA;IAAAA,IAON5P,EAAOvK,SAASjE,EAAQyd,cAAc;MAAA,IAyBpCY;QAxBI1P,IAA0BH,EAA1BG;QAAU2P,IAAgB9P,EAAhB8P;QAAMC,IAAU/P,EAAV+P;QAGtBtW,IAKElE,EALFkE;QACAkW,IAIEpa,EAJFoa;QACAK,IAGEza,EAHFya;QACAC,IAEE1a,EAFF0a;QAAAA,IAEE1a,EADF2a;QAAAA,mBAAuB9d,OAAOC;QAGxBud,IAAWtQ,EAAXsQ;QAIAR,IADO3V,EAAW6M,KAAK;UAAA/N,OAAKA,EAAErB,OAAOiJ;QAAAA,GACrCiP;QAGFe,IAAiBP,EAAOtJ,KAAK;UAAA/N,OAAKA,EAAErB,OAAOiJ;QAAAA;QAC3CiQ,IAAgBR,EAAO1b,UAAU;UAAAqE,OAAKA,EAAErB,OAAOiJ;QAAAA;QAC/CkQ,IAAiB,QAAOP;QAE1BQ,IAAY;MAAA,OAwBC,cAjBbT,KAFCF,KAAoBI,IACnBI,IACW,WAEA,QAIXC,MAAkBR,EAAOvX,SAAS,KAAuB,MAAlBuX,EAAOvX,SACnC,YACJ8X,IACI,WAEA,cAOdH,KACAK,KACAN,KAASE,OACRE,KACAA,EAAeL,SACdV,MACCe,EAAeL,QAAQV,OAE3BS,IAAa,WAGI,cAAfA,IACFS,IAAY,CACV;QACEpZ,IAAIiJ;QACJ2P,MAAMO,IAAiBP,IAAOV;MAAAA,KAGV,UAAfS,KACTS,cACKV,IACH;QACE1Y,IAAIiJ;QACJ2P,MAAMO,IAAiBP,IAAOV;MAAAA,KAIxBmB,OAAO,GAAGD,EAAUjY,SAAS6X,KACf,aAAfL,IAETS,IAAYV,EAAO9Y,IAAI;QAAAyB,OACjBA,EAAErB,OAAOiJ,UAEN5H;UACHuX,MAAMO,IAAiBP,KAAQK,EAAeL;QAAAA,KAG3CvX;MAAAA,KAEe,aAAfsX,MACTS,IAAYV,EAAO9T,OAAO;QAAAvD,OAAKA,EAAErB,OAAOiJ;MAAAA,WAIrCb;QACHsQ,QAAQU;MAAAA;IAAAA;EAAAA;EAKd,SAASrS,GAAY1I;IAAAA,IAEjBoN,IAeEpN,EAfFoN;MACAzH,IAcE3F,EAdF2F;MACA0H,IAaErN,EAbFqN;MACAnJ,IAYElE,EAZFkE;MAAAA,IAYElE,EAXFib;MAAAA,mBAAYC;MACDC,IAUTnb,EAVFob;MACAC,IASErb,EATFqb;MACAC,IAQEtb,EARFsb;MACAC,IAOEvb,EAPFub;MACAtQ,IAMEjL,EANFiL;MACSoP,IAKPra,EALF+J,MAASsQ;MACTnP,IAIElL,EAJFkL;MACA3M,IAGEyB,EAHFzB;MACA4M,IAEEnL,EAFFmL;MAAAA,IAEEnL,EADFwb;MAAAA;IAGFld,EACEC,GACA,CAAC,cAAc,mBAAmB,cAAc,oBAChD;IAAA,IAGIkb,IAAYld,EAAM+C,YACtB;QACE4L,EAAS;UAAEhL,MAAMjE,EAAQwd;UAAWY;QAAAA;MAAAA,GAEtC,CAACnP;MAIGwO,IAAend,EAAM+C,YACzB,UAACsL,GAAU2P,GAAMC;QACftP,EAAS;UAAEhL,MAAMjE,EAAQyd;UAAc9O;UAAU2P;UAAMC;QAAAA;MAAAA,GAEzD,CAACtP;MAIGG,IAAcpM,EAAae;IAGjCiL,EAAY7M,QAAQ;MAAA6B,IAEhB2B,IAIE3B,EAJF2B;QACS6Z,IAGPxb,EAHFka;QACeuB,IAEbzb,EAFFsb;QACA5Z,IACE1B,EADF0B;QAGIwY,IAAUvY,IACZuD,GAC0B,MAAxBuW,UAAuC3N,IACrB,MAAlBwN,UAAiCxN,IACjC,KAEF5I,EAAgBmW,GAAgBG,IAAsB;MAE1Dxb,EAAOka,UAAUA,GAEbla,EAAOka,YACTla,EAAOyZ,eAAe,UAACa,GAAMC;QAAAA,OAC3Bd,EAAazZ,EAAO0B,IAAI4Y,GAAMC;MAAAA,GAEhCva,EAAO0Z,cAAc;QACnBzO,EAAS;UAAEhL,MAAMjE,EAAQ0d;UAAa/O,UAAU3K,EAAO0B;QAAAA;MAAAA,IAI3D1B,EAAO8Z,uBAAuBzc,EAC5B6N,IAAW4O,sBACX;QACE/Z,UAAUqL;QACVpL;MAAAA;MAAAA,IAIE0b,IAAatB,EAAOtJ,KAAK;QAAA/N,OAAKA,EAAErB,OAAOA;MAAAA;MAC7C1B,EAAO2b,aAAaD,GACpB1b,EAAO4b,cAAcxB,EAAO1b,UAAU;QAAAqE,OAAKA,EAAErB,OAAOA;MAAAA,IACpD1B,EAAO6b,eAAe7b,EAAO2b,WAAWD,EAAWpB,YAAOxM;IAAAA;IAAAA,QAGvBxR,EAAM6S,QAAQ;QAAA,IAC7CiM,MAAiBhB,EAAOvX,eACnB,CAAC6C,GAAM0H;QAAAA,IAGV0O,IAAiB;UAGjBC,IAAkB3B,EAAO9T,OAAO;YAAAqN,OACpC1P,EAAW6M,KAAK;cAAAiE,OAAOA,EAAIrT,OAAOiS,EAAKjS;YAAAA;UAAAA;QAAAA,OAoElC,CAjEU,SAAXsa,EAAWtW;UAAAA,IAITuW,IAAajB,EACjBtV,GACAqW,EAAgBza,IAAI;YAAAqS,IAEZ3T,IAASiE,EAAW6M,KAAK;cAAA/N,OAAKA,EAAErB,OAAOiS,EAAKjS;YAAAA;YAAAA,KAE7C1B,SACG,IAAIK,yDACyCsT,EAAKjS;YAAAA,IAIlDiY,IAAa3Z,EAAb2Z;cASFuC,IACJ9W,EAAWuU,OACVuB,KAAiB,IAAIvB,MACtBwB,GAAUxB;YAAAA,KAEPuC,SACG,IAAI7b,4DAC4CsZ,uBAAyBhG,EAAKjS;YAAAA,OAM/E,UAAC2D,GAAGuO;cAAAA,OAAMsI,EAAW7W,GAAGuO,GAAGD,EAAKjS,IAAIiS,EAAK2G;YAAAA;UAAAA,IAGlDyB,EAAgBza,IAAI;YAAAqS,IAEZ3T,IAASiE,EAAW6M,KAAK;cAAA/N,OAAKA,EAAErB,OAAOiS,EAAKjS;YAAAA;YAAAA,OAE9C1B,KAAUA,EAAOmc,eACZxI,EAAK2G,QAGN3G,EAAK2G;UAAAA;UAAAA,OAKjB2B,EAAW9d,QAAQ;YACjB2d,EAAehZ,KAAKf,IACfA,EAAIqE,WAAkC,MAAvBrE,EAAIqE,QAAQvD,WAGhCd,EAAIqE,UAAU4V,EAASja,EAAIqE;UAAAA,IAGtB6V;QAAAA,CAGDD,CAAStW,IAAOoW;MAAAA,GACvB,CACDV,GACAhB,GACA1U,GACA0H,GACAnJ,GACA+W,GACAE;MArFKkB;MAAYN;MAwFbO,IAAqBrd,EAAauc;IAExC7b,EAAuB;MACjB2c,OACFpR,EAAS;QAAEhL,MAAMjE,EAAQud;MAAAA;IAAAA,GAE1B,CAAC6B,IAAe,OAAOjO,KAE1B1M,OAAOkD,OAAO5D,GAAU;MACtBuc,eAAe5W;MACf6W,mBAAmBnP;MACnBgP;MACAN;MACApW,MAAM0W;MACNhP,UAAU0O;MACVtC;MACAC;IAAAA;EAAAA;EAIG,SAASwB,GAAiBvY,GAAK8Z,GAAOC;IAAAA,OACpC,UAAI/Z,GAAKiR,KAAK,UAAC+E,GAAMC;MAAAA,KACrB,IAAI/V,IAAI,GAAGA,IAAI4Z,EAAM3Z,QAAQD,KAAK,GAAG;QAAA,IAClC8Z,IAASF,EAAM5Z;UACf0X,KAAmB,MAAZmC,EAAK7Z,MAA4B,WAAZ6Z,EAAK7Z;UACjC+Z,IAAUD,EAAOhE,GAAMC;QAAAA,IACb,MAAZgE,UACKrC,KAAQqC,IAAUA;MAAAA;MAAAA,OAGtBF,EAAK,KAAK/D,EAAKpR,QAAQqR,EAAKrR,QAAQqR,EAAKrR,QAAQoR,EAAKpR;IAAAA;EAAAA;ECpXjEtL,EAAQ4gB,YAAY,aACpB5gB,EAAQ6gB,WAAW,YACnB7gB,EAAQ8gB,cAAc;EAAA,IAETC,KAAgB,SAAhBA,GAAgBzf;IAC3BA,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F;EAAAA;EAKzB,SAASoB,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExB+gB,UAAU;MACVC,WAAW;IAAA,GACRnT;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQ4gB,wBAErB9S;MACHmT,WAAWld,EAAS2K,aAAauS,aAAa;IAAA;IAAA,IAI9CzS,EAAOvK,SAASjE,EAAQ6gB,UAAU;MAAA,IAC5BK,IAAoBnd,EAApBmd;QAAWC,IAASpd,EAATod;QACbC,IAAeve,EAAiB2L,EAAOyS,WAAWnT,EAAMmT;QAC1DI,KAAc;MAAA,OAEdD,IAAetT,EAAMmT,YAEvBI,KACiB,MAAfH,IACIC,EAAKta,UAAUiH,EAAMkT,WACrBI,IAAeF,IACZE,IAAetT,EAAMmT,cAE9BI,IAAcD,KAAgB,IAG3BC,UAKAvT;QACHmT,WAAWG;MAAAA,KALJtT;IAAAA;IAAAA,IASPU,EAAOvK,SAASjE,EAAQ8gB,aAAa;MAAA,IAC/BE,IAAaxS,EAAbwS;QACFM,IAAcxT,EAAMkT,WAAWlT,EAAMmT;MAAAA,aAItCnT;QACHmT,WAJgBnQ,KAAK2G,MAAM6J,IAAcN;QAKzCA;MAAAA;IAAAA;EAAAA;EAKN,SAASvU,GAAY1I;IAAAA,IAEjB2F,IAmBE3F,EAnBF2F;MAAAA,IAmBE3F,EAlBFwd;MAAAA;MAAAA,IAkBExd,EAjBF4F;MAAAA,mBAAoB;MACpBrH,IAgBEyB,EAhBFzB;MACWkf,IAeTzd,EAfFmd;MAAAA,IAeEnd,EAdFgP;MAAAA;MAAAA,IAcEhP,EAbF8F;MAAAA;MAAAA,IAaE9F,EAZF+J;MACEkT;MACAC;MACArX;MACA2M;MACA1B;MACA4D;MACA2F;MAEFnP,IAGElL,EAHFkL;MACAkC,IAEEpN,EAFFoN;MACAsQ,IACE1d,EADF0d;IAGFpf,EACEC,GACA,CAAC,mBAAmB,cAAc,cAAc,aAAa,gBAC7D;IAAA,IAGIof,IAAmB1e,EAAaue;IAEtC7d,EAAuB;MACjBge,OACFzS,EAAS;QAAEhL,MAAMjE,EAAQ4gB;MAAAA;IAAAA,GAE1B,CACD3R,GACAwS,IAAmB,OAAOtQ,GAC1BoF,GACA1B,GACA4D,GACA2F;IAAAA,IAGI8C,IAAYO,IACdD,IACA1Q,KAAK6Q,KAAKjY,EAAK7C,SAASma;MAEtBY,IAActhB,EAAM6S,QACxB;QAAA,OACE+N,IAAY,IACR,UAAI,IAAItf,MAAMsf,IAAYW,KAAK,MAAMvc,IAAI,UAACyB,GAAGH;UAAAA,OAAMA;QAAAA,KACnD;MAAA,GACN,CAACsa;MAGGC,IAAO7gB,EAAM6S,QAAQ;QAAA,IACrBgO;QAAAA,IAEAM,GACFN,IAAOzX,OACF;UAAA,IACCoY,IAAYd,IAAWC;YACvBc,IAAUD,IAAYd;UAE5BG,IAAOzX,EAAKsY,MAAMF,GAAWC;QAAAA;QAAAA,OAG3BhP,IACKoO,IAGF1X,EAAW0X,GAAM;UAAExX;UAAmBC;UAAUC;QAAAA;MAAAA,GACtD,CACDA,GACAD,GACAD,GACA8X,GACAR,GACAD,GACAjO,GACArJ;MAGIuY,IAAkBhB,IAAY;MAC9BiB,KACW,MAAfhB,IAAmBC,EAAKta,UAAUma,IAAWC,IAAYC,IAAY;MAEjEL,IAAWvgB,EAAM+C,YACrB;QACE4L,EAAS;UAAEhL,MAAMjE,EAAQ6gB;UAAUI;QAAAA;MAAAA,GAErC,CAAChS;MAGGkT,IAAe7hB,EAAM+C,YAAY;QAAA,OAC9Bwd,EAAS;UAAA9d,OAAOA,IAAM;QAAA;MAAA,GAC5B,CAAC8d;MAEEuB,IAAW9hB,EAAM+C,YAAY;QAAA,OAC1Bwd,EAAS;UAAA9d,OAAOA,IAAM;QAAA;MAAA,GAC5B,CAAC8d;MAEEC,IAAcxgB,EAAM+C,YACxB;QACE4L,EAAS;UAAEhL,MAAMjE,EAAQ8gB;UAAaE;QAAAA;MAAAA,GAExC,CAAC/R;IAGHxK,OAAOkD,OAAO5D,GAAU;MACtB6d;MACAV;MACAC;MACAc;MACAC;MACArB;MACAsB;MACAC;MACAtB;IAAAA;EAAAA;EAhLJC,GAAcve,aAZK,iBCDnBxC,EAAQqiB,aAAa,cACrBriB,EAAQsiB,cAAc;EAAA,IAETC,KAA4B,SAA5BA,GAA4BjhB;IACvCA,EAAMkhB,sBAAsB,CAACC,KAC7BnhB,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAM8K,qBAAqBtF,KAAKsF,KAChC9K,EAAM2G,WAAWnB,KAAKmB,KACtB3G,EAAM2K,YAAYnF,KAAKmF,KACvB3K,EAAM4K,oBAAoBpF,KAAKoF,KAC/B5K,EAAM6K,wBAAwBrF,KAAKqF,KACnC7K,EAAM+K,eAAevF,KAAKuF,KAC1B/K,EAAMgL,mBAAmBxF,KAAKwF,KAC9BhL,EAAMmL,YAAY3F,KAAK2F,KACvBnL,EAAMoL,WAAW5F,KAAK4F;EAAAA;EAGxB6V,GAA0B/f,aAAa;EAEvC,IAAMkgB,KAAsB;IAEtBD,KAA6B,SAA7BA,GAA8BxhB;MAAAA,IAASsP;MAAAA,OAAa,CACxDtP,GACA;QACEsR,SAAShC,EAAOoS,WACZ;UACExiB,EAAEwY,WACFpI,EAAO+R;QAAAA,SAETxQ;QACJ3Q,OAAO;UACLoG,QAAQgJ,EAAOoS,WAAW,iBAAY7Q;QAAAA;QAExCzD,OAAO;MAAA;IAAA;EAKX,SAASR,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExB2iB,cAAcF;IAAAA,GACX5U;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQqiB,yBAErBvU;MACH8U,cAAc7e,EAAS2K,aAAakU,gBAAgBF;IAAAA;IAAAA,IAIpDlU,EAAOvK,SAASjE,EAAQsiB,aAAa;MAAA,IAC/B3T,IAA8BH,EAA9BG;QAAiBkU,IAAarU,EAApBpO;QAEZ0iB,SACgB,MAAbD,IACHA,KACC/U,EAAM8U,aAAa7d,SAAS4J;MAAAA,aAI5Bb,GAFHgV;QAGAF,wBAAkB9U,EAAM8U,eAAcjU;MAAAA;QAMxCiU,cAAc9U,EAAM8U,aAAatY,OAAO;UAAAvD,OAAKA,MAAM4H;QAAAA;MAAAA;IAAAA;EAAAA;EAKzD,SAASvC,GAAqBrI;IAC5BA,EAASkE,WAAW9F,QAAQ;MAC1B6B,EAAO+e,gBAAgBhf,EAAS+J,MAAM8U,aAAa7d,SAASf,EAAO0B;IAAAA;EAAAA;EAIvE,SAASuC,GAAW9C;IAAAA,IAAWpB;IAAAA,OAC7BoB,EAAQhD,QAAQ;MACd6B,EAAO+e,gBAAgBhf,EAAS+J,MAAM8U,aAAa7d,SAASf,EAAO0B,KACnE1B,EAAOgf,eAAe,IAAIjL;IAAAA,IAErB5S;EAAAA;EAGT,SAAS8G,GAAY7L;IAAAA,IAAS4D;IAAAA,OACxBA,EAAOgf,qBAAiC,MAAV5iB,KAChC4D,EAAOgf,aAAaC,IAAI7iB,IAEnBA;EAAAA;EAGT,SAAS8L,GAAoBgX;IAAAA,IAAgBnf;MACnCkE,IAAsBlE,EAAtBkE;MAAY6F,IAAU/J,EAAV+J;IAAAA,KAEfA,EAAM8U,aAAa/b,WAAWiH,EAAM2K,YAAY3K,EAAM2K,QAAQ5R,eAC1Dqc;IAAAA,IAGHN,IAAe9U,EAAM8U,aACxBtd,IAAI;QAAAI,OAAMuC,EAAW6M,KAAK;UAAA/N,OAAKA,EAAErB,OAAOA;QAAAA;MAAAA,GACxC4E,OAAO4I;MAEJiQ,IAAgBlb,EAAWqC,OAC/B;QAAAvD,QACGA,EAAEgc,kBACFjV,EAAM2K,QAAQ1T,SAASgC,EAAErB,QACzBoI,EAAM8U,aAAa7d,SAASgC,EAAErB;MAAAA;MAyD7B0d,IAAkB5d,EAtDE,SAApB6d,EAAqBhe,GAAWD,GAAQke;QAAAA,WAAnBje,UAAQ,eAAWie,UAAe;QAAA,IACrDC,IAAcX,EAAavd;QAAAA,OAE5Bke,IAwBgB3hB,MAAMkW,KAAKyL,EAAYP,cAAcrL,OAEtCrS,IAAI;UAAAke,IAChBC,UACDF;YACH3d,QACE2d,EAAYG,eAA6C,mBAAvBH,EAAYhT,SACvCgT,EAAY3d,gBAAW4d,IAC1BA;YACNG,eAAc;YACdve;YACAC;YACAK,IAAIN,IACGA,EAAOM,WAAM6d,EAAY7d,WAAM8d,IAC/BD,EAAY7d,WAAM8d;YACzBI,YAAYJ;UAAAA;UAAAA,OAGdC,EAAYte,UAAUke,EAAkBhe,IAAQ,GAAGoe,aAC9CH,IACH;YAAAvd,OAAOA,EAAI8L,OAAO0R,EAAY7d,QAAQ8d;UAAAA,MAGjCC;QAAAA,KA9CAN,EAAc7d,IAAI;UAAAue,aAQlBA;YACHlB,WAAU;YACVmB,YAAW;YACX1e;YACAC,OAAOA;YACPK,UAAON,IAAYA,EAAOM,WAAMme,EAAane,KAAOme,EAAane;YACjEC,UAAU,kBAAC4L,GAAa3K,GAAGb;cAAAA,IACrBud,EAAatP,MAAM;gBAAA1J,OAAUA,EAAOvE;cAAAA,WAC/BA,EAAI8L,OAAOgS,EAAane;YAAAA;UAAAA;QAAAA;MAAAA,CAkCJ2d;IAAAA,iBAE5BH,GAAiBE;EAAAA;EAG9B,SAASjX,GACPvI;IAAAA,UAEEG,SACE+J;MAAS8U;MAAcnK;IAAAA,iBAIhB7U,IAAMgf,GAAcnK;EAAAA;EAGjC,SAASpM,GAAeA;IAAAA,IAA8ByB,MAAZ/J,SAAY+J;IAAAA,OACpDzB,IAAiBA,EAAe/B,OAAO;MAAAvD,QAAMA,EAAEgc;IAAAA,IAE3CjV,EAAM8U,aAAa/b,UAAUiH,EAAM2K,WAAW3K,EAAM2K,QAAQ5R,WAC9DwF,IAAiBA,EAAe/B,OAC9B;MAAAtG,OAAUA,EAAOiV,aAAajV,EAAO8f;IAAAA,KAIlCzX;EAAAA;EAGT,SAASC,GAAmB1I;IAAAA,IAAQG;IAAAA,iBACvBH,IAAMG,EAAS+J,MAAM8U,cAAc7e,EAAS+J,MAAM2K;EAAAA;EAG/D,SAAShM,GAAY1I;IAAAA,IAEjBoB,IAYEpB,EAZFoB;MACA8C,IAWElE,EAXFkE;MACA+G,IAUEjL,EAVFiL;MAGAE,IAOEnL,EAPFmL;MACA5M,IAMEyB,EANFzB;MACA2M,IAKElL,EALFkL;MAAAA,IAKElL,EAJFggB;MAAAA;MACAC,IAGEjgB,EAHFigB;MACAC,IAEElgB,EAFFkgB;MACAC,IACEngB,EADFmgB;IAGF7hB,EAAkBC,GAAS,CAAC,eAAe;IAAA,IAErC8M,IAAcpM,EAAae;IAEjCkE,EAAW9F,QAAQ;MAAA6B,IAEf2B,IAGE3B,EAHF2B;QACcwe,IAEZngB,EAFFogB;QACcC,IACZrgB,EADFigB;MAGFjgB,EAAO2e,WAAWhd,IACduD,EACElF,EAAO2e,WACgB,MAAvB0B,UAAsCvS,IACrB,MAAjBmS,UAAgCnS,IAChC,KAEF5I,EACElF,EAAO2e,UACPwB,GACAD,IACA,IAGFlgB,EAAO2e,aACT3e,EAAOse,cAAc;QAAA,OAAMve,EAASue,YAAYte,EAAO0B;MAAAA,IAGzD1B,EAAOgW,aAAahW,EAAOgW,cAAchW,EAAOxD;IAAAA;IAOlDwO,EAAY7M,QAAQ;MAClBoO,EAAOiS,sBAAsBnhB,EAC3B6N,IAAWsT,qBACX;QACEze,UAAUqL;QACVmB;MAAAA;IAAAA;IAAAA,IAKA+T,IAAoBthB,EAAa+gB;IAEvCrgB,EAAuB;MACjB4gB,OACFrV,EAAS;QAAEhL,MAAMjE,EAAQqiB;MAAAA;IAAAA,GAE1B,CAACpT,GAAU+U,IAAc,OAAO7e,KAEnCV,OAAOkD,OAAO5D,GAAU;MACtBue,aAvBkB,qBAAC3T,GAAUvO;QAC7B6O,EAAS;UAAEhL,MAAMjE,EAAQsiB;UAAa3T;UAAUvO;QAAAA;MAAAA;IAAAA;EAAAA;EA0BpD,SAASsM,GAAW3G;IAClBA,EAAI8V,SAAS1Z,QAAQ;MAEnBuJ,EAAKoY,YAAYpY,EAAK1H,OAAO8f;IAAAA;EAAAA;ECtRjC9jB,EAAQukB,oBAAoB,qBAC5BvkB,EAAQwkB,wBAAwB,yBAChCxkB,EAAQykB,oBAAoB,qBAC5BzkB,EAAQ0kB,4BAA4B;EAAA,IAEvBC,KAAe,SAAfA,GAAerjB;IAC1BA,EAAMsjB,4BAA4B,CAACC,KACnCvjB,EAAMwjB,gCAAgC,CAACC,KACvCzjB,EAAM0jB,oCAAoC,CACxCC,KAEF3jB,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F,KACvBnL,EAAMoL,WAAW5F,KAAK4F;EAAAA;EAGxBiY,GAAaniB,aAnBM;EAqBnB,IAAMqiB,KAAmC,SAAnCA,GAAoC5jB;MAAAA,IAAS8C;QAAUgC;QAAAA,IACXhC,EAAxCmhB;QAAAA,mBAAuB;MAAA,OASxB,CACLjkB,GACA;QACE+M,UAAU;UACRjI,EAAI0e,kBAAkBtkB,EAAE+N,OAAOC;QAAAA;QAEjChN,OAAO;UACLoG,QAAQ;QAAA;QAEV4G,YAfApI,EAAImE,aAAYnE,EAAImE,SAASgb,OAGrBnf,EAAIof;QAaZ9W,OAAO;QACPE,eAAexI,EAAIqf;MAAAA;IAAAA;IAKnBL,KAAuC,SAAvCA,GAAwC9jB;MAAAA,IAAS8C;MAAAA,OAAe,CACpE9C,GACA;QACE+M,UAAU;UACRjK,EAASygB,sBAAsBrkB,EAAE+N,OAAOC;QAAAA;QAE1ChN,OAAO;UACLoG,QAAQ;QAAA;QAEV4G,SAASpK,EAASshB;QAClBhX,OAAO;QACPE,eAAe2E,SACZnP,EAASshB,qBACR5gB,OAAOgO,KAAK1O,EAAS+J,MAAMwX,gBAAgBze;MAAAA;IAAAA;IAK7Coe,KAA2C,SAA3CA,GAA4ChkB;MAAAA,IAAS8C;MAAAA,OAAe,CACxE9C,GACA;QACE+M,4BAAS7N;UACP4D,EAAS2gB,0BAA0BvkB,EAAE+N,OAAOC;QAAAA;QAE9ChN,OAAO;UACLoG,QAAQ;QAAA;QAEV4G,SAASpK,EAASwhB;QAClBlX,OAAO;QACPE,eAAe2E,SACZnP,EAASwhB,yBACRxhB,EAASod,KAAKxY,KAAK;UAAA,IAAGjD;UAAAA,OAAS3B,EAAS+J,MAAMwX,eAAe5f;QAAAA;MAAAA;IAAAA;EAMrE,SAASmI,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExBqlB,gBAAgB;IAAA,GACbxX;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQukB,gCAErBzW;MACHwX,gBAAgBvhB,EAAS2K,aAAa4W,kBAAkB;IAAA;IAAA,IAIxD9W,EAAOvK,SAASjE,EAAQwkB,uBAAuB;MAAA,IAClCgB,IAAgBhX,EAAvBpO;QAENilB,IAGEthB,EAHFshB;QACAhU,IAEEtN,EAFFsN;QAAAA,IAEEtN,EADFwW;QAAAA,mBAAqBlJ;QAGjBoU,SACmB,MAAhBD,IAA8BA,KAAeH;QAIhDC,IAAiB7gB,OAAOkD,OAAO,IAAImG,EAAMwX;MAAAA,OAE3CG,IACFhhB,OAAOgO,KAAK8H,GAAoBpY,QAAQ;QACtCmjB,EAAe5S,MAAS;MAAA,KAG1BjO,OAAOgO,KAAK8H,GAAoBpY,QAAQ;QAAAuQ,OAC/B4S,EAAe5S;MAAAA,UAKrB5E;QACHwX;MAAAA;IAAAA;IAAAA,IAIA9W,EAAOvK,SAASjE,EAAQykB,mBAAmB;MAAA,IACrC/e,IAA2B8I,EAA3B9I;QAAW8f,IAAgBhX,EAAvBpO;QACJiR,IAA+CtN,EAA/CsN;QAAAA,IAA+CtN,EAArC2hB;QAAAA;QAAsB5V,IAAe/L,EAAf+L;QAClCqV,IAAarX,EAAMwX,eAAe5f;QAClCmN,SACmB,MAAhB2S,IAA8BA,KAAeL;MAAAA,IAElDA,MAAetS,UACV/E;MAAAA,IAGH6X,UAAyB7X,EAAMwX;MAAAA,OAEf,SAAhBM,EAAgBlgB;QAAAA,IACdK,IAAMsL,EAAS3L;QAAAA,IAEjBK,MACGA,EAAIkT,cACHpG,IACF8S,EAAkBjgB,MAAM,WAEjBigB,EAAkBjgB,KAIzBggB,KAAiB5V,EAAW/J,YACvB+J,EAAW/J,GAAK5D,QAAQ;UAAA4D,OAAO6f,EAAc7f,EAAIL;QAAAA;MAAAA,CAK9DkgB,CAAclgB,UAGToI;QACHwX,gBAAgBK;MAAAA;IAAAA;IAAAA,IAIhBnX,EAAOvK,SAASjE,EAAQ0kB,2BAA2B;MAAA,IACtCc,IAAgBhX,EAAvBpO;QAEN+gB,IAKEpd,EALFod;QACA9P,IAIEtN,EAJFsN;QAAAA,IAIEtN,EAHF2hB;QAAAA;QACAH,IAEExhB,EAFFwhB;QACAzV,IACE/L,EADF+L;QAGI2V,SACmB,MAAhBD,IAA8BA,KAAeD;QAEhDI,UAAyB7X,EAAMwX;MAAAA,OAkBrCnE,EAAKhf,QAAQ;QAAA4D,OAhBS,SAAhB6f,EAAgBlgB;UAAAA,IACdK,IAAMsL,EAAS3L;UAAAA,IAEhBK,EAAIkT,cACHwM,IACFE,EAAkBjgB,MAAM,WAEjBigB,EAAkBjgB,KAIzBggB,KAAiB5V,EAAW/J,WACvB+J,EAAW/J,GAAK5D,QAAQ;YAAA4D,OAAO6f,EAAc7f,EAAIL;UAAAA;QAAAA,CAIxCkgB,CAAc7f,EAAIL;MAAAA,UAGjCoI;QACHwX,gBAAgBK;MAAAA;IAAAA;IAAAA,OAGb7X;EAAAA;EAGT,SAASrB,GAAY1I;IAAAA,IAEjBoN,IAYEpN,EAZFoN;MACAzH,IAWE3F,EAXF2F;MACAwF,IAUEnL,EAVFmL;MACA5M,IASEyB,EATFzB;MACA+O,IAQEtN,EARFsN;MAAAA,IAQEtN,EAPFwW;MAAAA,mBAAqBlJ;MAAAA,IAOnBtN,EANF8hB;MAAAA;MACSP,IAKPvhB,EALF+J,MAASwX;MAAAA,IAKPvhB,EAJF2hB;MAAAA;MACAzW,IAGElL,EAHFkL;MACAkS,IAEEpd,EAFFod;MACArR,IACE/L,EADF+L;IAGFzN,EACEC,GACA,CAAC,cAAc,cAAc,aAAa,eAAe,kBACzD;IAAA,IAGIwjB,IAAmBxlB,EAAM6S,QAAQ;QAAA,IAC/B2S,IAAmB;QAAA,OAEzBpc,EAAKvH,QAAQ;UAAA4D,IACLof,IAAaO,IAwFzB,SAASK,EAAiBhgB,GAAKuf,GAAgBxV;YAAAA,IACzCwV,EAAevf,EAAIL,aACd;YAAA,IAGH0E,IAAU0F,EAAW/J;YAAAA,IAEvBqE,KAAWA,EAAQvD,QAAQ;cAAA,IACzBmf,KAAsB;gBACtBC,KAAe;cAAA,OAEnB7b,EAAQjI,QAAQ;gBAEV8jB,MAAiBD,MAIjBD,EAAiBvK,GAAQ8J,GAAgBxV,KAC3CmW,KAAe,IAEfD,KAAsB;cAAA,MAGnBA,OAA6BC,KAAe;YAAA;YAAA,QAG9C;UAAA,CAjHCF,CAAiBhgB,GAAKuf,GAAgBxV,OACpCwV,EAAevf,EAAIL;UACzBK,EAAIof,eAAeA,GACnBpf,EAAIqf,iBAAgC,SAAfD,GAEjBA,KACFW,EAAiBhf,KAAKf;QAAAA,IAInB+f;MAAAA,GACN,CAACpc,GAAMgc,GAAeJ,GAAgBxV;MAErCuV,IAAoBnS,QACtBzO,OAAOgO,KAAK8H,GAAoB1T,UAAUpC,OAAOgO,KAAK6S,GAAgBze;MAGpE0e,IAAwBF;IAExBA,KACE5gB,OAAOgO,KAAK8H,GAAoB5R,KAAK;MAAAjD,QAAO4f,EAAe5f;IAAAA,OAC7D2f,KAAoB,IAInBA,KACClE,KAAQA,EAAKta,UAAUsa,EAAKxY,KAAK;MAAA,IAAGjD;MAAAA,QAAU4f,EAAe5f;IAAAA,OAC/D6f,KAAwB;IAAA,IAItBW,IAA2BljB,EAAa6iB;IAE9CniB,EAAuB;MACjBwiB,OACFjX,EAAS;QAAEhL,MAAMjE,EAAQukB;MAAAA;IAAAA,GAE1B,CAACtV,GAAUkC;IAAAA,IAERqT,IAAwBlkB,EAAM+C,YAClC;QAAAjD,OAAS6O,EAAS;UAAEhL,MAAMjE,EAAQwkB;UAAuBpkB;QAAAA;MAAAA,GACzD,CAAC6O;MAGGyV,IAA4BpkB,EAAM+C,YACtC;QAAAjD,OAAS6O,EAAS;UAAEhL,MAAMjE,EAAQ0kB;UAA2BtkB;QAAAA;MAAAA,GAC7D,CAAC6O;MAGGwV,IAAoBnkB,EAAM+C,YAC9B,UAACqC,GAAItF;QAAAA,OAAU6O,EAAS;UAAEhL,MAAMjE,EAAQykB;UAAmB/e;UAAItF;QAAAA;MAAAA,GAC/D,CAAC6O;MAGGG,IAAcpM,EAAae;MAE3B+gB,IAAgCzjB,EACpC6N,IAAW4V,+BACX;QAAE/gB,UAAUqL;MAAAA;MAGR4V,IAAoC3jB,EACxC6N,IAAW8V,mCACX;QAAEjhB,UAAUqL;MAAAA;IAGd3K,OAAOkD,OAAO5D,GAAU;MACtB+hB;MACAT;MACAE;MACAd;MACAD;MACAM;MACAE;MACAN;IAAAA;EAAAA;EAIJ,SAAShY,GAAW3G;IAAAA,IAAOhC;IACzBgC,EAAI0e,oBAAoB;MAAAnd,OAAOvD,EAAS0gB,kBAAkB1e,EAAIL,IAAI4B;IAAAA,GAElEvB,EAAI6e,4BAA4BvjB,EAC9B0C,EAASmL,WAAW0V,2BACpB;MAAE7gB,UAAUA;MAAUgC;IAAAA;EAAAA;ECjU1B,IAAMogB,KAAiC,SAAjCA,GAAiCpgB;MAAAA,OAAQ;IAAA;IACzCqgB,KAAkC,SAAlCA,GAAkC1a;MAAAA,OAAS;IAAA;EAGjD1L,EAAQqmB,cAAc,eACtBrmB,EAAQsmB,eAAe,gBACvBtmB,EAAQumB,gBAAgB;EAAA,IAEXC,KAAc,SAAdA,GAAcllB;IACzBA,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F,KACvBnL,EAAMoL,WAAW5F,KAAK4F;EAAAA;EAKxB,SAASmB,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,QAKzCA,EAHF0iB;MAAAA,mBAA0BN;MAAAA,IAGxBpiB,EAFF2iB;MAAAA,mBAA2BN;MAC3B/U,IACEtN,EADFsN;IAAAA,IAGE7C,EAAOvK,SAASjE,EAAQC;MAExB0mB,UAAU;IAAA,GACP7Y;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQumB,4BAErBzY;MACH6Y,UAAU5iB,EAAS2K,aAAaiY,YAAY;IAAA;IAAA,IAI5CnY,EAAOvK,SAASjE,EAAQqmB,aAAa;MAAA;QAC/B3T,IAAiBlE,EAAjBkE;QAAOtS,IAAUoO,EAAVpO;QAETwmB,SAC6B,MAA1B9Y,EAAM6Y,SAASjU,KAClB5E,EAAM6Y,SAASjU,KACf+T,EAAwBpV,EAASqB;MAAAA,aAGlC5E;QACH6Y,gBACK7Y,EAAM6Y,qBACRjU,KAAQ7P,EAAiBzC,GAAOwmB;MAAAA;IAAAA;IAAAA,IAKnCpY,EAAOvK,SAASjE,EAAQsmB,cAAc;MAAA;QAAAO;QAAAC;QAAAC;QAAAC;QAChCtU,IAA2BlE,EAA3BkE;QAAO/D,IAAoBH,EAApBG;QAAUvO,IAAUoO,EAAVpO;QAEnBwmB,SAC6B,MAA1B9Y,EAAM6Y,SAASjU,KAClB5E,EAAM6Y,SAASjU,KACf+T,EAAwBpV,EAASqB;QAEjCuU,SAC0C,eAAvCL,4BAAaM,sBAAbC,EAAyBxY,MAC5BiY,EAAYM,UAAUvY,KACtB+X,eACErV,EAASqB,4BAAT0U,EAAiBxV,kBAAjByV,EAAwBvS,KAAK;UAAApJ,OAAQA,EAAK1H,OAAO0B,OAAOiJ;QAAAA;MAAAA,aAI3Db;QACH6Y,gBACK7Y,EAAM6Y,qBACRjU,WACIkU;UACHM,iBACMN,EAAYM,aAAa,eAC5BvY,KAAW9L,EAAiBzC,GAAO6mB;QAAAA;MAAAA;IAAAA;EAAAA;EAQhD,SAASxa,GAAY1I;IAAAA,QACkCA,EAA7CujB;MAAAA;MAA0BnW,IAAmBpN,EAAnBoN;MAAMlC,IAAalL,EAAbkL;MAElCoX,IAAc/lB,EAAM+C,YACxB,UAACqP,GAAOtS;QAAAA,OACN6O,EAAS;UACPhL,MAAMjE,EAAQqmB;UACd3T;UACAtS;QAAAA;MAAAA,GAEJ,CAAC6O;MAGGqX,IAAehmB,EAAM+C,YACzB,UAACqP,GAAO/D,GAAUvO;QAAAA,OAChB6O,EAAS;UACPhL,MAAMjE,EAAQsmB;UACd5T;UACA/D;UACAvO;QAAAA;MAAAA,GAEJ,CAAC6O;MAGGsY,IAAuBvkB,EAAaskB;IAE1C5jB,EAAuB;MACjB6jB,OACFtY,EAAS;QAAEhL,MAAMjE,EAAQumB;MAAAA;IAAAA,GAE1B,CAACpV,KAEJ1M,OAAOkD,OAAO5D,GAAU;MACtBsiB;MACAC;IAAAA;EAAAA;EAIJ,SAAS5Z,GAAW3G;IAAAA,IAAOhC;MAAAA,IAKrBA,EAHF0iB;MAAAA,mBAA0BN;MAAAA,IAGxBpiB,EAFF2iB;MAAAA,mBAA2BN;MAClBO,IACP5iB,EADF+J,MAAS6Y;IAGP5gB,MACFA,EAAI+H,aAC0B,MAArB6Y,EAAS5gB,EAAIL,MAChBihB,EAAS5gB,EAAIL,MACb+gB,EAAwB1gB,IAE9BA,EAAIyhB,WAAW;MAAA1kB,OACNiB,EAASsiB,YAAYtgB,EAAIL,IAAI5C;IAAAA,GAGtCiD,EAAI6L,MAAMzP,QAAQ;MACX4D,EAAI+H,MAAMoZ,cACbnhB,EAAI+H,MAAMoZ,YAAY,KAGxBxb,EAAKoC,aAC4C,MAAxC/H,EAAI+H,MAAMoZ,UAAUxb,EAAK1H,OAAO0B,MACnCK,EAAI+H,MAAMoZ,UAAUxb,EAAK1H,OAAO0B,MAChCghB,EAAyBhb,IAE/BA,EAAK8b,WAAW;QAAA1kB,OACPiB,EAASuiB,aAAavgB,EAAIL,IAAIgG,EAAK1H,OAAO0B,IAAI5C;MAAAA;IAAAA;EAAAA;EAzI7D0jB,GAAYhkB,aAAa,eClBzBxC,EAAQynB,mBAAmB,oBAC3BznB,EAAQ0nB,iBAAiB;EAAA,IAEZC,KAAiB,SAAjBA,GAAiBrmB;IAC5BA,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMgL,mBAAmBxF,KAAK,UAAClD;MAAAA,IAAQG;MAAAA,iBAC1BH,IAAMG,EAAS+J,MAAM8Z;IAAAA,IAElCtmB,EAAM+K,eAAevF,KAAKuF,KAC1B/K,EAAMmL,YAAY3F,KAAK2F;EAAAA;EAKzB,SAASoB,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,OACzCyK,EAAOvK,SAASjE,EAAQC;MAExB2nB,aAAa;IAAA,GACV9Z,KAIHU,EAAOvK,SAASjE,EAAQynB,yBAErB3Z;MACH8Z,aAAa7jB,EAAS2K,aAAakZ,eAAe;IAAA,KAIlDpZ,EAAOvK,SAASjE,EAAQ0nB,uBAErB5Z;MACH8Z,aAAa/kB,EAAiB2L,EAAOoZ,aAAa9Z,EAAM8Z;IAAAA;EAAAA;EAK9D,SAASvb,GACPlH;IAAAA,IAGayiB,MADX7jB,SACE+J,MAAS8Z;IAAAA,KAKRA,MAAgBA,EAAY/gB,eACxB1B;IAAAA,SAGH0iB,cAAsBD,IAGtBE,cAAkB3iB,IAGlB4iB,IAAiB;QAAA,IAIfC,IAAiBH,EAAgBhL;UACjCoL,IAAaH,EAAYplB,UAAU;YAAAqE,OAAKA,EAAErB,OAAOsiB;UAAAA;QACnDC,KAAc,KAChBF,EAAejhB,KAAKghB,EAAY/I,OAAOkJ,GAAY,GAAG;MAAA,GAJnDH,EAAYjhB,UAAUghB,EAAgBhhB;IAAAA,iBASlCkhB,GAAmBD;EAAAA;EAGhC,SAASrb,GAAY1I;IAAAA,IACXkL,IAAalL,EAAbkL;IAERlL,EAAS2jB,iBAAiBpnB,EAAM+C,YAC9B;MAAAukB,OACS3Y,EAAS;QAAEhL,MAAMjE,EAAQ0nB;QAAgBE;MAAAA;IAAAA,GAElD,CAAC3Y;EAAAA;EAlEL0Y,GAAenlB,aAAa,kBCH5BjC,EAAc0Q,aAAY,GAG1BjR,EAAQkoB,sBAAsB,uBAC9BloB,EAAQmoB,iBAAiB,kBACzBnoB,EAAQooB,qBAAqB,sBAC7BpoB,EAAQqoB,cAAc;EAAA,IAETC,KAAmB,SAAnBA,GAAmBhnB;MAC9BA,EAAMinB,kBAAkB,CAACC,KACzBlnB,EAAMyL,eAAejG,KAAK;QACxB3F,OAAO;UACLsnB,UAAU;QAAA;MAAA,IAGdnnB,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMmL,YAAY3F,KAAK2F,KACvBnL,EAAMkL,4BAA4B1F,KAAK0F;IAAAA;IAGnCgc,KAAyB,SAAzBA,GAA0BvnB;MAAAA,IAAS8C;QAAUwM;QACzCtB,IAAalL,EAAbkL;QAEFyZ,IAAgB,WAACvoB,GAAGoQ;UAAAA,IACpBoY,KAAe;UAAA,IACJ,iBAAXxoB,EAAE8D,MAAuB;YAAA,IAEvB9D,EAAEyoB,WAAWzoB,EAAEyoB,QAAQ/hB,SAAS;YAGpC8hB,KAAe;UAAA;UAAA,IAObE;YACAC;YALEC,IA8OV,UAAwBxY;cAAAA,IAChByY,IAAc;cAAA,OACE,SAAhBC,EAAgB1Y;gBAChBA,EAAOpL,WAAWoL,EAAOpL,QAAQ0B,UACnC0J,EAAOpL,QAAQG,IAAI2jB;gBAErBD,EAAYliB,KAAKyJ;cAAAA,CAEnB0Y,CAAc1Y,IACPyY;YAAAA,CAxPmBE,CAAe3Y,GACAjL,IAAI;cAAAyB,OAAK,CAACA,EAAErB,IAAIqB,EAAE4J;YAAAA;YAEnDwY,IAAUR,IAAe7X,KAAKsY,MAAMjpB,EAAEyoB,QAAQ,GAAGO,WAAWhpB,EAAEgpB;YAK9DE,IAAc,SAAdA,IAAc;cAClBC,OAAOC,qBAAqBV,IAC5BA,IAAM,MACN5Z,EAAS;gBAAEhL,MAAMjE,EAAQooB;cAAAA;YAAAA;YAErBoB,IAAe,SAAfA,IAAe;cACnBF,OAAOC,qBAAqBV,IAC5BA,IAAM,MACN5Z,EAAS;gBAAEhL,MAAMjE,EAAQmoB;gBAAgBgB,SAASL;cAAAA;YAAAA;YAG9CW,IAA2C,SAA3CA,EAA2CC;cAC/CZ,IAAoBY,GACfb,MACHA,IAAMS,OAAOK,sBAAsBH;YAAAA;YAIjCI,IAAoB;cACxBC,OAAO;gBACLC,WAAW;gBACXC,aAAa;kBAAA5pB,OAAKspB,EAAyCtpB,EAAEgpB;gBAAAA;gBAC7Da,SAAS;gBACTC,WAAW;kBACT1mB,SAAS2mB,oBACP,aACAN,EAAkBC,MAAME,cAE1BxmB,SAAS2mB,oBACP,WACAN,EAAkBC,MAAMI,YAE1BZ;gBAAAA;cAAAA;cAGJc,OAAO;gBACLL,WAAW;gBACXC,aAAa;kBAAA5pB,OACPA,EAAEiqB,eACJjqB,EAAEkqB,kBACFlqB,EAAEmqB,oBAEJb,EAAyCtpB,EAAEyoB,QAAQ,GAAGO,WAC/C;gBAAA;gBAETa,SAAS;gBACTC,WAAW;kBACT1mB,SAAS2mB,oBACPN,EAAkBO,MAAML,WACxBF,EAAkBO,MAAMJ,cAE1BxmB,SAAS2mB,oBACPN,EAAkBO,MAAMH,SACxBJ,EAAkBO,MAAMJ,cAE1BV;gBAAAA;cAAAA;YAAAA;YAKAkB,IAAS5B,IACXiB,EAAkBO,QAClBP,EAAkBC;YAChBW,MjBkLH;cAAA,IAE2B,oBAArB3f,GAAgC,OAAOA;cAAAA,IAE9C4f,KAAY;cAAA;gBAAA,IAERC,IAAU;kBAAA;oBAAA,OAEZD,KAAY,IACL;kBAAA;gBAAA;gBAIXnB,OAAOqB,iBAAiB,QAAQ,MAAMD,IACtCpB,OAAOY,oBAAoB,QAAQ,MAAMQ;cAAAA,CACzC,QAAOE;gBACPH,KAAY;cAAA;cAAA,OAEd5f,IAAmB4f;YAAAA,CiBpMUI,MACvB;cAAEC,UAAS;YAAA;UAEfvnB,SAASonB,iBACPJ,EAAOT,WACPS,EAAOR,aACPS,IAEFjnB,SAASonB,iBACPJ,EAAOP,SACPO,EAAON,WACPO,IAGFvb,EAAS;YACPhL,MAAMjE,EAAQkoB;YACdvZ,UAAU4B,EAAO7K;YACjBqlB,aAAaxa,EAAOI;YACpBoY;YACAI;UAAAA;QAAAA;MAAAA,OAIG,CACLloB,GACA;QACE+pB,aAAa;UAAA7qB,OAAKA,EAAEwY,aAAa+P,EAAcvoB,GAAGoQ;QAAAA;QAClD0a,cAAc;UAAA9qB,OAAKA,EAAEwY,aAAa+P,EAAcvoB,GAAGoQ;QAAAA;QACnDpP,OAAO;UACLoG,QAAQ;QAAA;QAEV2jB,YAAW;QACXngB,MAAM;MAAA;IAAA;EAOZ,SAAS8C,GAAQC,GAAOU;IAAAA,IAClBA,EAAOvK,SAASjE,EAAQC;MAExBkoB,gBAAgB;QACdgD,cAAc;MAAA;IAAA,GAEbrd;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQqoB,0BAErBva;MACHqa,gBAAgB;QACdgD,cAAc;MAAA;IAAA;IAAA,IAKhB3c,EAAOvK,SAASjE,EAAQkoB,qBAAqB;MAAA,IACvCiB,IAAmD3a,EAAnD2a;QAASxa,IAA0CH,EAA1CG;QAAUoc,IAAgCvc,EAAhCuc;QAAahC,IAAmBva,EAAnBua;MAAAA,aAGnCjb;QACHqa,sBACKra,EAAMqa;UACTiD,QAAQjC;UACRJ;UACAgC;UACAM,kBAAkB1c;QAAAA;MAAAA;IAAAA;IAAAA,IAKpBH,EAAOvK,SAASjE,EAAQmoB,gBAAgB;MAAA,IAClCgB,IAAY3a,EAAZ2a;QAAAA,IAC6Crb,EAAMqa;QAAnDiD;QAAQL;QAAAA,MAAahC;QAGvBuC,KADSnC,IAAUiC,KACSL;QAE5BQ,IAAkB;MAAA,uBALsB,QAO/BppB,QAAQ;QAAA,IAAEqpB;UAAUC;QACjCF,EAAgBC,KAAY1a,KAAKE,IAC/Bya,IAAcA,IAAcH,GAC5B;MAAA,UAKCxd;QACHqa,sBACKra,EAAMqa;UACTgD,oBACKrd,EAAMqa,eAAegD,kBACrBI;QAAAA;MAAAA;IAAAA;IAAAA,OAMP/c,EAAOvK,SAASjE,EAAQooB,2BAErBta;MACHqa,sBACKra,EAAMqa;QACTiD,QAAQ;QACRC,kBAAkB;MAAA;IAAA;EAAA;EAtE1B/C,GAAiB9lB,aAAa;EA4E9B,IAAMgK,KAA8B,SAA9BA,GAA8BzI;IAAAA,IAEhCiL,IAIEjL,EAJFiL;MACA0c,IAGE3nB,EAHF2nB;MACAxc,IAEEnL,EAFFmL;MACSiZ,IACPpkB,EADF+J,MAASqa;MAGL/Y,IAAcpM,EAAae;IAEjCiL,EAAY7M,QAAQ;MAAAoO,IACZU,IAAY/H,GACW,MAA3BqH,EAAOmb,wBAAmC5Z,IACtB,MAApB4Z,UAAmC5Z,IACnC;MAGFvB,EAAOU,YAAYA,GACnBV,EAAO9P,QACL0nB,EAAegD,aAAa5a,EAAO7K,OACnC6K,EAAOxI,iBACPwI,EAAO9P,OACT8P,EAAOob,aAAaxD,EAAekD,qBAAqB9a,EAAO7K,IAE3DuL,MACFV,EAAOgY,kBAAkBlnB,EAAe6N,IAAWqZ,iBAAiB;QAClExkB,UAAUqL;QACVmB;MAAAA;IAAAA;EAAAA;EAMR,SAAS9D,GAAY1I;IAAAA,IACXzB,IAAuDyB,EAAvDzB;MAAS2M,IAA8ClL,EAA9CkL;MAAAA,IAA8ClL,EAApC6nB;MAAAA;MAAwBzmB,IAAYpB,EAAZoB;IAEnD9C,EAAkBC,GAAS,CAAC,sBAAsB;IAAA,IAE5CupB,IAAqB7oB,EAAa4oB;IACxCloB,EAAuB;MACjBmoB,OACF5c,EAAS;QAAEhL,MAAMjE,EAAQqoB;MAAAA;IAAAA,GAE1B,CAACljB;IAAAA,IAEE2mB,IAAgBxrB,EAAM+C,YAC1B;MAAA,OAAM4L,EAAS;QAAEhL,MAAMjE,EAAQqoB;MAAAA;IAAAA,GAC/B,CAACpZ;IAGHxK,OAAOkD,OAAO5D,GAAU;MACtB+nB;IAAAA;EAAAA;EAAAA,ICzREC,KAAa;MACjBtD,UAAU;MACVuD,KAAK;IAAA;IAGMC,KAAoB,SAApBA,GAAoB3qB;MAC/BA,EAAMsL,kBAAkB9F,KAAKolB,KAC7B5qB,EAAM2L,YAAYnG,KAAKolB,KACvB5qB,EAAMuL,oBAAoB/F,KAAKolB,KAC/B5qB,EAAMwL,oBAAoBhG,KAAKolB,KAE/B5qB,EAAMyL,eAAejG,KAAK,UAAC7F;QAAAA,IAAS+C;QAAAA,OAAa,CAC/C/C,GACA;UACEE,aACK4qB;YACH7b,MAASlM,EAAOyM;YAChBhQ,OAAUuD,EAAO2M;UAAAA;QAAAA;MAAAA,IAKvBrP,EAAM4L,aAAapG,KAAK,UAAC7F;QAAAA,IAASyK;QAAAA,OAAW,CAC3CzK,GACA;UACEE,aACK4qB;YACH7b,MAASxE,EAAK1H,OAAOyM;YACrBhQ,OAAUiL,EAAK1H,OAAO2M;UAAAA;QAAAA;MAAAA,IAK5BrP,EAAM0L,eAAelG,KAAK,UAAC7F;QAAAA,IAAS+C;QAAAA,OAAa,CAC/C/C,GACA;UACEE,aACK4qB;YACH7b,MAASlM,EAAOyM;YAChBhQ,OAAUuD,EAAO2M;UAAAA;QAAAA;MAAAA;IAAAA;EAMzBsb,GAAkBzpB,aAAa;EAE/B,IAAM0pB,KAAe,SAAfA,GAAgBjrB;MAAAA,OAAwB,CAC5CA,GACA;QACEE,OAAO;UACLsnB,UAAU;UACVhoB,SALyBsD,SAKNooB;QAAAA;MAAAA;IAAAA;ICpDnBJ,KAAa;MACjBK,SAAS;MACTC,WAAW;IAAA;IAGPH,KAAe,SAAfA,GAAgBjrB;MAAAA,OAAwB,CAC5CA,GACA;QACEE,OAAO;UACLirB,SAAS;UACT3rB,SALyBsD,SAKNooB;QAAAA;MAAAA;IAAAA;IAKZG,KAAiB,SAAjBA,GAAiBhrB;MAC5BA,EAAM2L,YAAYnG,KAAKolB,KACvB5qB,EAAMuL,oBAAoB/F,KAAKolB,KAC/B5qB,EAAMwL,oBAAoBhG,KAAKolB,KAE/B5qB,EAAMyL,eAAejG,KAAK,UAAC7F;QAAAA,IAAS+C;QAAAA,OAAa,CAC/C/C,GACA;UACEE,aACK4qB;YACHtrB,OAAUuD,EAAO2M;UAAAA;QAAAA;MAAAA,IAKvBrP,EAAM4L,aAAapG,KAAK,UAAC7F;QAAAA,IAASyK;QAAAA,OAAW,CAC3CzK,GACA;UACEE,aACK4qB;YACHtrB,OAAUiL,EAAK1H,OAAO2M;UAAAA;QAAAA;MAAAA,IAK5BrP,EAAM0L,eAAelG,KAAK,UAAC7F;QAAAA,IAAS+C;QAAAA,OAAa,CAC/C/C,GACA;UACEE,aACK4qB;YACHtrB,OAAUuD,EAAO2M;UAAAA;QAAAA;MAAAA;IAAAA;EC7ClB,SAAS4b,GAAcjrB;IAC5BA,EAAMqL,cAAc7F,KAAK6F,KACzBrL,EAAM2L,YAAYnG,KAAKolB,KACvB5qB,EAAMuL,oBAAoB/F,KAAKolB,KAC/B5qB,EAAMwL,oBAAoBhG,KAAKolB,KAC/B5qB,EAAMyL,eAAejG,KAAKiG,KAC1BzL,EAAM4L,aAAapG,KAAKoG,KACxB5L,EAAM0L,eAAelG,KAAKkG;EAAAA;ED4C5Bsf,GAAe9pB,aAAa,kBCzC5B+pB,GAAc/pB,aAAa;EAE3B,IAAMmK,KAAgB,SAAhBA,GAAiB1L;MAAAA,OAAwB,CAC7CA,GACA;QACEE,OAAO;UACLT,YAJ0BqD,SAIJyoB;QAAAA;MAAAA;IAAAA;IAKtBN,KAAe,SAAfA,GAAgBjrB;MAAAA,OAAwB,CAC5CA,GACA;QACEE,OAAO;UACLirB,SAAS;UACTK,MAAM;UACN/rB,YANyBqD,SAMHyoB;QAAAA;MAAAA;IAAAA;IAKtBzf,KAAiB,SAAjBA,GAAkB9L;MAAAA,IAAS+C;MAAAA,OAAa,CAC5C/C,GACA;QACEE,OAAO;UACLkrB,WAAW;UACXI,MAAMzoB,EAAO6M,iBACN7M,EAAO6M,kCACViB;UACJpR,UAAasD,EAAO0M;UACpBjQ,OAAUuD,EAAO2M;QAAAA;MAAAA;IAAAA;IAKjBzD,KAAe,SAAfA,GAAgBjM;MAAAA,IAASyK;MAAAA,OAAW,CACxCzK,GACA;QACEE,OAAO;UACLkrB,WAAW;UACXI,MAAS/gB,EAAK1H,OAAO6M;UACrBnQ,UAAagL,EAAK1H,OAAO0M;UACzBjQ,OAAUiL,EAAK1H,OAAO2M;QAAAA;MAAAA;IAAAA;IAKtB3D,KAAiB,SAAjBA,GAAkB/L;MAAAA,IAAS+C;MAAAA,OAAa,CAC5C/C,GACA;QACEE,OAAO;UACLkrB,WAAW;UACXI,MAAMzoB,EAAO6M,iBACN7M,EAAO6M,kCACViB;UACJpR,UAAasD,EAAO0M;UACpBjQ,OAAUuD,EAAO2M;QAAAA;MAAAA;IAAAA;EC3DhB,SAAS+b,GAAcprB;IAC5BA,EAAMuK,cAAc/E,KAAK+G,KACzBvM,EAAMqL,cAAc7F,KAAK6F,KACzBrL,EAAMyL,eAAejG,KAAKiG,KAC1BzL,EAAM2L,YAAYnG,KAAKmG;EAAAA;EATzBjN,EAAQkoB,sBAAsB,uBAC9BloB,EAAQmoB,iBAAiB,kBACzBnoB,EAAQooB,qBAAqB,sBAC7BpoB,EAAQqoB,cAAc,eAStBqE,GAAclqB,aAAa;EAE3B,IAAMmK,KAAgB,SAAhBA,GAAiB1L;MAAAA,IAAS8C;MAAAA,OAYvB,CACL9C,GACA;QACEE,OAAO;UACLirB;UACAO,qBAhBsB5oB,EAASsI,eAAe/G,IAAI;YAAAtB;YAAAA,OAClDD,EAAS+J,MAAM8e,WAAWzB,aAAannB,EAAO0B,MACtC3B,EAAS+J,MAAM8e,WAAWzB,aAAannB,EAAO0B,2BAItD3B,EAAS+J,MAAMqa,2BAAf0E,EAA+BxB,oBACvBtnB,EAAS+J,MAAM8e,WAAWE,YAAY9oB,EAAO0B,aAC7B,mBAAjB1B,EAAOvD,QAA8BuD,EAAOvD,eAChDuD,EAAOvD;UAAAA,GAO+ByG;QAAAA;MAAAA;IAAAA;IAM3C6F,KAAiB,SAAjBA,GAAkB9L;MAAAA,IAAS+C;MAAAA,OAAa,CAC5C/C,GACA;QACEyE,qBAAmB1B,EAAO0B;QAC1BvE,OAAO;UACLsnB;UACAsE,sBAAoB/oB,EAAOmH;QAAAA;MAAAA;IAAAA;IAK3B8B,KAAc,SAAdA,GAAehM;MAAAA,IAAS8E;MAAAA,OACxBA,EAAIkE,aACC,CACLhJ,GACA;QACEE,OAAO;UACL4rB,sBAAmBhnB,EAAI6L,MAAM/K,SAAS;QAAA;MAAA,KAKvC,CAAC5F,GAAO;IAAA;EAGjB,SAAS4M,GAAQC,GAAOU,GAAQC,GAAe1K;IAAAA,IACzCyK,EAAOvK,SAASjE,EAAQC;MAExB2sB,YAAY;QACVzB,cAAc;MAAA;IAAA,GAEbrd;IAAAA,IAIHU,EAAOvK,SAASjE,EAAQqoB,0BAErBva;MACH8e,YAAY;QACVzB,cAAc;MAAA;IAAA;IAAA,IAKhB3c,EAAOvK,SAASjE,EAAQkoB,qBAAqB;MAAA,IACvCvZ,IAA6BH,EAA7BG;QAAUoa,IAAmBva,EAAnBua;QACZgC,IAAciC,GAAgBre;MAAAA,SAEhBmD,MAAhBiZ,GAA2B;QAAA,IACvB+B,IAAc/oB,EAASsI,eAAerL,OAC1C,UAACisB,GAAKjpB;YAAAA;YAAAA,aACDipB,aACFjpB,EAAO0B,MAAKsnB,GAAgBhpB,EAAO0B;UAAAA,GAEtC;UAEIwnB,IAAYnpB,EAASsI,eAAerL,OACxC,UAACisB,GAAKjpB;YAAAA;YAAAA,aACDipB,aACFjpB,EAAO0B,MAAK1B,EAAOtD;UAAAA,GAEtB;UAEIysB,IAAYppB,EAASsI,eAAerL,OACxC,UAACisB,GAAKjpB;YAAAA;YAAAA,aACDipB,aACFjpB,EAAO0B,MAAK1B,EAAOrD;UAAAA,GAEtB;UAGIysB,IAAqBrE,EAAezjB,IAAI;YAAA,IAAEkmB;YAAAA,OAAc,CAC5DA,GACAwB,GAAgBxB;UAAAA;QAAAA,aAIb1d;UACH8e,kBACK9e,EAAM8e;YACTE;YACAI;YACAC;YACAC;YACArC;UAAAA;QAAAA;MAAAA;MAAAA,OAIGjd;IAAAA;IAAAA,IAIPU,EAAOvK,SAASjE,EAAQmoB,gBAAgB;MAAA,IAClCgB,IAAY3a,EAAZ2a;QACAiC,IAAWtd,EAAMqa,eAAjBiD;QAAAA,IAMJtd,EAAM8e;QAJR7B;QACAmC;QACAC;QAAAA,MACAC;QAII9B,KADSnC,IAAUiC,KACSL;QAE5BQ,IAAkB;MAAA,uBAND,QAQJppB,QAAQ;QAAA,IAAEqpB;UAAUC;QACrCF,EAAgBC,KAAY1a,KAAKC,IAC/BD,KAAKE,IACHkc,EAAU1B,IACVC,IAAcA,IAAcH,IAE9B6B,EAAU3B;MAAAA,UAKT1d;QACH8e,kBACK9e,EAAM8e;UACTzB,oBACKrd,EAAM8e,WAAWzB,kBACjBI;QAAAA;MAAAA;IAAAA;IAAAA,OAMP/c,EAAOvK,SAASjE,EAAQooB,2BAErBta;MACH8e,kBACK9e,EAAM8e;QACTE,aAAa;QACbI,WAAW;QACXC,WAAW;MAAA;IAAA;EAAA;EAMnB,SAASH,GAAgBre;IAAAA;MACjBlO,iBAAQ8C,SAAS8pB,gCAA8B1e,eAAvC2e,EAAoDC;IAAAA,SAEpDzb,MAAVrR,UACKA;EAAAA;EAAAA,+XtBxBJ,UAA0B+sB,GAAWC;IAAAA,qBAAc;IAAA,IAClDC,IAAcptB,EAAM6C,OAAO;MAE3BwqB,IAAe3qB,EAAawqB;MAC5BI,IAAiB5qB,EAAayqB;IAAAA,OAE7BntB,EAAM+C;MAAAA,qCACX;QAAA;UAAAwqB;UAAAC;UAAAhb;QAAA;UAAA;YAAA;cAAA,mBAAU3J;cAAAA,OACHukB,EAAYtqB,QAAQ2qB,YACvBL,EAAYtqB,QAAQ2qB,UAAU,IAAIC,QAAQ,UAACC,GAASC;gBAClDR,EAAYtqB,QAAQ6qB,UAAUA,GAC9BP,EAAYtqB,QAAQ8qB,SAASA;cAAAA,KAI7BR,EAAYtqB,QAAQ+qB,WACtBC,aAAaV,EAAYtqB,QAAQ+qB,UAGnCT,EAAYtqB,QAAQ+qB,UAAUE,wCAAW;gBAAA;kBAAA;oBAAA;sBAAA,cAChCX,EAAYtqB,QAAQ+qB,4BAEzBT,EAAYtqB,qBAAsBuqB,kBAAkBxkB;oBAAAA;sBAAAA,oBAAhC8kB;sBAAAA;oBAAAA;sBAAAA,+BAEpBP,EAAYtqB,QAAQ8qB;oBAAAA;sBAAAA,2BAEbR,EAAYtqB,QAAQ2qB;oBAAAA;oBAAAA;sBAAAA;kBAAAA;gBAAAA;cAAAA,KAE5BH,yBAEIF,EAAYtqB,QAAQ2qB;YAAAA;YAAAA;cAAAA;UAAAA;QAAAA;MAAAA;MAAAA;QAAAA;MAAAA;IAAAA,KAE7B,CAACJ,GAAcC;EAAAA,wVI1IK,UAAC3sB;IAAAA,+BAAUqB;IAEjCrB,IAAQ4O,GAAc5O,IAGtBqB,KAAWkL,UAAwBlL;IAAAA,IAG/BgsB,IAAchuB,EAAM6C,OAAO;MAGzBiM,IAAcpM,EAAasrB,EAAYlrB;IAG7CqB,OAAOkD,OAAOyH,WACTnO;MACHqB;MACAhB,OAAOqK;IAAAA,KAITrJ,EAAQgI,OAAO4I,SAAS/Q,QAAQ;MAC9BQ,EAAOyM,IAAc9N;IAAAA;IAAAA,IAIjB4N,IAAWlM,EAAaoM,IAAc9N;IAC5C8N,IAAcF,WAAWA,UAClBE,IAAc9N,OAGrBmD,OAAOkD,OACLyH,KACAtN,EAAYoN,IAAWtD,YAAYiE,GAAc5O;IAAAA,QAY/CmO;MARF+B;MACSod,MAATppB;MACAuJ;MACAnO;MACAuP;MACAC;MACAC;MACAlE;MAII0iB,IAAkBxrB,EAAagN;MAG/BnC,IAAUvN,EAAM+C,YACpB,UAACyK,GAAOU;QAAAA,KAEDA,EAAOvK,YACVE,QAAQC,KAAK;UAAEoK;QAAAA,IACT,IAAInK,MAAM;QAAA,OAIX,UACF6K,IAAWrD,eAEVjK,MAAMC,QAAQ2sB,OACdA,MACA,CAACA,MACLxtB,OACA,UAAC8R,GAAG2b;UAAAA,OAAYA,EAAQ3b,GAAGtE,GAAQV,GAAOsB,QAAkB0D;QAAAA,GAC5DhF;MAAAA,GAGJ,CAACoB,GAAUsf,GAAiBpf;MAAAA,IAIG9O,EAAMouB,WAAW7gB,QAASiE,GAAW;QAAA,OACpEjE,EAAQa,GAAc;UAAEzK,MAAMjE,EAAQC;QAAAA;MAAAA;MADjC0uB;MAAc1f;MAKfnB,IAAQhM,YACRoN,IAAWpD,qBAAoBA,KACnC6iB,GACA;QAAE5qB,UAAUqL;MAAAA;IAGd3K,OAAOkD,OAAOyH,KAAe;MAC3BtB;MACAmB;IAAAA;IAAAA,IAII9J,IAAU7E,EAAM6S,QACpB;MAAA,OACEjO,EACEpD,EAAYoN,IAAW/J,SAASopB,GAAa;QAC3CxqB,UAAUqL;MAAAA;IAAAA,IAIdF,GACAE,GACAmf,UAEGzsB,EAAYoN,IAAWnD,aAAa,IAAI;MAAEhI,UAAUqL;IAAAA;IAG3DA,IAAcjK,UAAUA;IAAAA,IAIpB8C,IAAa3H,EAAM6S,QACrB;MAAA,OACErR,EAAYoN,IAAWjH,YAAYzC,EAAeL,IAAU;QAC1DpB,UAAUqL;MAAAA,GACT9J,IAAIC;IAAAA,IAEPJ,GACA+J,GACAE,UAEGtN,EAAYoN,IAAWlD,gBAAgB,IAAI;MAC5CjI,UAAUqL;IAAAA;IAIhBA,IAAcnH,aAAaA;IAAAA,QAGQ3H,EAAM6S,QAAQ;QAAA,SAC3CzJ,IAAO,IACP0H,IAAW,IACTC,IAAW,IAEXud,cAAsB3mB,IAErB2mB,EAAgB/nB,SAAQ;UAAA,IACvB7C,IAAS4qB,EAAgB/R;UAC/B3L,GAAoB;YAClBC;YACAzH;YACA0H;YACAC;YACArN;YACA+L;YACAD;YACAwB,kBAAkBpC,IAAWjD;YAC7BmD;UAAAA;QAAAA;QAAAA,OAIG,CAAC1F,GAAM0H,GAAUC;MAAAA,GACvB,CAACpJ,GAAYkJ,GAAMpB,GAAUD,GAAYZ,GAAUE;MAvB/C1F;MAAM0H;MAAUC;IAyBvB5M,OAAOkD,OAAOyH,KAAe;MAC3B1F;MACAmlB,uBAAiBnlB;MACjB0H;MACAC;IAAAA,IAIFpP,EAAUiN,IAAW9C,sBAAsBgD;IAAAA,IAKvC/C,IAAiB/L,EAAM6S,QACzB;MAAA,OACErR,EAAYoN,IAAW7C,gBAAgBpE,GAAY;QACjDlE,UAAUqL;MAAAA,GACT9J,IAAI;QAAAyB,OAAKa,EAAeb,GAAGxG;MAAAA;IAAAA,IAE9B2O,GACAjH,GACAmH,GACA7O,UAEGuB,EAAYoN,IAAW5C,oBAAoB,IAAI;MAChDvI,UAAUqL;IAAAA;IAMhBnH,IAAa3H,EAAM6S,QAAQ;MAAA,IACnBhO,cAAckH;MAAAA,OAEpBpE,EAAW9F,QAAQ;QACZgD,EAAQ2P,KAAK;UAAA/N,OAAKA,EAAErB,OAAO1B,EAAO0B;QAAAA,MACrCP,EAAQ2B,KAAK9C;MAAAA,IAIVmB;IAAAA,GACN,CAAC8C,GAAYoE,KAChB+C,IAAcnH,aAAaA;IAAAA,IAkBrBE,IAAe7H,EAAM6S,QACzB;MAAA,OACErR,EACEoN,IAAW/G,cACXH,EAAiBqE,GAAgB9L,IACjC6O;IAAAA,IAGFF,GACA7C,GACA9L,GACA6O,UAEGtN,EAAYoN,IAAW3C,kBAAkB,IAAI;MAC9CxI,UAAUqL;IAAAA;IAIhBA,IAAcjH,eAAeA;IAAAA,IAGvBK,IAAUlI,EAAM6S,QACpB;MAAA,OAAOhL,EAAatB,SAASsB,EAAa,GAAGK,UAAU;IAAA,GACvD,CAACL;IAEHiH,IAAc5G,UAAUA,GAGxB4G,IAAcJ,cAAc7G,EAAanH,OACvC,UAAC8tB,GAAKvmB;MAAAA,iBAAoBumB,GAAQvmB,EAAYC;IAAAA,GAC9C,KAGFvG,EAAUiN,IAAW1C,6BAA6B4C;IAAAA,IAG5C2f,IAAoB1iB,EACvB/B,OAAO;MAAAvD,OAAKA,EAAEqH;IAAAA,GACd9I,IAAI;MAAAyB,OAAKA,EAAErB;IAAAA,GACXiS,OACAzQ,KAAK;IAERmF,IAAiB/L,EAAM6S,QACrB;MAAA,OAAM9G,EAAe/B,OAAO;QAAAvD,OAAKA,EAAEqH;MAAAA;IAAAA,IAElC/B,GAAgB0iB,KAEnB3f,IAAc/C,iBAAiBA;IAAAA,QAO3B4D,GAAsBzH;MAHxBgkB;MACAL;MACA6C;IAAAA,OAGF5f,IAAcod,uBAAuBA,GACrCpd,IAAc+c,oBAAoBA,GAClC/c,IAAc4f,uBAAuBA,GAErC/sB,EAAUiN,IAAWzC,aAAa2C,gBAI7BA,IAAcJ,aAAgBI,IAAcnH,YAAY9F,QAC3D;MAEE6B,EAAOirB,SAASnrB,EAAasL,KAAepL,IAG5CA,EAAO+I,iBAAiB1L,EAAe6N,IAAWnC,gBAAgB;QAChEhJ,UAAUqL;QACVpL;MAAAA,IAIFA,EAAOgJ,iBAAiB3L,EAAe6N,IAAWlC,gBAAgB;QAChEjJ,UAAUqL;QACVpL;MAAAA;IAAAA,IAKNoL,IAAcjH,eAAe7H,EAAM6S,QACjC;MAAA,OACEhL,EAAamC,OAAO,UAAC/B,GAAa3B;QAAAA,OAEhC2B,EAAYC,UAAUD,EAAYC,QAAQ8B,OAAO;UAAAtG,OAQ3CA,EAAOwE,UAPK,SAAVgB,EAAUhB;YAAAA,OACdA,EAAQ8B,OAAO;cAAAtG,OACTA,EAAOwE,UACFgB,EAAQxF,EAAOwE,WAEjBxE,EAAOoK;YAAAA,GACbvH;UAAAA,CAEI2C,CAAQxF,EAAOwE,WAEjBxE,EAAOoK;QAAAA,MAIZ7F,EAAYC,QAAQ3B,WACtB0B,EAAYsE,sBAAsBxL,EAChC6N,IAAWrC,qBACX;UAAE9I,UAAUqL;UAAe7G;UAAa+C,OAAO1E;QAAAA,IAGjD2B,EAAYuE,sBAAsBzL,EAChC6N,IAAWpC,qBACX;UAAE/I,UAAUqL;UAAe7G;UAAa+C,OAAO1E;QAAAA,KAG1C;MAAA;IAAA,GAKb,CAACuB,GAAciH,GAAaF,KAG9BE,IAAc8f,eAAe,UAAI9f,IAAcjH,cAAcW,WAK7DsG,IAAc1C,aAAapM,EAAM+C,YAC/B;MACE0C,EAAIkH,cAAc5L,EAAe6N,IAAWjC,aAAa;QACvDlJ,UAAUqL;QACVrJ;MAAAA,IAIFA,EAAI8V,WAAW5T,EAAW3C,IAAI;QAAAtB,IACtB5D,IAAQ2F,EAAI8L,OAAO7N,EAAO0B;UAE1BgG,IAAO;YACX1H;YACA+B;YACA3F;UAAAA;QAAAA,OAIFsL,EAAKwB,eAAe7L,EAAe6N,IAAWhC,cAAc;UAC1DnJ,UAAUqL;UACV1D;QAAAA,IAIFA,EAAKujB,SAASnrB,EAAasL,KAAepL,GAAQ;UAChD+B;UACA2F;UACAtL;QAAAA,IAGKsL;MAAAA,IAGT3F,EAAI6L,QAAQvF,EAAe/G,IAAI;QAAAtB,OAC7B+B,EAAI8V,SAAS/G,KAAK;UAAApJ,OAAQA,EAAK1H,OAAO0B,OAAO1B,EAAO0B;QAAAA;MAAAA,IAItDzD,EAAUiN,IAAWxC,YAAY3G,GAAK;QAAEhC,UAAUqL;MAAAA;IAAAA,GAEpD,CAACF,GAAUE,GAAanH,GAAYoE,KAGtC+C,IAAczC,gBAAgBtL,EAAe6N,IAAWvC,eAAe;MACrE5I,UAAUqL;IAAAA,IAGZA,IAAcxC,oBAAoBvL,EAChC6N,IAAWtC,mBACX;MACE7I,UAAUqL;IAAAA,IAIdnN,EAAUiN,IAAW/B,kBAAkBiC,MAEhCA;EAAAA;IAAAA;EAAAA;AAAAA","names":["actions","init","defaultRenderer","e","value","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","isClassComponent","$$typeof","includes","description","isExoticComponent","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","row","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","length","push","d","String","replace","join","reOpenBracket","reCloseBracket","makePathArray","set","cursor","pathPart","getBy","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","subHeader","handleColumn","parentVisible","subColumn","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","undefined","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","s","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","findExpandedDepth","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","__proto__","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","unique","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","g","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateRowsToValues","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","_row$subRows","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","alphanumeric","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","h","y","w","R","oldCellState","cellState","_oldRowState$cellStat","_rowsById$_rowId","_rowsById$_rowId$cell","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","raf","mostRecentClientX","headerIdWidths","leafHeaders","recurseHeader","getLeafHeaders","clientX","round","dispatchEnd","window","cancelAnimationFrame","dispatchMove","scheduleDispatchMoveOnNextAnimationFrame","clientXPos","requestAnimationFrame","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","addEventListener","err","passiveEventSupported","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","_instance$state$colum","startWidths","gridColumn","getElementWidth","acc","minWidths","maxWidths","headerIdGridWidths","getElementById","_document$getElementB","offsetWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","n","l","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"sources":["C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\publicUtils.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\utils.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\makeDefaultPluginHooks.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\hooks\\useColumnVisibility.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\hooks\\useTable.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useExpanded.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\filterTypes.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useFilters.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useGlobalFilter.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\aggregations.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useGroupBy.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\sortTypes.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useSortBy.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\usePagination.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\_UNSTABLE_usePivotColumns.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useRowSelect.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useRowState.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useColumnOrder.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useResizeColumns.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useAbsoluteLayout.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useBlockLayout.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useFlexLayout.js","C:\\Users\\energ\\Downloads\\Telegram Desktop\\students_app_profile (3)\\students_app_profile\\node_modules\\react-table\\src\\plugin-hooks\\useGridLayout.js"],"sourcesContent":["import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { rowsById } = instance\n\n    const isAllRowsExpanded =\n      Object.keys(rowsById).length === Object.keys(state.expanded).length\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows.map((row) => ({ ...row, depth }))\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (row) {\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true\n          } else {\n            delete newSelectedRowIds[id]\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(row => handleRowById(row.id))\n        }\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    let raf\n    let mostRecentClientX\n\n    const dispatchEnd = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnDoneResizing })\n    }\n    const dispatchMove = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnResizing, clientX: mostRecentClientX })\n    }\n\n    const scheduleDispatchMoveOnNextAnimationFrame = clientXPos => {\n      mostRecentClientX = clientXPos\n      if (!raf) {\n        raf = window.requestAnimationFrame(dispatchMove)\n      }\n    }\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => scheduleDispatchMoveOnNextAnimationFrame(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","import { actions } from '../publicUtils'\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getRowProps.push(getRowProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => {\n  const gridTemplateColumns = instance.visibleColumns.map(column => {\n    if (instance.state.gridLayout.columnWidths[column.id])\n      return `${instance.state.gridLayout.columnWidths[column.id]}px`\n    // When resizing, lock the width of all unset columns\n    // instead of using user-provided width or defaultColumn width,\n    // which could potentially be 'auto' or 'fr' units that don't scale linearly\n    if (instance.state.columnResizing?.isResizingColumn)\n      return `${instance.state.gridLayout.startWidths[column.id]}px`\n    if (typeof column.width === 'number') return `${column.width}px`\n    return column.width\n  })\n  return [\n    props,\n    {\n      style: {\n        display: `grid`,\n        gridTemplateColumns: gridTemplateColumns.join(` `),\n      },\n    },\n  ]\n}\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky`, //enables a scroll wrapper to be placed around the table and have sticky headers\n      gridColumn: `span ${column.totalVisibleHeaderCount}`,\n    },\n  },\n]\n\nconst getRowProps = (props, { row }) => {\n  if (row.isExpanded) {\n    return [\n      props,\n      {\n        style: {\n          gridColumn: `1 / ${row.cells.length + 1}`,\n        },\n      },\n    ]\n  }\n  return [props, {}]\n}\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      gridLayout: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      gridLayout: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { columnId, headerIdWidths } = action\n    const columnWidth = getElementWidth(columnId)\n\n    if (columnWidth !== undefined) {\n      const startWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: getElementWidth(column.id),\n        }),\n        {}\n      )\n      const minWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.minWidth,\n        }),\n        {}\n      )\n      const maxWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.maxWidth,\n        }),\n        {}\n      )\n\n      const headerIdGridWidths = headerIdWidths.map(([headerId]) => [\n        headerId,\n        getElementWidth(headerId),\n      ])\n\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          startWidths,\n          minWidths,\n          maxWidths,\n          headerIdGridWidths,\n          columnWidth,\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX } = state.columnResizing\n    const {\n      columnWidth,\n      minWidths,\n      maxWidths,\n      headerIdGridWidths = [],\n    } = state.gridLayout\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdGridWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.min(\n        Math.max(\n          minWidths[headerId],\n          headerWidth + headerWidth * percentageDeltaX\n        ),\n        maxWidths[headerId]\n      )\n    })\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: {\n          ...state.gridLayout.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {},\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}